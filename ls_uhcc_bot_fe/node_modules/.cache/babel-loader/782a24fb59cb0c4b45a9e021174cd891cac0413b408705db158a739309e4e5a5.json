{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useEffect, useContext, useState, useMemo } from 'react';\nimport { useSelect } from 'downshift';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { WarningFilled, WarningAltFilled, Checkmark } from '@carbon/icons-react';\nimport ListBox from '../ListBox/index.js';\nimport mergeRefs from '../../tools/mergeRefs.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport '../FluidForm/FluidForm.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport { useId } from '../../internal/useId.js';\nimport { useFloating, size, flip, autoUpdate } from '@floating-ui/react';\nimport { ListBoxSize, ListBoxType } from '../ListBox/ListBoxPropTypes.js';\nconst {\n  ItemMouseMove,\n  MenuMouseLeave\n} = useSelect.stateChangeTypes;\nconst defaultItemToString = item => {\n  if (typeof item === 'string') {\n    return item;\n  }\n  if (typeof item === 'number') {\n    return \"\".concat(item);\n  }\n  if (item !== null && typeof item === 'object' && 'label' in item && typeof item['label'] === 'string') {\n    return item['label'];\n  }\n  return '';\n};\nconst Dropdown = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  var _slug$type;\n  let {\n    autoAlign = false,\n    className: containerClassName,\n    disabled = false,\n    direction = 'bottom',\n    items,\n    label,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    itemToString = defaultItemToString,\n    itemToElement = null,\n    renderSelectedItem,\n    type = 'default',\n    size: size$1,\n    onChange,\n    id,\n    titleText = '',\n    hideLabel,\n    helperText = '',\n    translateWithId,\n    light,\n    invalid,\n    invalidText,\n    warn,\n    warnText,\n    initialSelectedItem,\n    selectedItem: controlledSelectedItem,\n    downshiftProps,\n    readOnly,\n    slug,\n    ...other\n  } = _ref;\n  const {\n    refs,\n    floatingStyles\n  } = useFloating(autoAlign ? {\n    placement: direction,\n    // The floating element is positioned relative to its nearest\n    // containing block (usually the viewport). It will in many cases also\n    // “break” the floating element out of a clipping ancestor.\n    // https://floating-ui.com/docs/misc#clipping\n    strategy: 'fixed',\n    // Middleware order matters, arrow should be last\n    middleware: [size({\n      apply(_ref2) {\n        let {\n          rects,\n          elements\n        } = _ref2;\n        Object.assign(elements.floating.style, {\n          width: \"\".concat(rects.reference.width, \"px\")\n        });\n      }\n    }), flip()],\n    whileElementsMounted: autoUpdate\n  } : {} // When autoAlign is turned off, floating-ui will not be used\n  );\n  useEffect(() => {\n    if (autoAlign) {\n      Object.keys(floatingStyles).forEach(style => {\n        if (refs.floating.current) {\n          refs.floating.current.style[style] = floatingStyles[style];\n        }\n      });\n    }\n  }, [floatingStyles, autoAlign, refs.floating]);\n  const prefix = usePrefix();\n  const {\n    isFluid\n  } = useContext(FormContext);\n  const selectProps = {\n    items,\n    itemToString,\n    initialSelectedItem,\n    onSelectedItemChange,\n    stateReducer,\n    isItemDisabled(item, _index) {\n      const isObject = item !== null && typeof item === 'object';\n      return isObject && 'disabled' in item && item.disabled === true;\n    },\n    onHighlightedIndexChange: _ref3 => {\n      let {\n        highlightedIndex\n      } = _ref3;\n      if (highlightedIndex > -1 && typeof window !== undefined) {\n        const itemArray = document.querySelectorAll(\"li.\".concat(prefix, \"--list-box__menu-item[role=\\\"option\\\"]\"));\n        const highlightedItem = itemArray[highlightedIndex];\n        if (highlightedItem) {\n          highlightedItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest'\n          });\n        }\n      }\n    },\n    ...downshiftProps\n  };\n  const dropdownInstanceId = useId();\n  function stateReducer(state, actionAndChanges) {\n    const {\n      changes,\n      type\n    } = actionAndChanges;\n    switch (type) {\n      case ItemMouseMove:\n      case MenuMouseLeave:\n        return {\n          ...changes,\n          highlightedIndex: state.highlightedIndex\n        };\n    }\n    return changes;\n  }\n\n  // only set selectedItem if the prop is defined. Setting if it is undefined\n  // will overwrite default selected items from useSelect\n  if (controlledSelectedItem !== undefined) {\n    selectProps.selectedItem = controlledSelectedItem;\n  }\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    selectedItem,\n    highlightedIndex\n  } = useSelect(selectProps);\n  const inline = type === 'inline';\n  const showWarning = !invalid && warn;\n  const [isFocused, setIsFocused] = useState(false);\n  const className = cx(\"\".concat(prefix, \"--dropdown\"), {\n    [\"\".concat(prefix, \"--dropdown--invalid\")]: invalid,\n    [\"\".concat(prefix, \"--dropdown--warning\")]: showWarning,\n    [\"\".concat(prefix, \"--dropdown--open\")]: isOpen,\n    [\"\".concat(prefix, \"--dropdown--inline\")]: inline,\n    [\"\".concat(prefix, \"--dropdown--disabled\")]: disabled,\n    [\"\".concat(prefix, \"--dropdown--light\")]: light,\n    [\"\".concat(prefix, \"--dropdown--readonly\")]: readOnly,\n    [\"\".concat(prefix, \"--dropdown--\").concat(size$1)]: size$1,\n    [\"\".concat(prefix, \"--list-box--up\")]: direction === 'top',\n    [\"\".concat(prefix, \"--dropdown--autoalign\")]: autoAlign\n  });\n  const titleClasses = cx(\"\".concat(prefix, \"--label\"), {\n    [\"\".concat(prefix, \"--label--disabled\")]: disabled,\n    [\"\".concat(prefix, \"--visually-hidden\")]: hideLabel\n  });\n  const helperClasses = cx(\"\".concat(prefix, \"--form__helper-text\"), {\n    [\"\".concat(prefix, \"--form__helper-text--disabled\")]: disabled\n  });\n  const wrapperClasses = cx(\"\".concat(prefix, \"--dropdown__wrapper\"), \"\".concat(prefix, \"--list-box__wrapper\"), containerClassName, {\n    [\"\".concat(prefix, \"--dropdown__wrapper--inline\")]: inline,\n    [\"\".concat(prefix, \"--list-box__wrapper--inline\")]: inline,\n    [\"\".concat(prefix, \"--dropdown__wrapper--inline--invalid\")]: inline && invalid,\n    [\"\".concat(prefix, \"--list-box__wrapper--inline--invalid\")]: inline && invalid,\n    [\"\".concat(prefix, \"--list-box__wrapper--fluid--invalid\")]: isFluid && invalid,\n    [\"\".concat(prefix, \"--list-box__wrapper--fluid--focus\")]: isFluid && isFocused && !isOpen,\n    [\"\".concat(prefix, \"--list-box__wrapper--slug\")]: slug\n  });\n  const helperId = !helperText ? undefined : \"dropdown-helper-text-\".concat(dropdownInstanceId);\n\n  // needs to be Capitalized for react to render it correctly\n  const ItemToElement = itemToElement;\n  const toggleButtonProps = getToggleButtonProps();\n  const helper = helperText && !isFluid ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: helperClasses\n  }, helperText) : null;\n  function onSelectedItemChange(_ref4) {\n    let {\n      selectedItem\n    } = _ref4;\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem !== null && selectedItem !== void 0 ? selectedItem : null\n      });\n    }\n  }\n  const handleFocus = evt => {\n    setIsFocused(evt.type === 'focus' ? true : false);\n  };\n  const mergedRef = mergeRefs(toggleButtonProps.ref, ref);\n  const [currTimer, setCurrTimer] = useState();\n\n  // eslint-disable-next-line prefer-const\n  let [isTyping, setIsTyping] = useState(false);\n  const readOnlyEventHandlers = readOnly ? {\n    onClick: evt => {\n      // NOTE: does not prevent click\n      evt.preventDefault();\n      // focus on the element as per readonly input behavior\n      if (mergedRef.current !== undefined) {\n        mergedRef.current.focus();\n      }\n    },\n    onKeyDown: evt => {\n      const selectAccessKeys = ['ArrowDown', 'ArrowUp', ' ', 'Enter'];\n      // This prevents the select from opening for the above keys\n      if (selectAccessKeys.includes(evt.key)) {\n        evt.preventDefault();\n      }\n    }\n  } : {\n    onKeyDown: evt => {\n      if (evt.code !== 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        setIsTyping(true);\n      }\n      if (isTyping && evt.code === 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        if (currTimer) {\n          clearTimeout(currTimer);\n        }\n        setCurrTimer(setTimeout(() => {\n          setIsTyping(false);\n        }, 3000));\n      }\n      if (toggleButtonProps.onKeyDown) {\n        toggleButtonProps.onKeyDown(evt);\n      }\n    }\n  };\n  const menuProps = useMemo(() => getMenuProps({\n    ref: autoAlign ? refs.setFloating : null\n  }), [autoAlign]);\n\n  // Slug is always size `mini`\n  let normalizedSlug;\n  if (slug && ((_slug$type = slug['type']) === null || _slug$type === void 0 ? void 0 : _slug$type.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'mini'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: wrapperClasses\n  }, other), titleText && /*#__PURE__*/React__default.createElement(\"label\", _extends({\n    className: titleClasses\n  }, getLabelProps()), titleText), /*#__PURE__*/React__default.createElement(ListBox, {\n    onFocus: handleFocus,\n    onBlur: handleFocus,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    size: size$1,\n    className: className,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText,\n    light: light,\n    isOpen: isOpen,\n    ref: autoAlign ? refs.setReference : null,\n    id: id\n  }, invalid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: \"\".concat(prefix, \"--list-box__invalid-icon\")\n  }), showWarning && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: \"\".concat(prefix, \"--list-box__invalid-icon \").concat(prefix, \"--list-box__invalid-icon--warning\")\n  }), /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // aria-expanded is already being passed through {...toggleButtonProps}\n    ,\n\n    className: \"\".concat(prefix, \"--list-box__field\"),\n    disabled: disabled,\n    \"aria-disabled\": readOnly ? true : undefined // aria-disabled to remain focusable\n    ,\n\n    \"aria-describedby\": !inline && !invalid && !warn && helper ? helperId : undefined,\n    title: selectedItem && itemToString !== undefined ? itemToString(selectedItem) : defaultItemToString(label)\n  }, toggleButtonProps, readOnlyEventHandlers, {\n    ref: mergedRef\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  }, selectedItem ? renderSelectedItem ? renderSelectedItem(selectedItem) : itemToString(selectedItem) : label), /*#__PURE__*/React__default.createElement(ListBox.MenuIcon, {\n    isOpen: isOpen,\n    translateWithId: translateWithId\n  })), normalizedSlug, /*#__PURE__*/React__default.createElement(ListBox.Menu, menuProps, isOpen && items.map((item, index) => {\n    const isObject = item !== null && typeof item === 'object';\n    const itemProps = getItemProps({\n      item,\n      index\n    });\n    if (item !== null && typeof item === 'object' && Object.prototype.hasOwnProperty.call(item, 'id')) {\n      itemProps.id = item['id'];\n    }\n    const title = isObject && 'text' in item && itemToElement ? item.text : itemToString(item);\n    return /*#__PURE__*/React__default.createElement(ListBox.MenuItem, _extends({\n      key: itemProps.id,\n      isActive: selectedItem === item,\n      isHighlighted: highlightedIndex === index,\n      title: title,\n      disabled: itemProps['aria-disabled']\n    }, itemProps), typeof item === 'object' && ItemToElement !== undefined && ItemToElement !== null ? /*#__PURE__*/React__default.createElement(ItemToElement, _extends({\n      key: itemProps.id\n    }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React__default.createElement(Checkmark, {\n      className: \"\".concat(prefix, \"--list-box__menu-item__selected-icon\")\n    }));\n  }))), !inline && !invalid && !warn && helper);\n});\nDropdown.displayName = 'Dropdown';\nDropdown.propTypes = {\n  /**\n   * 'aria-label' of the ListBox component.\n   * Specify a label to be read by screen readers on the container node\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify a label to be read by screen readers on the container note.\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * **Experimental**: Will attempt to automatically align the floating element to avoid collisions with the viewport and being clipped by ancestor elements.\n   */\n  autoAlign: PropTypes.bool,\n  /**\n   * Provide a custom className to be applied on the cds--dropdown node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the direction of the dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom']),\n  /**\n   * Disable the control\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Additional props passed to Downshift.\n   *\n   * **Use with caution:** anything you define here overrides the components'\n   * internal handling of that prop. Downshift APIs and internals are subject to\n   * change, and in some cases they can not be shimmed by Carbon to shield you\n   * from potentially breaking changes.\n   */\n  downshiftProps: PropTypes.object,\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the title text should be hidden or not\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Specify a custom `id`\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Function to render items as custom components instead of strings.\n   * Defaults to null and is overridden by a getter\n   */\n  itemToElement: PropTypes.func,\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list.\n   */\n  itemToString: PropTypes.func,\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n  /**\n   * Generic `label` that will be used as the textual representation of what\n   * this field is for\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Dropdown` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component what kind of internal state changes are occurring.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Whether or not the Dropdown is readonly\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * An optional callback to render the currently selected item as a react element instead of only\n   * as a string.\n   */\n  renderSelectedItem: PropTypes.func,\n  /**\n   * In the case you want to control the dropdown selection entirely.\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `md` or `lg` as an option.\n   */\n  size: ListBoxSize,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `Dropdown` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Provide the title text that will be read by a screen reader when\n   * visiting this control\n   */\n  titleText: PropTypes.node.isRequired,\n  /**\n   * Callback function for translating ListBoxMenuIcon SVG title\n   */\n  translateWithId: PropTypes.func,\n  /**\n   * The dropdown type, `default` or `inline`\n   */\n  type: ListBoxType,\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\nexport { Dropdown as default };","map":{"version":3,"names":["extends","_extends","React__default","useEffect","useContext","useState","useMemo","useSelect","cx","PropTypes","WarningFilled","WarningAltFilled","Checkmark","ListBox","mergeRefs","deprecate","usePrefix","FormContext","useId","useFloating","size","flip","autoUpdate","ListBoxSize","ListBoxType","ItemMouseMove","MenuMouseLeave","stateChangeTypes","defaultItemToString","item","concat","Dropdown","forwardRef","_ref","ref","_slug$type","autoAlign","className","containerClassName","disabled","direction","items","label","ariaLabel","deprecatedAriaLabel","itemToString","itemToElement","renderSelectedItem","type","size$1","onChange","id","titleText","hideLabel","helperText","translateWithId","light","invalid","invalidText","warn","warnText","initialSelectedItem","selectedItem","controlledSelectedItem","downshiftProps","readOnly","slug","other","refs","floatingStyles","placement","strategy","middleware","apply","_ref2","rects","elements","Object","assign","floating","style","width","reference","whileElementsMounted","keys","forEach","current","prefix","isFluid","selectProps","onSelectedItemChange","stateReducer","isItemDisabled","_index","isObject","onHighlightedIndexChange","_ref3","highlightedIndex","window","undefined","itemArray","document","querySelectorAll","highlightedItem","scrollIntoView","behavior","block","dropdownInstanceId","state","actionAndChanges","changes","isOpen","getToggleButtonProps","getLabelProps","getMenuProps","getItemProps","inline","showWarning","isFocused","setIsFocused","titleClasses","helperClasses","wrapperClasses","helperId","ItemToElement","toggleButtonProps","helper","createElement","_ref4","handleFocus","evt","mergedRef","currTimer","setCurrTimer","isTyping","setIsTyping","readOnlyEventHandlers","onClick","preventDefault","focus","onKeyDown","selectAccessKeys","includes","key","code","clearTimeout","setTimeout","menuProps","setFloating","normalizedSlug","displayName","cloneElement","onFocus","onBlur","setReference","title","MenuIcon","Menu","map","index","itemProps","prototype","hasOwnProperty","call","text","MenuItem","isActive","isHighlighted","propTypes","string","bool","oneOf","object","node","isRequired","oneOfType","number","func","array","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Dropdown/Dropdown.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useEffect, useContext, useState, useMemo } from 'react';\nimport { useSelect } from 'downshift';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { WarningFilled, WarningAltFilled, Checkmark } from '@carbon/icons-react';\nimport ListBox from '../ListBox/index.js';\nimport mergeRefs from '../../tools/mergeRefs.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport '../FluidForm/FluidForm.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nimport { useId } from '../../internal/useId.js';\nimport { useFloating, size, flip, autoUpdate } from '@floating-ui/react';\nimport { ListBoxSize, ListBoxType } from '../ListBox/ListBoxPropTypes.js';\n\nconst {\n  ItemMouseMove,\n  MenuMouseLeave\n} = useSelect.stateChangeTypes;\nconst defaultItemToString = item => {\n  if (typeof item === 'string') {\n    return item;\n  }\n  if (typeof item === 'number') {\n    return `${item}`;\n  }\n  if (item !== null && typeof item === 'object' && 'label' in item && typeof item['label'] === 'string') {\n    return item['label'];\n  }\n  return '';\n};\nconst Dropdown = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  let {\n    autoAlign = false,\n    className: containerClassName,\n    disabled = false,\n    direction = 'bottom',\n    items,\n    label,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    itemToString = defaultItemToString,\n    itemToElement = null,\n    renderSelectedItem,\n    type = 'default',\n    size: size$1,\n    onChange,\n    id,\n    titleText = '',\n    hideLabel,\n    helperText = '',\n    translateWithId,\n    light,\n    invalid,\n    invalidText,\n    warn,\n    warnText,\n    initialSelectedItem,\n    selectedItem: controlledSelectedItem,\n    downshiftProps,\n    readOnly,\n    slug,\n    ...other\n  } = _ref;\n  const {\n    refs,\n    floatingStyles\n  } = useFloating(autoAlign ? {\n    placement: direction,\n    // The floating element is positioned relative to its nearest\n    // containing block (usually the viewport). It will in many cases also\n    // “break” the floating element out of a clipping ancestor.\n    // https://floating-ui.com/docs/misc#clipping\n    strategy: 'fixed',\n    // Middleware order matters, arrow should be last\n    middleware: [size({\n      apply(_ref2) {\n        let {\n          rects,\n          elements\n        } = _ref2;\n        Object.assign(elements.floating.style, {\n          width: `${rects.reference.width}px`\n        });\n      }\n    }), flip()],\n    whileElementsMounted: autoUpdate\n  } : {} // When autoAlign is turned off, floating-ui will not be used\n  );\n  useEffect(() => {\n    if (autoAlign) {\n      Object.keys(floatingStyles).forEach(style => {\n        if (refs.floating.current) {\n          refs.floating.current.style[style] = floatingStyles[style];\n        }\n      });\n    }\n  }, [floatingStyles, autoAlign, refs.floating]);\n  const prefix = usePrefix();\n  const {\n    isFluid\n  } = useContext(FormContext);\n  const selectProps = {\n    items,\n    itemToString,\n    initialSelectedItem,\n    onSelectedItemChange,\n    stateReducer,\n    isItemDisabled(item, _index) {\n      const isObject = item !== null && typeof item === 'object';\n      return isObject && 'disabled' in item && item.disabled === true;\n    },\n    onHighlightedIndexChange: _ref3 => {\n      let {\n        highlightedIndex\n      } = _ref3;\n      if (highlightedIndex > -1 && typeof window !== undefined) {\n        const itemArray = document.querySelectorAll(`li.${prefix}--list-box__menu-item[role=\"option\"]`);\n        const highlightedItem = itemArray[highlightedIndex];\n        if (highlightedItem) {\n          highlightedItem.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest'\n          });\n        }\n      }\n    },\n    ...downshiftProps\n  };\n  const dropdownInstanceId = useId();\n  function stateReducer(state, actionAndChanges) {\n    const {\n      changes,\n      type\n    } = actionAndChanges;\n    switch (type) {\n      case ItemMouseMove:\n      case MenuMouseLeave:\n        return {\n          ...changes,\n          highlightedIndex: state.highlightedIndex\n        };\n    }\n    return changes;\n  }\n\n  // only set selectedItem if the prop is defined. Setting if it is undefined\n  // will overwrite default selected items from useSelect\n  if (controlledSelectedItem !== undefined) {\n    selectProps.selectedItem = controlledSelectedItem;\n  }\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getLabelProps,\n    getMenuProps,\n    getItemProps,\n    selectedItem,\n    highlightedIndex\n  } = useSelect(selectProps);\n  const inline = type === 'inline';\n  const showWarning = !invalid && warn;\n  const [isFocused, setIsFocused] = useState(false);\n  const className = cx(`${prefix}--dropdown`, {\n    [`${prefix}--dropdown--invalid`]: invalid,\n    [`${prefix}--dropdown--warning`]: showWarning,\n    [`${prefix}--dropdown--open`]: isOpen,\n    [`${prefix}--dropdown--inline`]: inline,\n    [`${prefix}--dropdown--disabled`]: disabled,\n    [`${prefix}--dropdown--light`]: light,\n    [`${prefix}--dropdown--readonly`]: readOnly,\n    [`${prefix}--dropdown--${size$1}`]: size$1,\n    [`${prefix}--list-box--up`]: direction === 'top',\n    [`${prefix}--dropdown--autoalign`]: autoAlign\n  });\n  const titleClasses = cx(`${prefix}--label`, {\n    [`${prefix}--label--disabled`]: disabled,\n    [`${prefix}--visually-hidden`]: hideLabel\n  });\n  const helperClasses = cx(`${prefix}--form__helper-text`, {\n    [`${prefix}--form__helper-text--disabled`]: disabled\n  });\n  const wrapperClasses = cx(`${prefix}--dropdown__wrapper`, `${prefix}--list-box__wrapper`, containerClassName, {\n    [`${prefix}--dropdown__wrapper--inline`]: inline,\n    [`${prefix}--list-box__wrapper--inline`]: inline,\n    [`${prefix}--dropdown__wrapper--inline--invalid`]: inline && invalid,\n    [`${prefix}--list-box__wrapper--inline--invalid`]: inline && invalid,\n    [`${prefix}--list-box__wrapper--fluid--invalid`]: isFluid && invalid,\n    [`${prefix}--list-box__wrapper--fluid--focus`]: isFluid && isFocused && !isOpen,\n    [`${prefix}--list-box__wrapper--slug`]: slug\n  });\n  const helperId = !helperText ? undefined : `dropdown-helper-text-${dropdownInstanceId}`;\n\n  // needs to be Capitalized for react to render it correctly\n  const ItemToElement = itemToElement;\n  const toggleButtonProps = getToggleButtonProps();\n  const helper = helperText && !isFluid ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: helperClasses\n  }, helperText) : null;\n  function onSelectedItemChange(_ref4) {\n    let {\n      selectedItem\n    } = _ref4;\n    if (onChange) {\n      onChange({\n        selectedItem: selectedItem ?? null\n      });\n    }\n  }\n  const handleFocus = evt => {\n    setIsFocused(evt.type === 'focus' ? true : false);\n  };\n  const mergedRef = mergeRefs(toggleButtonProps.ref, ref);\n  const [currTimer, setCurrTimer] = useState();\n\n  // eslint-disable-next-line prefer-const\n  let [isTyping, setIsTyping] = useState(false);\n  const readOnlyEventHandlers = readOnly ? {\n    onClick: evt => {\n      // NOTE: does not prevent click\n      evt.preventDefault();\n      // focus on the element as per readonly input behavior\n      if (mergedRef.current !== undefined) {\n        mergedRef.current.focus();\n      }\n    },\n    onKeyDown: evt => {\n      const selectAccessKeys = ['ArrowDown', 'ArrowUp', ' ', 'Enter'];\n      // This prevents the select from opening for the above keys\n      if (selectAccessKeys.includes(evt.key)) {\n        evt.preventDefault();\n      }\n    }\n  } : {\n    onKeyDown: evt => {\n      if (evt.code !== 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        setIsTyping(true);\n      }\n      if (isTyping && evt.code === 'Space' || !['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(evt.key)) {\n        if (currTimer) {\n          clearTimeout(currTimer);\n        }\n        setCurrTimer(setTimeout(() => {\n          setIsTyping(false);\n        }, 3000));\n      }\n      if (toggleButtonProps.onKeyDown) {\n        toggleButtonProps.onKeyDown(evt);\n      }\n    }\n  };\n  const menuProps = useMemo(() => getMenuProps({\n    ref: autoAlign ? refs.setFloating : null\n  }), [autoAlign]);\n\n  // Slug is always size `mini`\n  let normalizedSlug;\n  if (slug && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'mini'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: wrapperClasses\n  }, other), titleText && /*#__PURE__*/React__default.createElement(\"label\", _extends({\n    className: titleClasses\n  }, getLabelProps()), titleText), /*#__PURE__*/React__default.createElement(ListBox, {\n    onFocus: handleFocus,\n    onBlur: handleFocus,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    size: size$1,\n    className: className,\n    invalid: invalid,\n    invalidText: invalidText,\n    warn: warn,\n    warnText: warnText,\n    light: light,\n    isOpen: isOpen,\n    ref: autoAlign ? refs.setReference : null,\n    id: id\n  }, invalid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--list-box__invalid-icon`\n  }), showWarning && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--list-box__invalid-icon ${prefix}--list-box__invalid-icon--warning`\n  }), /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // aria-expanded is already being passed through {...toggleButtonProps}\n    ,\n    className: `${prefix}--list-box__field`,\n    disabled: disabled,\n    \"aria-disabled\": readOnly ? true : undefined // aria-disabled to remain focusable\n    ,\n    \"aria-describedby\": !inline && !invalid && !warn && helper ? helperId : undefined,\n    title: selectedItem && itemToString !== undefined ? itemToString(selectedItem) : defaultItemToString(label)\n  }, toggleButtonProps, readOnlyEventHandlers, {\n    ref: mergedRef\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--list-box__label`\n  }, selectedItem ? renderSelectedItem ? renderSelectedItem(selectedItem) : itemToString(selectedItem) : label), /*#__PURE__*/React__default.createElement(ListBox.MenuIcon, {\n    isOpen: isOpen,\n    translateWithId: translateWithId\n  })), normalizedSlug, /*#__PURE__*/React__default.createElement(ListBox.Menu, menuProps, isOpen && items.map((item, index) => {\n    const isObject = item !== null && typeof item === 'object';\n    const itemProps = getItemProps({\n      item,\n      index\n    });\n    if (item !== null && typeof item === 'object' && Object.prototype.hasOwnProperty.call(item, 'id')) {\n      itemProps.id = item['id'];\n    }\n    const title = isObject && 'text' in item && itemToElement ? item.text : itemToString(item);\n    return /*#__PURE__*/React__default.createElement(ListBox.MenuItem, _extends({\n      key: itemProps.id,\n      isActive: selectedItem === item,\n      isHighlighted: highlightedIndex === index,\n      title: title,\n      disabled: itemProps['aria-disabled']\n    }, itemProps), typeof item === 'object' && ItemToElement !== undefined && ItemToElement !== null ? /*#__PURE__*/React__default.createElement(ItemToElement, _extends({\n      key: itemProps.id\n    }, item)) : itemToString(item), selectedItem === item && /*#__PURE__*/React__default.createElement(Checkmark, {\n      className: `${prefix}--list-box__menu-item__selected-icon`\n    }));\n  }))), !inline && !invalid && !warn && helper);\n});\nDropdown.displayName = 'Dropdown';\nDropdown.propTypes = {\n  /**\n   * 'aria-label' of the ListBox component.\n   * Specify a label to be read by screen readers on the container node\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify a label to be read by screen readers on the container note.\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * **Experimental**: Will attempt to automatically align the floating element to avoid collisions with the viewport and being clipped by ancestor elements.\n   */\n  autoAlign: PropTypes.bool,\n  /**\n   * Provide a custom className to be applied on the cds--dropdown node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the direction of the dropdown. Can be either top or bottom.\n   */\n  direction: PropTypes.oneOf(['top', 'bottom']),\n  /**\n   * Disable the control\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Additional props passed to Downshift.\n   *\n   * **Use with caution:** anything you define here overrides the components'\n   * internal handling of that prop. Downshift APIs and internals are subject to\n   * change, and in some cases they can not be shimmed by Carbon to shield you\n   * from potentially breaking changes.\n   */\n  downshiftProps: PropTypes.object,\n  /**\n   * Provide helper text that is used alongside the control label for\n   * additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the title text should be hidden or not\n   */\n  hideLabel: PropTypes.bool,\n  /**\n   * Specify a custom `id`\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Allow users to pass in an arbitrary item or a string (in case their items are an array of strings)\n   * from their collection that are pre-selected\n   */\n  initialSelectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n  /**\n   * Specify if the currently selected value is invalid.\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Message which is displayed if the value is invalid.\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Function to render items as custom components instead of strings.\n   * Defaults to null and is overridden by a getter\n   */\n  itemToElement: PropTypes.func,\n  /**\n   * Helper function passed to downshift that allows the library to render a\n   * given item to a string label. By default, it extracts the `label` field\n   * from a given item to serve as the item label in the list.\n   */\n  itemToString: PropTypes.func,\n  /**\n   * We try to stay as generic as possible here to allow individuals to pass\n   * in a collection of whatever kind of data structure they prefer\n   */\n  items: PropTypes.array.isRequired,\n  /**\n   * Generic `label` that will be used as the textual representation of what\n   * this field is for\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * `true` to use the light version.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Dropdown` has ' + 'been deprecated in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * `onChange` is a utility for this controlled component to communicate to a\n   * consuming component what kind of internal state changes are occurring.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Whether or not the Dropdown is readonly\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * An optional callback to render the currently selected item as a react element instead of only\n   * as a string.\n   */\n  renderSelectedItem: PropTypes.func,\n  /**\n   * In the case you want to control the dropdown selection entirely.\n   */\n  selectedItem: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.number]),\n  /**\n   * Specify the size of the ListBox. Currently supports either `sm`, `md` or `lg` as an option.\n   */\n  size: ListBoxSize,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `Dropdown` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Provide the title text that will be read by a screen reader when\n   * visiting this control\n   */\n  titleText: PropTypes.node.isRequired,\n  /**\n   * Callback function for translating ListBoxMenuIcon SVG title\n   */\n  translateWithId: PropTypes.func,\n  /**\n   * The dropdown type, `default` or `inline`\n   */\n  type: ListBoxType,\n  /**\n   * Specify whether the control is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the control is in warning state\n   */\n  warnText: PropTypes.node\n};\n\nexport { Dropdown as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}