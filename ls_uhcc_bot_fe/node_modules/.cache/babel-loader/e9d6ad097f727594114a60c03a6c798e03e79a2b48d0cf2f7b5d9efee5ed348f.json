{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport RadioButton from '../RadioButton/RadioButton.js';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nconst TableSelectRow = _ref => {\n  let {\n    ariaLabel: deprecatedAriaLabel,\n    ['aria-label']: ariaLabel,\n    checked,\n    id,\n    name,\n    onSelect,\n    onChange,\n    disabled,\n    radio,\n    className\n  } = _ref;\n  const prefix = usePrefix();\n  const uniqueNameId = useId();\n  const selectionInputProps = {\n    id,\n    name: name ? name : uniqueNameId,\n    onClick: onSelect,\n    onChange,\n    checked,\n    disabled\n  };\n  const InlineInputComponent = radio ? RadioButton : InlineCheckbox;\n  const tableSelectRowClasses = cx(\"\".concat(prefix, \"--table-column-checkbox\"), {\n    ...(className && {\n      [className]: true\n    }),\n    [\"\".concat(prefix, \"--table-column-radio\")]: radio\n  });\n  return /*#__PURE__*/React__default.createElement(\"td\", {\n    className: tableSelectRowClasses,\n    \"aria-live\": \"off\"\n  }, /*#__PURE__*/React__default.createElement(InlineInputComponent, _extends({}, selectionInputProps, radio && {\n    labelText: ariaLabel || deprecatedAriaLabel,\n    hideLabel: true\n  }, !radio && {\n    'aria-label': ariaLabel || deprecatedAriaLabel\n  })));\n};\nTableSelectRow.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * Specify whether this row is selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired,\n  /**\n   * Specify whether the control should be a radio button or inline checkbox\n   */\n  radio: PropTypes.bool\n};\nexport { TableSelectRow as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","InlineCheckbox","RadioButton","useId","usePrefix","deprecate","TableSelectRow","_ref","ariaLabel","deprecatedAriaLabel","checked","id","name","onSelect","onChange","disabled","radio","className","prefix","uniqueNameId","selectionInputProps","onClick","InlineInputComponent","tableSelectRowClasses","concat","createElement","labelText","hideLabel","propTypes","string","bool","isRequired","func","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/DataTable/TableSelectRow.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport RadioButton from '../RadioButton/RadioButton.js';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\n\nconst TableSelectRow = _ref => {\n  let {\n    ariaLabel: deprecatedAriaLabel,\n    ['aria-label']: ariaLabel,\n    checked,\n    id,\n    name,\n    onSelect,\n    onChange,\n    disabled,\n    radio,\n    className\n  } = _ref;\n  const prefix = usePrefix();\n  const uniqueNameId = useId();\n  const selectionInputProps = {\n    id,\n    name: name ? name : uniqueNameId,\n    onClick: onSelect,\n    onChange,\n    checked,\n    disabled\n  };\n  const InlineInputComponent = radio ? RadioButton : InlineCheckbox;\n  const tableSelectRowClasses = cx(`${prefix}--table-column-checkbox`, {\n    ...(className && {\n      [className]: true\n    }),\n    [`${prefix}--table-column-radio`]: radio\n  });\n  return /*#__PURE__*/React__default.createElement(\"td\", {\n    className: tableSelectRowClasses,\n    \"aria-live\": \"off\"\n  }, /*#__PURE__*/React__default.createElement(InlineInputComponent, _extends({}, selectionInputProps, radio && {\n    labelText: ariaLabel || deprecatedAriaLabel,\n    hideLabel: true\n  }, !radio && {\n    'aria-label': ariaLabel || deprecatedAriaLabel\n  })));\n};\nTableSelectRow.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * Specify whether this row is selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired,\n  /**\n   * Specify whether the control should be a radio button or inline checkbox\n   */\n  radio: PropTypes.bool\n};\n\nexport { TableSelectRow as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,qCAAqC;AAChE,OAAOC,WAAW,MAAM,+BAA+B;AACvD,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,SAAS,MAAM,+BAA+B;AAErD,MAAMC,cAAc,GAAGC,IAAI,IAAI;EAC7B,IAAI;IACFC,SAAS,EAAEC,mBAAmB;IAC9B,CAAC,YAAY,GAAGD,SAAS;IACzBE,OAAO;IACPC,EAAE;IACFC,IAAI;IACJC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,KAAK;IACLC;EACF,CAAC,GAAGV,IAAI;EACR,MAAMW,MAAM,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMe,YAAY,GAAGhB,KAAK,CAAC,CAAC;EAC5B,MAAMiB,mBAAmB,GAAG;IAC1BT,EAAE;IACFC,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAGO,YAAY;IAChCE,OAAO,EAAER,QAAQ;IACjBC,QAAQ;IACRJ,OAAO;IACPK;EACF,CAAC;EACD,MAAMO,oBAAoB,GAAGN,KAAK,GAAGd,WAAW,GAAGD,cAAc;EACjE,MAAMsB,qBAAqB,GAAGvB,EAAE,IAAAwB,MAAA,CAAIN,MAAM,8BAA2B;IACnE,IAAID,SAAS,IAAI;MACf,CAACA,SAAS,GAAG;IACf,CAAC,CAAC;IACF,IAAAO,MAAA,CAAIN,MAAM,4BAAyBF;EACrC,CAAC,CAAC;EACF,OAAO,aAAajB,cAAc,CAAC0B,aAAa,CAAC,IAAI,EAAE;IACrDR,SAAS,EAAEM,qBAAqB;IAChC,WAAW,EAAE;EACf,CAAC,EAAE,aAAaxB,cAAc,CAAC0B,aAAa,CAACH,oBAAoB,EAAEzB,QAAQ,CAAC,CAAC,CAAC,EAAEuB,mBAAmB,EAAEJ,KAAK,IAAI;IAC5GU,SAAS,EAAElB,SAAS,IAAIC,mBAAmB;IAC3CkB,SAAS,EAAE;EACb,CAAC,EAAE,CAACX,KAAK,IAAI;IACX,YAAY,EAAER,SAAS,IAAIC;EAC7B,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;AACDH,cAAc,CAACsB,SAAS,GAAG;EACzB;AACF;AACA;EACE,CAAC,YAAY,GAAG9B,SAAS,CAAC+B,MAAM;EAChC;AACF;AACA;AACA;EACErB,SAAS,EAAEH,SAAS,CAACP,SAAS,CAAC+B,MAAM,EAAE,wEAAwE,CAAC;EAChH;AACF;AACA;EACEnB,OAAO,EAAEZ,SAAS,CAACgC,IAAI,CAACC,UAAU;EAClC;AACF;AACA;EACEd,SAAS,EAAEnB,SAAS,CAAC+B,MAAM;EAC3B;AACF;AACA;EACEd,QAAQ,EAAEjB,SAAS,CAACgC,IAAI;EACxB;AACF;AACA;EACEnB,EAAE,EAAEb,SAAS,CAAC+B,MAAM,CAACE,UAAU;EAC/B;AACF;AACA;EACEnB,IAAI,EAAEd,SAAS,CAAC+B,MAAM,CAACE,UAAU;EACjC;AACF;AACA;EACEjB,QAAQ,EAAEhB,SAAS,CAACkC,IAAI;EACxB;AACF;AACA;EACEnB,QAAQ,EAAEf,SAAS,CAACkC,IAAI,CAACD,UAAU;EACnC;AACF;AACA;EACEf,KAAK,EAAElB,SAAS,CAACgC;AACnB,CAAC;AAED,SAASxB,cAAc,IAAI2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}