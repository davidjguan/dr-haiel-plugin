{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { ChevronRight } from '@carbon/icons-react';\nimport TableCell from './TableCell.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst TableExpandRow = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  let {\n    ['aria-controls']: ariaControls,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    className: rowClassName,\n    children,\n    isExpanded,\n    onExpand,\n    expandIconDescription,\n    isSelected,\n    expandHeader = 'expand',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n\n  // We need to put the slug before the expansion arrow and all other table cells after the arrow.\n  let rowHasSlug;\n  const slug = React__default.Children.toArray(children).map(child => {\n    var _child$type;\n    if (((_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) === 'TableSlugRow') {\n      if (child.props.slug) {\n        rowHasSlug = true;\n      }\n      return child;\n    }\n  });\n  const normalizedChildren = React__default.Children.toArray(children).map(child => {\n    var _child$type2;\n    if (((_child$type2 = child.type) === null || _child$type2 === void 0 ? void 0 : _child$type2.displayName) !== 'TableSlugRow') {\n      return child;\n    }\n  });\n  const className = cx({\n    [\"\".concat(prefix, \"--parent-row\")]: true,\n    [\"\".concat(prefix, \"--expandable-row\")]: isExpanded,\n    [\"\".concat(prefix, \"--data-table--selected\")]: isSelected,\n    [\"\".concat(prefix, \"--data-table--slug-row\")]: rowHasSlug\n  }, rowClassName);\n  const previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React__default.createElement(\"tr\", _extends({}, rest, {\n    ref: ref,\n    className: className,\n    \"data-parent-row\": true\n  }), slug, /*#__PURE__*/React__default.createElement(TableCell, {\n    className: \"\".concat(prefix, \"--table-expand\"),\n    \"data-previous-value\": previousValue,\n    headers: expandHeader\n  }, /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": ariaControls\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  }))), normalizedChildren);\n});\nTableExpandRow.propTypes = {\n  /**\n   * Space separated list of one or more ID values referencing the TableExpandedRow(s) being controlled by the TableExpandRow\n   * TODO: make this required in v12\n   */\n  ['aria-controls']: PropTypes.string,\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  /**@ts-ignore*/\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * The id of the matching th node in the table head. Addresses a11y concerns outlined here: https://www.ibm.com/able/guidelines/ci162/info_and_relationships.html and https://www.w3.org/TR/WCAG20-TECHS/H43\n   */\n  expandHeader: PropTypes.string,\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: PropTypes.bool.isRequired,\n  /**\n   * Specify if the row is selected\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.func.isRequired\n};\nTableExpandRow.displayName = 'TableExpandRow';\nexport { TableExpandRow as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","ChevronRight","TableCell","usePrefix","TableExpandRow","forwardRef","_ref","ref","ariaControls","ariaLabel","deprecatedAriaLabel","className","rowClassName","children","isExpanded","onExpand","expandIconDescription","isSelected","expandHeader","rest","prefix","rowHasSlug","slug","Children","toArray","map","child","_child$type","type","displayName","props","normalizedChildren","_child$type2","concat","previousValue","undefined","createElement","headers","onClick","title","propTypes","string","node","bool","isRequired","func","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/DataTable/TableExpandRow.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { ChevronRight } from '@carbon/icons-react';\nimport TableCell from './TableCell.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst TableExpandRow = /*#__PURE__*/React__default.forwardRef((_ref, ref) => {\n  let {\n    ['aria-controls']: ariaControls,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    className: rowClassName,\n    children,\n    isExpanded,\n    onExpand,\n    expandIconDescription,\n    isSelected,\n    expandHeader = 'expand',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n\n  // We need to put the slug before the expansion arrow and all other table cells after the arrow.\n  let rowHasSlug;\n  const slug = React__default.Children.toArray(children).map(child => {\n    if (child.type?.displayName === 'TableSlugRow') {\n      if (child.props.slug) {\n        rowHasSlug = true;\n      }\n      return child;\n    }\n  });\n  const normalizedChildren = React__default.Children.toArray(children).map(child => {\n    if (child.type?.displayName !== 'TableSlugRow') {\n      return child;\n    }\n  });\n  const className = cx({\n    [`${prefix}--parent-row`]: true,\n    [`${prefix}--expandable-row`]: isExpanded,\n    [`${prefix}--data-table--selected`]: isSelected,\n    [`${prefix}--data-table--slug-row`]: rowHasSlug\n  }, rowClassName);\n  const previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React__default.createElement(\"tr\", _extends({}, rest, {\n    ref: ref,\n    className: className,\n    \"data-parent-row\": true\n  }), slug, /*#__PURE__*/React__default.createElement(TableCell, {\n    className: `${prefix}--table-expand`,\n    \"data-previous-value\": previousValue,\n    headers: expandHeader\n  }, /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    className: `${prefix}--table-expand__button`,\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": ariaControls\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: `${prefix}--table-expand__svg`,\n    \"aria-label\": expandIconDescription\n  }))), normalizedChildren);\n});\nTableExpandRow.propTypes = {\n  /**\n   * Space separated list of one or more ID values referencing the TableExpandedRow(s) being controlled by the TableExpandRow\n   * TODO: make this required in v12\n   */\n  ['aria-controls']: PropTypes.string,\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  /**@ts-ignore*/\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * The id of the matching th node in the table head. Addresses a11y concerns outlined here: https://www.ibm.com/able/guidelines/ci162/info_and_relationships.html and https://www.w3.org/TR/WCAG20-TECHS/H43\n   */\n  expandHeader: PropTypes.string,\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: PropTypes.bool.isRequired,\n  /**\n   * Specify if the row is selected\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.func.isRequired\n};\nTableExpandRow.displayName = 'TableExpandRow';\n\nexport { TableExpandRow as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}