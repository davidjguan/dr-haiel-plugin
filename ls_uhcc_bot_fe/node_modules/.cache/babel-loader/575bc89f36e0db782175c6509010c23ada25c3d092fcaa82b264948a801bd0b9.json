{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useRef, useState, useEffect } from 'react';\n\n/**\n * @param {React.RefObject<HTMLElement>} ref\n *\n * @param {{\n *   onPress?(state: { longPress: boolean }): void,\n *   onPressIn?(): void,\n *   onPressOut?(): void,\n *   onLongPress?(): void,\n *   delayLongPressMs?: number,\n * }} options\n */\nfunction usePressable(ref) {\n  let {\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayLongPressMs = 500\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const savedOnPress = useRef(onPress);\n  const savedOnPressIn = useRef(onPressIn);\n  const savedOnPressOut = useRef(onPressOut);\n  const savedOnLongPress = useRef(onLongPress);\n  const [pendingLongPress, setPendingLongPress] = useState(false);\n  const [longPress, setLongPress] = useState(false);\n  const state = useRef({\n    longPress: false\n  });\n  useEffect(() => {\n    savedOnPress.current = onPress;\n  }, [onPress]);\n  useEffect(() => {\n    savedOnPressIn.current = onPressIn;\n  }, [onPressIn]);\n  useEffect(() => {\n    savedOnPressOut.current = onPressOut;\n  }, [onPressOut]);\n  useEffect(() => {\n    savedOnLongPress.current = onLongPress;\n  }, [onLongPress]);\n  useEffect(() => {\n    const {\n      current: element\n    } = ref;\n\n    // Fired when a pointer becomes active buttons state.\n    function onPointerDown(event) {\n      var _savedOnPressIn$curre;\n      setPendingLongPress(true);\n      (_savedOnPressIn$curre = savedOnPressIn.current) === null || _savedOnPressIn$curre === void 0 || _savedOnPressIn$curre.call(savedOnPressIn);\n      event.preventDefault();\n    }\n\n    // Fired when a pointer is no longer active buttons state.\n    function onPointerUp() {\n      var _savedOnPressOut$curr;\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr = savedOnPressOut.current) === null || _savedOnPressOut$curr === void 0 || _savedOnPressOut$curr.call(savedOnPressOut, state.current);\n    }\n\n    // A browser fires this event if it concludes the pointer\n    // will no longer be able to generate events (for example\n    // the related device is deactivated).\n    function onPointerCancel() {\n      var _savedOnPressOut$curr2;\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr2 = savedOnPressOut.current) === null || _savedOnPressOut$curr2 === void 0 || _savedOnPressOut$curr2.call(savedOnPressOut);\n      state.current.longPress = false;\n    }\n\n    // Fired when a pointer is moved out of the hit test\n    // boundaries of an element. For pen devices, this event\n    // is fired when the stylus leaves the hover range\n    // detectable by the digitizer.\n    function onPointerLeave() {\n      var _savedOnPressOut$curr3;\n      setPendingLongPress(false);\n      setLongPress(false);\n      (_savedOnPressOut$curr3 = savedOnPressOut.current) === null || _savedOnPressOut$curr3 === void 0 || _savedOnPressOut$curr3.call(savedOnPressOut);\n      state.current.longPress = false;\n    }\n    function onClick() {\n      var _savedOnPress$current;\n      setLongPress(false);\n      setPendingLongPress(false);\n      (_savedOnPress$current = savedOnPress.current) === null || _savedOnPress$current === void 0 || _savedOnPress$current.call(savedOnPress, state.current);\n      state.current.longPress = false;\n    }\n\n    // Certain devices treat long press events as context menu triggers\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    element.addEventListener('pointerup', onPointerUp);\n    element.addEventListener('pointercancel', onPointerCancel);\n    element.addEventListener('pointerleave', onPointerLeave);\n    element.addEventListener('click', onClick);\n    element.addEventListener('contextmenu', onContextMenu);\n    return () => {\n      element.removeEventListener('pointerdown', onPointerDown);\n      element.removeEventListener('pointerup', onPointerUp);\n      element.removeEventListener('pointercancel', onPointerCancel);\n      element.removeEventListener('pointerleave', onPointerLeave);\n      element.removeEventListener('click', onClick);\n      element.removeEventListener('contextmenu', onContextMenu);\n    };\n  }, [ref]);\n  useEffect(() => {\n    if (pendingLongPress) {\n      const timeoutId = setTimeout(() => {\n        setPendingLongPress(false);\n        setLongPress(true);\n      }, delayLongPressMs);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [pendingLongPress, delayLongPressMs]);\n  useEffect(() => {\n    if (longPress) {\n      var _savedOnLongPress$cur;\n      state.current.longPress = true;\n      return (_savedOnLongPress$cur = savedOnLongPress.current) === null || _savedOnLongPress$cur === void 0 ? void 0 : _savedOnLongPress$cur.call(savedOnLongPress);\n    }\n  }, [longPress]);\n}\nexport { usePressable };","map":{"version":3,"names":["useRef","useState","useEffect","usePressable","ref","onPress","onPressIn","onPressOut","onLongPress","delayLongPressMs","arguments","length","undefined","savedOnPress","savedOnPressIn","savedOnPressOut","savedOnLongPress","pendingLongPress","setPendingLongPress","longPress","setLongPress","state","current","element","onPointerDown","event","_savedOnPressIn$curre","call","preventDefault","onPointerUp","_savedOnPressOut$curr","onPointerCancel","_savedOnPressOut$curr2","onPointerLeave","_savedOnPressOut$curr3","onClick","_savedOnPress$current","onContextMenu","addEventListener","removeEventListener","timeoutId","setTimeout","clearTimeout","_savedOnLongPress$cur"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Tabs/usePressable.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useRef, useState, useEffect } from 'react';\n\n/**\n * @param {React.RefObject<HTMLElement>} ref\n *\n * @param {{\n *   onPress?(state: { longPress: boolean }): void,\n *   onPressIn?(): void,\n *   onPressOut?(): void,\n *   onLongPress?(): void,\n *   delayLongPressMs?: number,\n * }} options\n */\nfunction usePressable(ref) {\n  let {\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayLongPressMs = 500\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const savedOnPress = useRef(onPress);\n  const savedOnPressIn = useRef(onPressIn);\n  const savedOnPressOut = useRef(onPressOut);\n  const savedOnLongPress = useRef(onLongPress);\n  const [pendingLongPress, setPendingLongPress] = useState(false);\n  const [longPress, setLongPress] = useState(false);\n  const state = useRef({\n    longPress: false\n  });\n  useEffect(() => {\n    savedOnPress.current = onPress;\n  }, [onPress]);\n  useEffect(() => {\n    savedOnPressIn.current = onPressIn;\n  }, [onPressIn]);\n  useEffect(() => {\n    savedOnPressOut.current = onPressOut;\n  }, [onPressOut]);\n  useEffect(() => {\n    savedOnLongPress.current = onLongPress;\n  }, [onLongPress]);\n  useEffect(() => {\n    const {\n      current: element\n    } = ref;\n\n    // Fired when a pointer becomes active buttons state.\n    function onPointerDown(event) {\n      setPendingLongPress(true);\n      savedOnPressIn.current?.();\n      event.preventDefault();\n    }\n\n    // Fired when a pointer is no longer active buttons state.\n    function onPointerUp() {\n      setPendingLongPress(false);\n      setLongPress(false);\n      savedOnPressOut.current?.(state.current);\n    }\n\n    // A browser fires this event if it concludes the pointer\n    // will no longer be able to generate events (for example\n    // the related device is deactivated).\n    function onPointerCancel() {\n      setPendingLongPress(false);\n      setLongPress(false);\n      savedOnPressOut.current?.();\n      state.current.longPress = false;\n    }\n\n    // Fired when a pointer is moved out of the hit test\n    // boundaries of an element. For pen devices, this event\n    // is fired when the stylus leaves the hover range\n    // detectable by the digitizer.\n    function onPointerLeave() {\n      setPendingLongPress(false);\n      setLongPress(false);\n      savedOnPressOut.current?.();\n      state.current.longPress = false;\n    }\n    function onClick() {\n      setLongPress(false);\n      setPendingLongPress(false);\n      savedOnPress.current?.(state.current);\n      state.current.longPress = false;\n    }\n\n    // Certain devices treat long press events as context menu triggers\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n    element.addEventListener('pointerdown', onPointerDown);\n    element.addEventListener('pointerup', onPointerUp);\n    element.addEventListener('pointercancel', onPointerCancel);\n    element.addEventListener('pointerleave', onPointerLeave);\n    element.addEventListener('click', onClick);\n    element.addEventListener('contextmenu', onContextMenu);\n    return () => {\n      element.removeEventListener('pointerdown', onPointerDown);\n      element.removeEventListener('pointerup', onPointerUp);\n      element.removeEventListener('pointercancel', onPointerCancel);\n      element.removeEventListener('pointerleave', onPointerLeave);\n      element.removeEventListener('click', onClick);\n      element.removeEventListener('contextmenu', onContextMenu);\n    };\n  }, [ref]);\n  useEffect(() => {\n    if (pendingLongPress) {\n      const timeoutId = setTimeout(() => {\n        setPendingLongPress(false);\n        setLongPress(true);\n      }, delayLongPressMs);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n  }, [pendingLongPress, delayLongPressMs]);\n  useEffect(() => {\n    if (longPress) {\n      state.current.longPress = true;\n      return savedOnLongPress.current?.();\n    }\n  }, [longPress]);\n}\n\nexport { usePressable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}