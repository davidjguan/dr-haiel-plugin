{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space, Escape } from '../../internal/keyboard/keys.js';\n\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\n\nclass HeaderMenu extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"_subMenus\", /*#__PURE__*/React__default.createRef());\n    _defineProperty(this, \"items\", []);\n    _defineProperty(this, \"menuButtonRef\", null);\n    /**\n     * Toggle the expanded state of the menu on click.\n     */\n    _defineProperty(this, \"handleOnClick\", e => {\n      const {\n        current: subMenusNode\n      } = this._subMenus;\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n    /**\n     * Keyboard event handler for the entire menu.\n     */\n    _defineProperty(this, \"handleOnKeyDown\", event => {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if (matches(event, [Enter, Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(prevState => ({\n          expanded: !prevState.expanded\n        }));\n        return;\n      }\n    });\n    /**\n     * Handle our blur event from our underlying menuitems. Will mostly be used\n     * for closing our menu in response to a user clicking off or tabbing out of\n     * the menu or menubar.\n     */\n    _defineProperty(this, \"handleOnBlur\", event => {\n      var _this$_subMenus$curre;\n      // Close the menu on blur when the related target is not a sibling menu item\n      // or a child in a submenu\n      const siblingItemBlurredTo = this.items.find(element => element === event.relatedTarget);\n      const childItemBlurredTo = (_this$_subMenus$curre = this._subMenus.current) === null || _this$_subMenus$curre === void 0 ? void 0 : _this$_subMenus$curre.contains(event.relatedTarget);\n      if (!siblingItemBlurredTo && !childItemBlurredTo) {\n        this.setState({\n          expanded: false,\n          selectedIndex: null\n        });\n      }\n    });\n    /**\n     * ref handler for our menu button. If we are supplied a `focusRef` prop, we also\n     * forward along the node.\n     *\n     * This is useful when this component is a child in a\n     * menu or menubar as it will allow the parent to explicitly focus the menu\n     * button node when that child should receive focus.\n     */\n    _defineProperty(this, \"handleMenuButtonRef\", node => {\n      const {\n        focusRef\n      } = this.props;\n      // Check if focusRef is a function before calling it\n      if (typeof focusRef === 'function') {\n        focusRef(node);\n      }\n      this.menuButtonRef = node;\n    });\n    /**\n     * Handles individual menuitem refs. We assign them to a class instance\n     * property so that we can properly manage focus of our children.\n     */\n    _defineProperty(this, \"handleItemRef\", index => node => {\n      this.items[index] = node;\n    });\n    _defineProperty(this, \"handleMenuClose\", event => {\n      // Handle ESC keydown for closing the expanded menu.\n      if (matches(event, [Escape]) && this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(() => ({\n          expanded: false,\n          selectedIndex: null\n        }));\n\n        // Return focus to menu button when the user hits ESC.\n        if (this.menuButtonRef !== null) {\n          this.menuButtonRef.focus();\n        }\n        return;\n      }\n    });\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n    _defineProperty(this, \"_renderMenuItem\", (item, index) => {\n      if ( /*#__PURE__*/React__default.isValidElement(item)) {\n        return /*#__PURE__*/React__default.cloneElement(item, {\n          ref: this.handleItemRef(index)\n        });\n      }\n    });\n    this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    this.items = [];\n  }\n  render() {\n    const prefix = this.context;\n    const {\n      isActive,\n      isCurrentPage,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      className: customClassName,\n      children,\n      renderMenuContent: MenuContent,\n      menuLinkName,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      focusRef,\n      onBlur,\n      onClick,\n      onKeyDown,\n      ...rest\n    } = this.props;\n    const hasActiveDescendant = childrenArg => React__default.Children.toArray(childrenArg).some(child => /*#__PURE__*/React__default.isValidElement(child) && (\n    // This is the type guard\n    child.props.isActive || child.props.isCurrentPage || Array.isArray(child.props.children) && hasActiveDescendant(child.props.children)));\n    const accessibilityLabel = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy\n    };\n    const itemClassName = cx({\n      [\"\".concat(prefix, \"--header__submenu\")]: true,\n      [\"\".concat(customClassName)]: !!customClassName\n    });\n    const isActivePage = isActive ? isActive : isCurrentPage;\n    const linkClassName = cx({\n      [\"\".concat(prefix, \"--header__menu-item\")]: true,\n      [\"\".concat(prefix, \"--header__menu-title\")]: true,\n      // We set the current class only if `isActive` is passed in and we do\n      // not have an `aria-current=\"page\"` set for the breadcrumb item\n      [\"\".concat(prefix, \"--header__menu-item--current\")]: isActivePage || hasActiveDescendant(children) && !this.state.expanded\n    });\n\n    // Notes on eslint comments and based on the examples in:\n    // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n    // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n    // users\n    // - aria-haspopup can definitely have the value \"menu\"\n    // - aria-expanded is on their example node with role=\"menuitem\"\n    // - href can be set to javascript:void(0), ideally this will be a button\n    return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n      className: itemClassName,\n      onKeyDown: composeEventHandlers([onKeyDown, this.handleMenuClose]),\n      onClick: composeEventHandlers([onClick, this.handleOnClick]),\n      onBlur: composeEventHandlers([onBlur, this.handleOnBlur])\n    }), /*#__PURE__*/React__default.createElement(\"a\", _extends({\n      // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n      \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n      ,\n\n      \"aria-expanded\": this.state.expanded,\n      className: linkClassName,\n      href: \"#\",\n      onKeyDown: this.handleOnKeyDown,\n      ref: this.handleMenuButtonRef,\n      tabIndex: 0\n    }, accessibilityLabel), menuLinkName, MenuContent ? /*#__PURE__*/React__default.createElement(MenuContent, null) : /*#__PURE__*/React__default.createElement(ChevronDown, {\n      className: \"\".concat(this.context, \"--header__menu-arrow\")\n    })), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n      ref: this._subMenus,\n      className: \"\".concat(prefix, \"--header__menu\")\n    }), React__default.Children.map(children, this._renderMenuItem)));\n  }\n}\n_defineProperty(HeaderMenu, \"propTypes\", {\n  /**\n   * Required props for the accessibility label of the menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: PropTypes.func,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   * @deprecated Please use `isActive` instead. This will be removed in the next major release.\n   */\n  isCurrentPage: deprecate(PropTypes.bool, 'The `isCurrentPage` prop for `HeaderMenu` has ' + 'been deprecated. Please use `isActive` instead. This will be removed in the next major release.'),\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: PropTypes.string.isRequired,\n  /**\n   * Optionally provide an onBlur handler that is called when the underlying\n   * button fires it's onblur event\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Optionally provide an onKeyDown handler that is called when the underlying\n   * button fires it's onkeydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: PropTypes.func,\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: PropTypes.number\n});\n_defineProperty(HeaderMenu, \"contextType\", PrefixContext);\nconst HeaderMenuForwardRef = /*#__PURE__*/React__default.forwardRef((props, ref) => {\n  return /*#__PURE__*/React__default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\nexport { HeaderMenu, HeaderMenuForwardRef as default };","map":{"version":3,"names":["defineProperty","_defineProperty","extends","_extends","ChevronDown","cx","React__default","PropTypes","AriaLabelPropType","PrefixContext","deprecate","composeEventHandlers","matches","Enter","Space","Escape","HeaderMenu","Component","constructor","props","createRef","e","current","subMenusNode","_subMenus","contains","target","preventDefault","setState","prevState","expanded","event","stopPropagation","_this$_subMenus$curre","siblingItemBlurredTo","items","find","element","relatedTarget","childItemBlurredTo","selectedIndex","node","focusRef","menuButtonRef","index","state","focus","item","isValidElement","cloneElement","ref","handleItemRef","render","prefix","context","isActive","isCurrentPage","ariaLabel","ariaLabelledBy","className","customClassName","children","renderMenuContent","MenuContent","menuLinkName","onBlur","onClick","onKeyDown","rest","hasActiveDescendant","childrenArg","Children","toArray","some","child","Array","isArray","accessibilityLabel","itemClassName","concat","isActivePage","linkClassName","createElement","handleMenuClose","handleOnClick","handleOnBlur","href","handleOnKeyDown","handleMenuButtonRef","tabIndex","map","_renderMenuItem","string","func","bool","isRequired","number","HeaderMenuForwardRef","forwardRef","displayName","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/UIShell/HeaderMenu.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space, Escape } from '../../internal/keyboard/keys.js';\n\n/**\n * `HeaderMenu` is used to render submenu's in the `Header`. Most often children\n * will be a `HeaderMenuItem`. It handles certain keyboard events to help\n * with managing focus. It also passes along refs to each child so that it can\n * help manage focus state of its children.\n */\n\nclass HeaderMenu extends React__default.Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"_subMenus\", /*#__PURE__*/React__default.createRef());\n    _defineProperty(this, \"items\", []);\n    _defineProperty(this, \"menuButtonRef\", null);\n    /**\n     * Toggle the expanded state of the menu on click.\n     */\n    _defineProperty(this, \"handleOnClick\", e => {\n      const {\n        current: subMenusNode\n      } = this._subMenus;\n      if (!subMenusNode || !subMenusNode.contains(e.target)) {\n        e.preventDefault();\n      }\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    });\n    /**\n     * Keyboard event handler for the entire menu.\n     */\n    _defineProperty(this, \"handleOnKeyDown\", event => {\n      // Handle enter or space key for toggling the expanded state of the menu.\n      if (matches(event, [Enter, Space])) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(prevState => ({\n          expanded: !prevState.expanded\n        }));\n        return;\n      }\n    });\n    /**\n     * Handle our blur event from our underlying menuitems. Will mostly be used\n     * for closing our menu in response to a user clicking off or tabbing out of\n     * the menu or menubar.\n     */\n    _defineProperty(this, \"handleOnBlur\", event => {\n      // Close the menu on blur when the related target is not a sibling menu item\n      // or a child in a submenu\n      const siblingItemBlurredTo = this.items.find(element => element === event.relatedTarget);\n      const childItemBlurredTo = this._subMenus.current?.contains(event.relatedTarget);\n      if (!siblingItemBlurredTo && !childItemBlurredTo) {\n        this.setState({\n          expanded: false,\n          selectedIndex: null\n        });\n      }\n    });\n    /**\n     * ref handler for our menu button. If we are supplied a `focusRef` prop, we also\n     * forward along the node.\n     *\n     * This is useful when this component is a child in a\n     * menu or menubar as it will allow the parent to explicitly focus the menu\n     * button node when that child should receive focus.\n     */\n    _defineProperty(this, \"handleMenuButtonRef\", node => {\n      const {\n        focusRef\n      } = this.props;\n      // Check if focusRef is a function before calling it\n      if (typeof focusRef === 'function') {\n        focusRef(node);\n      }\n      this.menuButtonRef = node;\n    });\n    /**\n     * Handles individual menuitem refs. We assign them to a class instance\n     * property so that we can properly manage focus of our children.\n     */\n    _defineProperty(this, \"handleItemRef\", index => node => {\n      this.items[index] = node;\n    });\n    _defineProperty(this, \"handleMenuClose\", event => {\n      // Handle ESC keydown for closing the expanded menu.\n      if (matches(event, [Escape]) && this.state.expanded) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.setState(() => ({\n          expanded: false,\n          selectedIndex: null\n        }));\n\n        // Return focus to menu button when the user hits ESC.\n        if (this.menuButtonRef !== null) {\n          this.menuButtonRef.focus();\n        }\n        return;\n      }\n    });\n    /**\n     * We capture the `ref` for each child inside of `this.items` to properly\n     * manage focus. In addition to this focus management, all items receive a\n     * `tabIndex: -1` so the user won't hit a large number of items in their tab\n     * sequence when they might not want to go through all the items.\n     */\n    _defineProperty(this, \"_renderMenuItem\", (item, index) => {\n      if ( /*#__PURE__*/React__default.isValidElement(item)) {\n        return /*#__PURE__*/React__default.cloneElement(item, {\n          ref: this.handleItemRef(index)\n        });\n      }\n    });\n    this.state = {\n      // Used to manage the expansion state of the menu\n      expanded: false,\n      // Refers to the menuitem that is currently focused\n      // Note: children should have `role=\"menuitem\"` on node consuming ref\n      selectedIndex: null\n    };\n    this.items = [];\n  }\n  render() {\n    const prefix = this.context;\n    const {\n      isActive,\n      isCurrentPage,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      className: customClassName,\n      children,\n      renderMenuContent: MenuContent,\n      menuLinkName,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      focusRef,\n      onBlur,\n      onClick,\n      onKeyDown,\n      ...rest\n    } = this.props;\n    const hasActiveDescendant = childrenArg => React__default.Children.toArray(childrenArg).some(child => /*#__PURE__*/React__default.isValidElement(child) && (\n    // This is the type guard\n    child.props.isActive || child.props.isCurrentPage || Array.isArray(child.props.children) && hasActiveDescendant(child.props.children)));\n    const accessibilityLabel = {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy\n    };\n    const itemClassName = cx({\n      [`${prefix}--header__submenu`]: true,\n      [`${customClassName}`]: !!customClassName\n    });\n    const isActivePage = isActive ? isActive : isCurrentPage;\n    const linkClassName = cx({\n      [`${prefix}--header__menu-item`]: true,\n      [`${prefix}--header__menu-title`]: true,\n      // We set the current class only if `isActive` is passed in and we do\n      // not have an `aria-current=\"page\"` set for the breadcrumb item\n      [`${prefix}--header__menu-item--current`]: isActivePage || hasActiveDescendant(children) && !this.state.expanded\n    });\n\n    // Notes on eslint comments and based on the examples in:\n    // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html#\n    // - The focus is handled by the <a> menuitem, onMouseOver is for mouse\n    // users\n    // - aria-haspopup can definitely have the value \"menu\"\n    // - aria-expanded is on their example node with role=\"menuitem\"\n    // - href can be set to javascript:void(0), ideally this will be a button\n    return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n      className: itemClassName,\n      onKeyDown: composeEventHandlers([onKeyDown, this.handleMenuClose]),\n      onClick: composeEventHandlers([onClick, this.handleOnClick]),\n      onBlur: composeEventHandlers([onBlur, this.handleOnBlur])\n    }), /*#__PURE__*/React__default.createElement(\"a\", _extends({\n      // eslint-disable-line jsx-a11y/role-supports-aria-props,jsx-a11y/anchor-is-valid\n      \"aria-haspopup\": \"menu\" // eslint-disable-line jsx-a11y/aria-proptypes\n      ,\n      \"aria-expanded\": this.state.expanded,\n      className: linkClassName,\n      href: \"#\",\n      onKeyDown: this.handleOnKeyDown,\n      ref: this.handleMenuButtonRef,\n      tabIndex: 0\n    }, accessibilityLabel), menuLinkName, MenuContent ? /*#__PURE__*/React__default.createElement(MenuContent, null) : /*#__PURE__*/React__default.createElement(ChevronDown, {\n      className: `${this.context}--header__menu-arrow`\n    })), /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, accessibilityLabel, {\n      ref: this._subMenus,\n      className: `${prefix}--header__menu`\n    }), React__default.Children.map(children, this._renderMenuItem)));\n  }\n}\n_defineProperty(HeaderMenu, \"propTypes\", {\n  /**\n   * Required props for the accessibility label of the menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide a custom ref handler for the menu button\n   */\n  focusRef: PropTypes.func,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Applies selected styles to the item if a user sets this to true and `aria-current !== 'page'`.\n   * @deprecated Please use `isActive` instead. This will be removed in the next major release.\n   */\n  isCurrentPage: deprecate(PropTypes.bool, 'The `isCurrentPage` prop for `HeaderMenu` has ' + 'been deprecated. Please use `isActive` instead. This will be removed in the next major release.'),\n  /**\n   * Provide a label for the link text\n   */\n  menuLinkName: PropTypes.string.isRequired,\n  /**\n   * Optionally provide an onBlur handler that is called when the underlying\n   * button fires it's onblur event\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Optionally provide an onClick handler that is called when the underlying\n   * button fires it's onclick event\n   */\n  onClick: PropTypes.func,\n  /**\n   * Optionally provide an onKeyDown handler that is called when the underlying\n   * button fires it's onkeydown event\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Optional component to render instead of string\n   */\n  renderMenuContent: PropTypes.func,\n  /**\n   * Optionally provide a tabIndex for the underlying menu button\n   */\n  tabIndex: PropTypes.number\n});\n_defineProperty(HeaderMenu, \"contextType\", PrefixContext);\nconst HeaderMenuForwardRef = /*#__PURE__*/React__default.forwardRef((props, ref) => {\n  return /*#__PURE__*/React__default.createElement(HeaderMenu, _extends({}, props, {\n    focusRef: ref\n  }));\n});\nHeaderMenuForwardRef.displayName = 'HeaderMenu';\n\nexport { HeaderMenu, HeaderMenuForwardRef as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}