{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nconst TableSelectAll = _ref => {\n  let {\n    ariaLabel: deprecatedAriaLabel = 'Select all rows in the table',\n    ['aria-label']: ariaLabel,\n    checked,\n    id,\n    indeterminate,\n    name,\n    onSelect,\n    disabled,\n    className\n  } = _ref;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"th\", {\n    \"aria-live\": \"off\",\n    scope: \"col\",\n    className: cx(\"\".concat(prefix, \"--table-column-checkbox\"), className)\n  }, /*#__PURE__*/React__default.createElement(InlineCheckbox, {\n    \"aria-label\": ariaLabel || deprecatedAriaLabel,\n    checked: checked,\n    id: id,\n    indeterminate: indeterminate,\n    name: name,\n    onClick: onSelect,\n    disabled: disabled\n  }));\n};\nTableSelectAll.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * Specify whether all items are selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the checkbox input should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the selection only has a subset of all items\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired\n};\nexport { TableSelectAll as default };","map":{"version":3,"names":["PropTypes","React__default","InlineCheckbox","cx","usePrefix","deprecate","TableSelectAll","_ref","ariaLabel","deprecatedAriaLabel","checked","id","indeterminate","name","onSelect","disabled","className","prefix","createElement","scope","concat","onClick","propTypes","string","bool","isRequired","func","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/DataTable/TableSelectAll.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport InlineCheckbox from '../InlineCheckbox/InlineCheckbox.js';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\n\nconst TableSelectAll = _ref => {\n  let {\n    ariaLabel: deprecatedAriaLabel = 'Select all rows in the table',\n    ['aria-label']: ariaLabel,\n    checked,\n    id,\n    indeterminate,\n    name,\n    onSelect,\n    disabled,\n    className\n  } = _ref;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"th\", {\n    \"aria-live\": \"off\",\n    scope: \"col\",\n    className: cx(`${prefix}--table-column-checkbox`, className)\n  }, /*#__PURE__*/React__default.createElement(InlineCheckbox, {\n    \"aria-label\": ariaLabel || deprecatedAriaLabel,\n    checked: checked,\n    id: id,\n    indeterminate: indeterminate,\n    name: name,\n    onClick: onSelect,\n    disabled: disabled\n  }));\n};\nTableSelectAll.propTypes = {\n  /**\n   * Specify the aria label for the underlying input control\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the aria label for the underlying input control\n   */\n  ariaLabel: deprecate(PropTypes.string, 'This prop syntax has been deprecated. Please use the new `aria-label`.'),\n  /**\n   * Specify whether all items are selected, or not\n   */\n  checked: PropTypes.bool.isRequired,\n  /**\n   * The CSS class names of the cell that wraps the underlying input control\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the checkbox input should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n  /**\n   * Specify whether the selection only has a subset of all items\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide a handler to listen to when a user initiates a selection request\n   */\n  onSelect: PropTypes.func.isRequired\n};\n\nexport { TableSelectAll as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,cAAc,MAAM,qCAAqC;AAChE,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,SAAS,MAAM,+BAA+B;AAErD,MAAMC,cAAc,GAAGC,IAAI,IAAI;EAC7B,IAAI;IACFC,SAAS,EAAEC,mBAAmB,GAAG,8BAA8B;IAC/D,CAAC,YAAY,GAAGD,SAAS;IACzBE,OAAO;IACPC,EAAE;IACFC,aAAa;IACbC,IAAI;IACJC,QAAQ;IACRC,QAAQ;IACRC;EACF,CAAC,GAAGT,IAAI;EACR,MAAMU,MAAM,GAAGb,SAAS,CAAC,CAAC;EAC1B,OAAO,aAAaH,cAAc,CAACiB,aAAa,CAAC,IAAI,EAAE;IACrD,WAAW,EAAE,KAAK;IAClBC,KAAK,EAAE,KAAK;IACZH,SAAS,EAAEb,EAAE,IAAAiB,MAAA,CAAIH,MAAM,8BAA2BD,SAAS;EAC7D,CAAC,EAAE,aAAaf,cAAc,CAACiB,aAAa,CAAChB,cAAc,EAAE;IAC3D,YAAY,EAAEM,SAAS,IAAIC,mBAAmB;IAC9CC,OAAO,EAAEA,OAAO;IAChBC,EAAE,EAAEA,EAAE;IACNC,aAAa,EAAEA,aAAa;IAC5BC,IAAI,EAAEA,IAAI;IACVQ,OAAO,EAAEP,QAAQ;IACjBC,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC;AACDT,cAAc,CAACgB,SAAS,GAAG;EACzB;AACF;AACA;EACE,CAAC,YAAY,GAAGtB,SAAS,CAACuB,MAAM;EAChC;AACF;AACA;AACA;EACEf,SAAS,EAAEH,SAAS,CAACL,SAAS,CAACuB,MAAM,EAAE,wEAAwE,CAAC;EAChH;AACF;AACA;EACEb,OAAO,EAAEV,SAAS,CAACwB,IAAI,CAACC,UAAU;EAClC;AACF;AACA;EACET,SAAS,EAAEhB,SAAS,CAACuB,MAAM;EAC3B;AACF;AACA;EACER,QAAQ,EAAEf,SAAS,CAACwB,IAAI;EACxB;AACF;AACA;EACEb,EAAE,EAAEX,SAAS,CAACuB,MAAM,CAACE,UAAU;EAC/B;AACF;AACA;EACEb,aAAa,EAAEZ,SAAS,CAACwB,IAAI;EAC7B;AACF;AACA;EACEX,IAAI,EAAEb,SAAS,CAACuB,MAAM,CAACE,UAAU;EACjC;AACF;AACA;EACEX,QAAQ,EAAEd,SAAS,CAAC0B,IAAI,CAACD;AAC3B,CAAC;AAED,SAASnB,cAAc,IAAIqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}