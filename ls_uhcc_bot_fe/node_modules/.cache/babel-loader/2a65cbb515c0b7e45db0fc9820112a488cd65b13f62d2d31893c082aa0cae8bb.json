{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { useId } from '../../internal/useId.js';\nconst CheckboxGroup = _ref => {\n  var _slug$type;\n  let {\n    children,\n    className,\n    helperText,\n    invalid,\n    invalidText,\n    legendId,\n    legendText,\n    readOnly,\n    warn,\n    warnText,\n    slug,\n    orientation = 'vertical',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const showWarning = !readOnly && !invalid && warn;\n  const showHelper = !invalid && !warn;\n  const checkboxGroupInstanceId = useId();\n  const helperId = !helperText ? undefined : \"checkbox-group-helper-text-\".concat(checkboxGroupInstanceId);\n  const helper = helperText ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: \"\".concat(prefix, \"--form__helper-text\")\n  }, helperText) : null;\n  const fieldsetClasses = cx(\"\".concat(prefix, \"--checkbox-group\"), className, {\n    [\"\".concat(prefix, \"--checkbox-group--\").concat(orientation)]: orientation === 'horizontal',\n    [\"\".concat(prefix, \"--checkbox-group--readonly\")]: readOnly,\n    [\"\".concat(prefix, \"--checkbox-group--invalid\")]: !readOnly && invalid,\n    [\"\".concat(prefix, \"--checkbox-group--warning\")]: showWarning,\n    [\"\".concat(prefix, \"--checkbox-group--slug\")]: slug\n  });\n\n  // Slug is always size `mini`\n  let normalizedSlug;\n  if ( /*#__PURE__*/React__default.isValidElement(slug) && ((_slug$type = slug['type']) === null || _slug$type === void 0 ? void 0 : _slug$type.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'mini',\n      kind: 'default'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"fieldset\", _extends({\n    className: fieldsetClasses,\n    \"data-invalid\": invalid ? true : undefined,\n    \"aria-labelledby\": rest['aria-labelledby'] || legendId,\n    \"aria-readonly\": readOnly,\n    \"aria-describedby\": !invalid && !warn && helper ? helperId : undefined\n  }, rest), /*#__PURE__*/React__default.createElement(\"legend\", {\n    className: \"\".concat(prefix, \"--label\"),\n    id: legendId || rest['aria-labelledby']\n  }, legendText, normalizedSlug), children, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--checkbox-group__validation-msg\")\n  }, !readOnly && invalid && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: \"\".concat(prefix, \"--checkbox__invalid-icon\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-requirement\")\n  }, invalidText)), showWarning && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: \"\".concat(prefix, \"--checkbox__invalid-icon \").concat(prefix, \"--checkbox__invalid-icon--warning\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-requirement\")\n  }, warnText))), showHelper && helper);\n};\nCheckboxGroup.propTypes = {\n  /**\n   * Provide the children form elements to be rendered inside of the <fieldset>\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing <fieldset> node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide text for the form group for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the form group is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the form group is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide id for the fieldset <legend> which corresponds to the fieldset\n   * `aria-labelledby`\n   */\n  legendId: PropTypes.node,\n  /**\n   * Provide the text to be rendered inside of the fieldset <legend>\n   */\n  legendText: PropTypes.node.isRequired,\n  /**\n   * Provide the orientation for how the checkbox should be displayed\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * Whether the CheckboxGroup should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `CheckboxGroup` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Specify whether the form group is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the form group is in warning state\n   */\n  warnText: PropTypes.node\n};\nvar CheckboxGroup$1 = CheckboxGroup;\nexport { CheckboxGroup$1 as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","WarningFilled","WarningAltFilled","useId","CheckboxGroup","_ref","_slug$type","children","className","helperText","invalid","invalidText","legendId","legendText","readOnly","warn","warnText","slug","orientation","rest","prefix","showWarning","showHelper","checkboxGroupInstanceId","helperId","undefined","concat","helper","createElement","id","fieldsetClasses","normalizedSlug","isValidElement","displayName","cloneElement","size","kind","Fragment","propTypes","node","string","bool","isRequired","oneOf","CheckboxGroup$1","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/CheckboxGroup/CheckboxGroup.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport { useId } from '../../internal/useId.js';\n\nconst CheckboxGroup = _ref => {\n  let {\n    children,\n    className,\n    helperText,\n    invalid,\n    invalidText,\n    legendId,\n    legendText,\n    readOnly,\n    warn,\n    warnText,\n    slug,\n    orientation = 'vertical',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const showWarning = !readOnly && !invalid && warn;\n  const showHelper = !invalid && !warn;\n  const checkboxGroupInstanceId = useId();\n  const helperId = !helperText ? undefined : `checkbox-group-helper-text-${checkboxGroupInstanceId}`;\n  const helper = helperText ? /*#__PURE__*/React__default.createElement(\"div\", {\n    id: helperId,\n    className: `${prefix}--form__helper-text`\n  }, helperText) : null;\n  const fieldsetClasses = cx(`${prefix}--checkbox-group`, className, {\n    [`${prefix}--checkbox-group--${orientation}`]: orientation === 'horizontal',\n    [`${prefix}--checkbox-group--readonly`]: readOnly,\n    [`${prefix}--checkbox-group--invalid`]: !readOnly && invalid,\n    [`${prefix}--checkbox-group--warning`]: showWarning,\n    [`${prefix}--checkbox-group--slug`]: slug\n  });\n\n  // Slug is always size `mini`\n  let normalizedSlug;\n  if ( /*#__PURE__*/React__default.isValidElement(slug) && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'mini',\n      kind: 'default'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"fieldset\", _extends({\n    className: fieldsetClasses,\n    \"data-invalid\": invalid ? true : undefined,\n    \"aria-labelledby\": rest['aria-labelledby'] || legendId,\n    \"aria-readonly\": readOnly,\n    \"aria-describedby\": !invalid && !warn && helper ? helperId : undefined\n  }, rest), /*#__PURE__*/React__default.createElement(\"legend\", {\n    className: `${prefix}--label`,\n    id: legendId || rest['aria-labelledby']\n  }, legendText, normalizedSlug), children, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--checkbox-group__validation-msg`\n  }, !readOnly && invalid && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningFilled, {\n    className: `${prefix}--checkbox__invalid-icon`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form-requirement`\n  }, invalidText)), showWarning && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n    className: `${prefix}--checkbox__invalid-icon ${prefix}--checkbox__invalid-icon--warning`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--form-requirement`\n  }, warnText))), showHelper && helper);\n};\nCheckboxGroup.propTypes = {\n  /**\n   * Provide the children form elements to be rendered inside of the <fieldset>\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing <fieldset> node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide text for the form group for additional help\n   */\n  helperText: PropTypes.node,\n  /**\n   * Specify whether the form group is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the form group is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * Provide id for the fieldset <legend> which corresponds to the fieldset\n   * `aria-labelledby`\n   */\n  legendId: PropTypes.node,\n  /**\n   * Provide the text to be rendered inside of the fieldset <legend>\n   */\n  legendText: PropTypes.node.isRequired,\n  /**\n   * Provide the orientation for how the checkbox should be displayed\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * Whether the CheckboxGroup should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `CheckboxGroup` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Specify whether the form group is currently in warning state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the form group is in warning state\n   */\n  warnText: PropTypes.node\n};\nvar CheckboxGroup$1 = CheckboxGroup;\n\nexport { CheckboxGroup$1 as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}