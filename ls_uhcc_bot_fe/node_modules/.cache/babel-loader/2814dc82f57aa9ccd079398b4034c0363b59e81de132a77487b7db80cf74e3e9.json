{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\nvar _ChevronDown;\nconst translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nconst defaultTranslations = {\n  [translationIds['close.menu']]: 'Close',\n  [translationIds['open.menu']]: 'Open'\n};\nconst defaultTranslateWithId = id => defaultTranslations[id];\n\n/**\n * `ListBoxTrigger` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\n\nconst ListBoxTrigger = /*#__PURE__*/React__default.forwardRef(function ListBoxTrigger(_ref, ref) {\n  let {\n    isOpen,\n    translateWithId: t = defaultTranslateWithId,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx({\n    [\"\".concat(prefix, \"--list-box__menu-icon\")]: true,\n    [\"\".concat(prefix, \"--list-box__menu-icon--open\")]: isOpen\n  });\n  const description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    title: description,\n    className: className,\n    type: \"button\",\n    tabIndex: \"-1\",\n    ref: ref\n  }), _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null)));\n});\nListBoxTrigger.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: PropTypes.bool.isRequired,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func\n};\nvar ListBoxTrigger$1 = ListBoxTrigger;\nexport { ListBoxTrigger$1 as default, translationIds };","map":{"version":3,"names":["extends","_extends","cx","React__default","PropTypes","ChevronDown","usePrefix","_ChevronDown","translationIds","defaultTranslations","defaultTranslateWithId","id","ListBoxTrigger","forwardRef","_ref","ref","isOpen","translateWithId","t","rest","prefix","className","concat","description","createElement","title","type","tabIndex","propTypes","bool","isRequired","func","ListBoxTrigger$1","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/ListBox/next/ListBoxTrigger.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@carbon/icons-react';\nimport { usePrefix } from '../../../internal/usePrefix.js';\n\nvar _ChevronDown;\nconst translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nconst defaultTranslations = {\n  [translationIds['close.menu']]: 'Close',\n  [translationIds['open.menu']]: 'Open'\n};\nconst defaultTranslateWithId = id => defaultTranslations[id];\n\n/**\n * `ListBoxTrigger` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\n\nconst ListBoxTrigger = /*#__PURE__*/React__default.forwardRef(function ListBoxTrigger(_ref, ref) {\n  let {\n    isOpen,\n    translateWithId: t = defaultTranslateWithId,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx({\n    [`${prefix}--list-box__menu-icon`]: true,\n    [`${prefix}--list-box__menu-icon--open`]: isOpen\n  });\n  const description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    \"aria-label\": description,\n    title: description,\n    className: className,\n    type: \"button\",\n    tabIndex: \"-1\",\n    ref: ref\n  }), _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null)));\n});\nListBoxTrigger.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: PropTypes.bool.isRequired,\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: PropTypes.func\n};\nvar ListBoxTrigger$1 = ListBoxTrigger;\n\nexport { ListBoxTrigger$1 as default, translationIds };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,gDAAgD;AACpF,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,IAAIC,YAAY;AAChB,MAAMC,cAAc,GAAG;EACrB,YAAY,EAAE,YAAY;EAC1B,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,mBAAmB,GAAG;EAC1B,CAACD,cAAc,CAAC,YAAY,CAAC,GAAG,OAAO;EACvC,CAACA,cAAc,CAAC,WAAW,CAAC,GAAG;AACjC,CAAC;AACD,MAAME,sBAAsB,GAAGC,EAAE,IAAIF,mBAAmB,CAACE,EAAE,CAAC;;AAE5D;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG,aAAaT,cAAc,CAACU,UAAU,CAAC,SAASD,cAAcA,CAACE,IAAI,EAAEC,GAAG,EAAE;EAC/F,IAAI;IACFC,MAAM;IACNC,eAAe,EAAEC,CAAC,GAAGR,sBAAsB;IAC3C,GAAGS;EACL,CAAC,GAAGL,IAAI;EACR,MAAMM,MAAM,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMe,SAAS,GAAGnB,EAAE,CAAC;IACnB,IAAAoB,MAAA,CAAIF,MAAM,6BAA0B,IAAI;IACxC,IAAAE,MAAA,CAAIF,MAAM,mCAAgCJ;EAC5C,CAAC,CAAC;EACF,MAAMO,WAAW,GAAGP,MAAM,GAAGE,CAAC,CAAC,YAAY,CAAC,GAAGA,CAAC,CAAC,WAAW,CAAC;EAC7D,OAAO,aAAaf,cAAc,CAACqB,aAAa,CAAC,QAAQ,EAAEvB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,IAAI,EAAE;IAC5E,YAAY,EAAEI,WAAW;IACzBE,KAAK,EAAEF,WAAW;IAClBF,SAAS,EAAEA,SAAS;IACpBK,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,IAAI;IACdZ,GAAG,EAAEA;EACP,CAAC,CAAC,EAAER,YAAY,KAAKA,YAAY,GAAG,aAAaJ,cAAc,CAACqB,aAAa,CAACnB,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;AACpG,CAAC,CAAC;AACFO,cAAc,CAACgB,SAAS,GAAG;EACzB;AACF;AACA;AACA;EACEZ,MAAM,EAAEZ,SAAS,CAACyB,IAAI,CAACC,UAAU;EACjC;AACF;AACA;AACA;AACA;EACEb,eAAe,EAAEb,SAAS,CAAC2B;AAC7B,CAAC;AACD,IAAIC,gBAAgB,GAAGpB,cAAc;AAErC,SAASoB,gBAAgB,IAAIC,OAAO,EAAEzB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}