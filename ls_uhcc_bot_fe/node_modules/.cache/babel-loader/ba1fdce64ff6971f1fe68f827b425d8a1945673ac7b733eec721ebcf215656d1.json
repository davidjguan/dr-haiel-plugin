{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport SkeletonText from '../SkeletonText/SkeletonText.js';\nconst AiSkeletonText = _ref => {\n  let {\n    className,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const aiSkeletonTextClasses = cx(className, {\n    [\"\".concat(prefix, \"--skeleton__text--ai\")]: true\n  });\n  return /*#__PURE__*/React__default.createElement(SkeletonText, _extends({\n    className: aiSkeletonTextClasses\n  }, rest));\n};\nAiSkeletonText.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n  /**\n   * the number of lines shown if paragraph is true\n   */\n  lineCount: PropTypes.number,\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string\n};\nexport { AiSkeletonText as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","SkeletonText","AiSkeletonText","_ref","className","rest","prefix","aiSkeletonTextClasses","concat","createElement","propTypes","string","heading","bool","lineCount","number","paragraph","width","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/AiSkeleton/AiSkeletonText.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport SkeletonText from '../SkeletonText/SkeletonText.js';\n\nconst AiSkeletonText = _ref => {\n  let {\n    className,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const aiSkeletonTextClasses = cx(className, {\n    [`${prefix}--skeleton__text--ai`]: true\n  });\n  return /*#__PURE__*/React__default.createElement(SkeletonText, _extends({\n    className: aiSkeletonTextClasses\n  }, rest));\n};\nAiSkeletonText.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n  /**\n   * the number of lines shown if paragraph is true\n   */\n  lineCount: PropTypes.number,\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string\n};\n\nexport { AiSkeletonText as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,YAAY,MAAM,iCAAiC;AAE1D,MAAMC,cAAc,GAAGC,IAAI,IAAI;EAC7B,IAAI;IACFC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGF,IAAI;EACR,MAAMG,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,qBAAqB,GAAGR,EAAE,CAACK,SAAS,EAAE;IAC1C,IAAAI,MAAA,CAAIF,MAAM,4BAAyB;EACrC,CAAC,CAAC;EACF,OAAO,aAAaR,cAAc,CAACW,aAAa,CAACR,YAAY,EAAEL,QAAQ,CAAC;IACtEQ,SAAS,EAAEG;EACb,CAAC,EAAEF,IAAI,CAAC,CAAC;AACX,CAAC;AACDH,cAAc,CAACQ,SAAS,GAAG;EACzB;AACF;AACA;EACEN,SAAS,EAAEP,SAAS,CAACc,MAAM;EAC3B;AACF;AACA;EACEC,OAAO,EAAEf,SAAS,CAACgB,IAAI;EACvB;AACF;AACA;EACEC,SAAS,EAAEjB,SAAS,CAACkB,MAAM;EAC3B;AACF;AACA;EACEC,SAAS,EAAEnB,SAAS,CAACgB,IAAI;EACzB;AACF;AACA;EACEI,KAAK,EAAEpB,SAAS,CAACc;AACnB,CAAC;AAED,SAAST,cAAc,IAAIgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}