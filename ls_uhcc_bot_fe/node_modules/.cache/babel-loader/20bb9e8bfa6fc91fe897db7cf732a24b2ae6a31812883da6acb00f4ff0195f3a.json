{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { forwardRef, useContext, useRef, useState, useEffect } from 'react';\nimport { CaretLeft, CaretRight, Checkmark } from '@carbon/icons-react';\nimport { useControllableState } from '../../internal/useControllableState.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { warning } from '../../internal/warning.js';\nimport { Menu } from './Menu.js';\nimport { MenuContext } from './MenuContext.js';\nimport '../Text/index.js';\nimport { useLayoutDirection } from '../LayoutDirection/useLayoutDirection.js';\nimport { Text } from '../Text/Text.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { ArrowRight, Enter, Space } from '../../internal/keyboard/keys.js';\nvar _CaretLeft, _CaretRight;\nconst hoverIntentDelay = 150; // in ms\nconst leaveIntentDelay = 300; // in ms\n\nconst MenuItem = /*#__PURE__*/forwardRef(function MenuItem(_ref, forwardRef) {\n  let {\n    children,\n    className,\n    disabled,\n    kind = 'default',\n    label,\n    onClick,\n    renderIcon: IconElement,\n    shortcut,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const context = useContext(MenuContext);\n  const menuItem = useRef(null);\n  const ref = useMergedRefs([forwardRef, menuItem]);\n  const [boundaries, setBoundaries] = useState({\n    x: -1,\n    y: -1\n  });\n  const [rtl, setRtl] = useState(false);\n  const hasChildren = Boolean(children);\n  const [submenuOpen, setSubmenuOpen] = useState(false);\n  const hoverIntentTimeout = useRef(null);\n  const leaveIntentTimeout = useRef(null);\n  const isDisabled = disabled && !hasChildren;\n  const isDanger = kind === 'danger' && !hasChildren;\n  function registerItem() {\n    context.dispatch({\n      type: 'registerItem',\n      payload: {\n        ref: menuItem,\n        disabled: Boolean(disabled)\n      }\n    });\n  }\n  function openSubmenu() {\n    if (!menuItem.current) {\n      return;\n    }\n    const {\n      x,\n      y,\n      width,\n      height\n    } = menuItem.current.getBoundingClientRect();\n    if (rtl) {\n      setBoundaries({\n        x: [-x, x - width],\n        y: [y, y + height]\n      });\n    } else {\n      setBoundaries({\n        x: [x, x + width],\n        y: [y, y + height]\n      });\n    }\n    setSubmenuOpen(true);\n  }\n  function closeSubmenu() {\n    setSubmenuOpen(false);\n    setBoundaries({\n      x: -1,\n      y: -1\n    });\n  }\n  function handleClick(e) {\n    if (!isDisabled) {\n      if (hasChildren) {\n        openSubmenu();\n      } else {\n        context.state.requestCloseRoot(e);\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    }\n  }\n  function handleMouseEnter() {\n    if (leaveIntentTimeout.current) {\n      // When mouse reenters before closing keep sub menu open\n      clearTimeout(leaveIntentTimeout.current);\n      leaveIntentTimeout.current = null;\n    }\n    hoverIntentTimeout.current = setTimeout(() => {\n      openSubmenu();\n    }, hoverIntentDelay);\n  }\n  function handleMouseLeave() {\n    if (hoverIntentTimeout.current) {\n      clearTimeout(hoverIntentTimeout.current);\n      // Avoid closing the sub menu as soon as mouse leaves\n      // prevents accidental closure due to scroll bar\n      leaveIntentTimeout.current = setTimeout(() => {\n        var _menuItem$current;\n        closeSubmenu();\n        (_menuItem$current = menuItem.current) === null || _menuItem$current === void 0 || _menuItem$current.focus();\n      }, leaveIntentDelay);\n    }\n  }\n  function handleKeyDown(e) {\n    if (hasChildren && match(e, ArrowRight)) {\n      openSubmenu();\n      e.stopPropagation();\n    }\n    if (match(e, Enter) || match(e, Space)) {\n      handleClick(e);\n    }\n    if (rest.onKeyDown) {\n      rest.onKeyDown(e);\n    }\n  }\n  const classNames = cx(className, \"\".concat(prefix, \"--menu-item\"), {\n    [\"\".concat(prefix, \"--menu-item--disabled\")]: isDisabled,\n    [\"\".concat(prefix, \"--menu-item--danger\")]: isDanger\n  });\n\n  // on first render, register this menuitem in the context's state\n  // (used for keyboard navigation)\n  useEffect(() => {\n    registerItem();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Set RTL based on the document direction or `LayoutDirection`\n  const {\n    direction\n  } = useLayoutDirection();\n  useEffect(() => {\n    var _document;\n    if (((_document = document) === null || _document === void 0 ? void 0 : _document.dir) === 'rtl' || direction === 'rtl') {\n      setRtl(true);\n    } else {\n      setRtl(false);\n    }\n  }, [direction]);\n  const iconsAllowed = context.state.mode === 'basic' || rest.role === 'menuitemcheckbox' || rest.role === 'menuitemradio';\n  useEffect(() => {\n    if (iconsAllowed && IconElement && !context.state.hasIcons) {\n      // @ts-ignore - TODO: Should we be passing payload?\n      context.dispatch({\n        type: 'enableIcons'\n      });\n    }\n  }, [iconsAllowed, IconElement, context.state.hasIcons, context]);\n  return /*#__PURE__*/React__default.createElement(\"li\", _extends({\n    role: \"menuitem\"\n  }, rest, {\n    ref: ref,\n    className: classNames,\n    tabIndex: -1,\n    \"aria-disabled\": isDisabled !== null && isDisabled !== void 0 ? isDisabled : undefined,\n    \"aria-haspopup\": hasChildren !== null && hasChildren !== void 0 ? hasChildren : undefined,\n    \"aria-expanded\": hasChildren ? submenuOpen : undefined,\n    onClick: handleClick,\n    onMouseEnter: hasChildren ? handleMouseEnter : undefined,\n    onMouseLeave: hasChildren ? handleMouseLeave : undefined,\n    onKeyDown: handleKeyDown\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--menu-item__icon\")\n  }, iconsAllowed && IconElement && /*#__PURE__*/React__default.createElement(IconElement, null)), /*#__PURE__*/React__default.createElement(Text, {\n    as: \"div\",\n    className: \"\".concat(prefix, \"--menu-item__label\"),\n    title: label\n  }, label), shortcut && !hasChildren && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--menu-item__shortcut\")\n  }, shortcut), hasChildren && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--menu-item__shortcut\")\n  }, rtl ? _CaretLeft || (_CaretLeft = /*#__PURE__*/React__default.createElement(CaretLeft, null)) : _CaretRight || (_CaretRight = /*#__PURE__*/React__default.createElement(CaretRight, null))), /*#__PURE__*/React__default.createElement(Menu, {\n    label: label,\n    open: submenuOpen,\n    onClose: () => {\n      var _menuItem$current2;\n      closeSubmenu();\n      (_menuItem$current2 = menuItem.current) === null || _menuItem$current2 === void 0 || _menuItem$current2.focus();\n    },\n    x: boundaries.x,\n    y: boundaries.y\n  }, children)));\n});\nMenuItem.propTypes = {\n  /**\n   * Optionally provide another Menu to create a submenu. props.children can't be used to specify the content of the MenuItem itself. Use props.label instead.\n   */\n  children: PropTypes.node,\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the MenuItem is disabled or not.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify the kind of the MenuItem.\n   */\n  kind: PropTypes.oneOf(['default', 'danger']),\n  /**\n   * A required label titling the MenuItem. Will be rendered as its text content.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Provide an optional function to be called when the MenuItem is clicked.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  onClick: PropTypes.func,\n  /**\n   * Only applicable if the parent menu is in `basic` mode. Sets the menu item's icon.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Provide a shortcut for the action of this MenuItem. Note that the component will only render it as a hint but not actually register the shortcut.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  shortcut: PropTypes.string\n};\nconst MenuItemSelectable = /*#__PURE__*/forwardRef(function MenuItemSelectable(_ref2, forwardRef) {\n  let {\n    className,\n    defaultSelected,\n    label,\n    onChange,\n    selected,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const context = useContext(MenuContext);\n  if (context.state.mode === 'basic') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'MenuItemSelectable is not supported when the menu is in \"basic\" mode.') : void 0;\n  }\n  const [checked, setChecked] = useControllableState({\n    value: selected,\n    onChange,\n    defaultValue: defaultSelected !== null && defaultSelected !== void 0 ? defaultSelected : false\n  });\n  function handleClick(e) {\n    setChecked(!checked);\n    if (onChange) {\n      onChange(e);\n    }\n  }\n  useEffect(() => {\n    if (!context.state.hasIcons) {\n      // @ts-ignore - TODO: Should we be passing payload?\n      context.dispatch({\n        type: 'enableIcons'\n      });\n    }\n  }, [context.state.hasIcons, context]);\n  const classNames = cx(className, \"\".concat(prefix, \"--menu-item-selectable--selected\"));\n  return /*#__PURE__*/React__default.createElement(MenuItem, _extends({}, rest, {\n    ref: forwardRef,\n    label: label,\n    className: classNames,\n    role: \"menuitemcheckbox\",\n    \"aria-checked\": checked,\n    renderIcon: checked ? Checkmark : undefined,\n    onClick: handleClick\n  }));\n});\nMenuItemSelectable.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the option should be selected by default.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  defaultSelected: PropTypes.bool,\n  /**\n   * A required label titling this option.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Provide an optional function to be called when the selection state changes.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  onChange: PropTypes.func,\n  /**\n   * Pass a bool to props.selected to control the state of this option.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  selected: PropTypes.bool\n};\nconst MenuItemGroup = /*#__PURE__*/forwardRef(function MenuItemGroup(_ref3, forwardRef) {\n  let {\n    children,\n    className,\n    label,\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const classNames = cx(className, \"\".concat(prefix, \"--menu-item-group\"));\n  return /*#__PURE__*/React__default.createElement(\"li\", {\n    className: classNames,\n    role: \"none\",\n    ref: forwardRef\n  }, /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, rest, {\n    role: \"group\",\n    \"aria-label\": label\n  }), children));\n});\nMenuItemGroup.propTypes = {\n  /**\n   * A collection of MenuItems to be rendered within this group.\n   */\n  children: PropTypes.node,\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * A required label titling this group.\n   */\n  label: PropTypes.string.isRequired\n};\nconst defaultItemToString = item => item.toString();\nconst MenuItemRadioGroup = /*#__PURE__*/forwardRef(function MenuItemRadioGroup(_ref4, forwardRef) {\n  let {\n    className,\n    defaultSelectedItem,\n    items,\n    itemToString = defaultItemToString,\n    label,\n    onChange,\n    selectedItem,\n    ...rest\n  } = _ref4;\n  const prefix = usePrefix();\n  const context = useContext(MenuContext);\n  if (context.state.mode === 'basic') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'MenuItemRadioGroup is not supported when the menu is in \"basic\" mode.') : void 0;\n  }\n  const [selection, setSelection] = useControllableState({\n    value: selectedItem,\n    onChange,\n    defaultValue: defaultSelectedItem\n  });\n  function handleClick(item, e) {\n    setSelection(item);\n    if (onChange) {\n      onChange(e);\n    }\n  }\n  useEffect(() => {\n    if (!context.state.hasIcons) {\n      // @ts-ignore - TODO: Should we be passing payload?\n      context.dispatch({\n        type: 'enableIcons'\n      });\n    }\n  }, [context.state.hasIcons, context]);\n  const classNames = cx(className, \"\".concat(prefix, \"--menu-item-radio-group\"));\n  return /*#__PURE__*/React__default.createElement(\"li\", {\n    className: classNames,\n    role: \"none\",\n    ref: forwardRef\n  }, /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, rest, {\n    role: \"group\",\n    \"aria-label\": label\n  }), items.map((item, i) => /*#__PURE__*/React__default.createElement(MenuItem, {\n    key: i,\n    label: itemToString(item),\n    role: \"menuitemradio\",\n    \"aria-checked\": item === selection,\n    renderIcon: item === selection ? Checkmark : undefined,\n    onClick: e => {\n      handleClick(item, e);\n    }\n  }))));\n});\nMenuItemRadioGroup.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the default selected item. Must match the type of props.items.\n   */\n  defaultSelectedItem: PropTypes.any,\n  /**\n   * Provide a function to convert an item to the string that will be rendered. Defaults to item.toString().\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  itemToString: PropTypes.func,\n  /**\n   * Provide the options for this radio group. Can be of any type, as long as you provide an appropriate props.itemToString function.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  items: PropTypes.array,\n  /**\n   * A required label titling this radio group.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Provide an optional function to be called when the selection changes.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  onChange: PropTypes.func,\n  /**\n   * Provide props.selectedItem to control the state of this radio group. Must match the type of props.items.\n   */\n  selectedItem: PropTypes.any\n};\nconst MenuItemDivider = /*#__PURE__*/forwardRef(function MenuItemDivider(_ref5, forwardRef) {\n  let {\n    className,\n    ...rest\n  } = _ref5;\n  const prefix = usePrefix();\n  const classNames = cx(className, \"\".concat(prefix, \"--menu-item-divider\"));\n  return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n    className: classNames,\n    role: \"separator\",\n    ref: forwardRef\n  }));\n});\nMenuItemDivider.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string\n};\nexport { MenuItem, MenuItemDivider, MenuItemGroup, MenuItemRadioGroup, MenuItemSelectable };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","forwardRef","useContext","useRef","useState","useEffect","CaretLeft","CaretRight","Checkmark","useControllableState","useMergedRefs","usePrefix","warning","Menu","MenuContext","useLayoutDirection","Text","match","ArrowRight","Enter","Space","_CaretLeft","_CaretRight","hoverIntentDelay","leaveIntentDelay","MenuItem","_ref","children","className","disabled","kind","label","onClick","renderIcon","IconElement","shortcut","rest","prefix","context","menuItem","ref","boundaries","setBoundaries","x","y","rtl","setRtl","hasChildren","Boolean","submenuOpen","setSubmenuOpen","hoverIntentTimeout","leaveIntentTimeout","isDisabled","isDanger","registerItem","dispatch","type","payload","openSubmenu","current","width","height","getBoundingClientRect","closeSubmenu","handleClick","e","state","requestCloseRoot","handleMouseEnter","clearTimeout","setTimeout","handleMouseLeave","_menuItem$current","focus","handleKeyDown","stopPropagation","onKeyDown","classNames","concat","direction","_document","document","dir","iconsAllowed","mode","role","hasIcons","createElement","tabIndex","undefined","onMouseEnter","onMouseLeave","as","title","Fragment","open","onClose","_menuItem$current2","propTypes","node","string","bool","oneOf","isRequired","func","oneOfType","object","MenuItemSelectable","_ref2","defaultSelected","onChange","selected","process","env","NODE_ENV","checked","setChecked","value","defaultValue","MenuItemGroup","_ref3","defaultItemToString","item","toString","MenuItemRadioGroup","_ref4","defaultSelectedItem","items","itemToString","selectedItem","selection","setSelection","map","i","key","any","array","MenuItemDivider","_ref5"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Menu/MenuItem.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { forwardRef, useContext, useRef, useState, useEffect } from 'react';\nimport { CaretLeft, CaretRight, Checkmark } from '@carbon/icons-react';\nimport { useControllableState } from '../../internal/useControllableState.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { warning } from '../../internal/warning.js';\nimport { Menu } from './Menu.js';\nimport { MenuContext } from './MenuContext.js';\nimport '../Text/index.js';\nimport { useLayoutDirection } from '../LayoutDirection/useLayoutDirection.js';\nimport { Text } from '../Text/Text.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { ArrowRight, Enter, Space } from '../../internal/keyboard/keys.js';\n\nvar _CaretLeft, _CaretRight;\nconst hoverIntentDelay = 150; // in ms\nconst leaveIntentDelay = 300; // in ms\n\nconst MenuItem = /*#__PURE__*/forwardRef(function MenuItem(_ref, forwardRef) {\n  let {\n    children,\n    className,\n    disabled,\n    kind = 'default',\n    label,\n    onClick,\n    renderIcon: IconElement,\n    shortcut,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const context = useContext(MenuContext);\n  const menuItem = useRef(null);\n  const ref = useMergedRefs([forwardRef, menuItem]);\n  const [boundaries, setBoundaries] = useState({\n    x: -1,\n    y: -1\n  });\n  const [rtl, setRtl] = useState(false);\n  const hasChildren = Boolean(children);\n  const [submenuOpen, setSubmenuOpen] = useState(false);\n  const hoverIntentTimeout = useRef(null);\n  const leaveIntentTimeout = useRef(null);\n  const isDisabled = disabled && !hasChildren;\n  const isDanger = kind === 'danger' && !hasChildren;\n  function registerItem() {\n    context.dispatch({\n      type: 'registerItem',\n      payload: {\n        ref: menuItem,\n        disabled: Boolean(disabled)\n      }\n    });\n  }\n  function openSubmenu() {\n    if (!menuItem.current) {\n      return;\n    }\n    const {\n      x,\n      y,\n      width,\n      height\n    } = menuItem.current.getBoundingClientRect();\n    if (rtl) {\n      setBoundaries({\n        x: [-x, x - width],\n        y: [y, y + height]\n      });\n    } else {\n      setBoundaries({\n        x: [x, x + width],\n        y: [y, y + height]\n      });\n    }\n    setSubmenuOpen(true);\n  }\n  function closeSubmenu() {\n    setSubmenuOpen(false);\n    setBoundaries({\n      x: -1,\n      y: -1\n    });\n  }\n  function handleClick(e) {\n    if (!isDisabled) {\n      if (hasChildren) {\n        openSubmenu();\n      } else {\n        context.state.requestCloseRoot(e);\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    }\n  }\n  function handleMouseEnter() {\n    if (leaveIntentTimeout.current) {\n      // When mouse reenters before closing keep sub menu open\n      clearTimeout(leaveIntentTimeout.current);\n      leaveIntentTimeout.current = null;\n    }\n    hoverIntentTimeout.current = setTimeout(() => {\n      openSubmenu();\n    }, hoverIntentDelay);\n  }\n  function handleMouseLeave() {\n    if (hoverIntentTimeout.current) {\n      clearTimeout(hoverIntentTimeout.current);\n      // Avoid closing the sub menu as soon as mouse leaves\n      // prevents accidental closure due to scroll bar\n      leaveIntentTimeout.current = setTimeout(() => {\n        closeSubmenu();\n        menuItem.current?.focus();\n      }, leaveIntentDelay);\n    }\n  }\n  function handleKeyDown(e) {\n    if (hasChildren && match(e, ArrowRight)) {\n      openSubmenu();\n      e.stopPropagation();\n    }\n    if (match(e, Enter) || match(e, Space)) {\n      handleClick(e);\n    }\n    if (rest.onKeyDown) {\n      rest.onKeyDown(e);\n    }\n  }\n  const classNames = cx(className, `${prefix}--menu-item`, {\n    [`${prefix}--menu-item--disabled`]: isDisabled,\n    [`${prefix}--menu-item--danger`]: isDanger\n  });\n\n  // on first render, register this menuitem in the context's state\n  // (used for keyboard navigation)\n  useEffect(() => {\n    registerItem();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Set RTL based on the document direction or `LayoutDirection`\n  const {\n    direction\n  } = useLayoutDirection();\n  useEffect(() => {\n    if (document?.dir === 'rtl' || direction === 'rtl') {\n      setRtl(true);\n    } else {\n      setRtl(false);\n    }\n  }, [direction]);\n  const iconsAllowed = context.state.mode === 'basic' || rest.role === 'menuitemcheckbox' || rest.role === 'menuitemradio';\n  useEffect(() => {\n    if (iconsAllowed && IconElement && !context.state.hasIcons) {\n      // @ts-ignore - TODO: Should we be passing payload?\n      context.dispatch({\n        type: 'enableIcons'\n      });\n    }\n  }, [iconsAllowed, IconElement, context.state.hasIcons, context]);\n  return /*#__PURE__*/React__default.createElement(\"li\", _extends({\n    role: \"menuitem\"\n  }, rest, {\n    ref: ref,\n    className: classNames,\n    tabIndex: -1,\n    \"aria-disabled\": isDisabled ?? undefined,\n    \"aria-haspopup\": hasChildren ?? undefined,\n    \"aria-expanded\": hasChildren ? submenuOpen : undefined,\n    onClick: handleClick,\n    onMouseEnter: hasChildren ? handleMouseEnter : undefined,\n    onMouseLeave: hasChildren ? handleMouseLeave : undefined,\n    onKeyDown: handleKeyDown\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--menu-item__icon`\n  }, iconsAllowed && IconElement && /*#__PURE__*/React__default.createElement(IconElement, null)), /*#__PURE__*/React__default.createElement(Text, {\n    as: \"div\",\n    className: `${prefix}--menu-item__label`,\n    title: label\n  }, label), shortcut && !hasChildren && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--menu-item__shortcut`\n  }, shortcut), hasChildren && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--menu-item__shortcut`\n  }, rtl ? _CaretLeft || (_CaretLeft = /*#__PURE__*/React__default.createElement(CaretLeft, null)) : _CaretRight || (_CaretRight = /*#__PURE__*/React__default.createElement(CaretRight, null))), /*#__PURE__*/React__default.createElement(Menu, {\n    label: label,\n    open: submenuOpen,\n    onClose: () => {\n      closeSubmenu();\n      menuItem.current?.focus();\n    },\n    x: boundaries.x,\n    y: boundaries.y\n  }, children)));\n});\nMenuItem.propTypes = {\n  /**\n   * Optionally provide another Menu to create a submenu. props.children can't be used to specify the content of the MenuItem itself. Use props.label instead.\n   */\n  children: PropTypes.node,\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the MenuItem is disabled or not.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify the kind of the MenuItem.\n   */\n  kind: PropTypes.oneOf(['default', 'danger']),\n  /**\n   * A required label titling the MenuItem. Will be rendered as its text content.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Provide an optional function to be called when the MenuItem is clicked.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  onClick: PropTypes.func,\n  /**\n   * Only applicable if the parent menu is in `basic` mode. Sets the menu item's icon.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Provide a shortcut for the action of this MenuItem. Note that the component will only render it as a hint but not actually register the shortcut.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  shortcut: PropTypes.string\n};\nconst MenuItemSelectable = /*#__PURE__*/forwardRef(function MenuItemSelectable(_ref2, forwardRef) {\n  let {\n    className,\n    defaultSelected,\n    label,\n    onChange,\n    selected,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const context = useContext(MenuContext);\n  if (context.state.mode === 'basic') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'MenuItemSelectable is not supported when the menu is in \"basic\" mode.') : void 0;\n  }\n  const [checked, setChecked] = useControllableState({\n    value: selected,\n    onChange,\n    defaultValue: defaultSelected ?? false\n  });\n  function handleClick(e) {\n    setChecked(!checked);\n    if (onChange) {\n      onChange(e);\n    }\n  }\n  useEffect(() => {\n    if (!context.state.hasIcons) {\n      // @ts-ignore - TODO: Should we be passing payload?\n      context.dispatch({\n        type: 'enableIcons'\n      });\n    }\n  }, [context.state.hasIcons, context]);\n  const classNames = cx(className, `${prefix}--menu-item-selectable--selected`);\n  return /*#__PURE__*/React__default.createElement(MenuItem, _extends({}, rest, {\n    ref: forwardRef,\n    label: label,\n    className: classNames,\n    role: \"menuitemcheckbox\",\n    \"aria-checked\": checked,\n    renderIcon: checked ? Checkmark : undefined,\n    onClick: handleClick\n  }));\n});\nMenuItemSelectable.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the option should be selected by default.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  defaultSelected: PropTypes.bool,\n  /**\n   * A required label titling this option.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Provide an optional function to be called when the selection state changes.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  onChange: PropTypes.func,\n  /**\n   * Pass a bool to props.selected to control the state of this option.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  selected: PropTypes.bool\n};\nconst MenuItemGroup = /*#__PURE__*/forwardRef(function MenuItemGroup(_ref3, forwardRef) {\n  let {\n    children,\n    className,\n    label,\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const classNames = cx(className, `${prefix}--menu-item-group`);\n  return /*#__PURE__*/React__default.createElement(\"li\", {\n    className: classNames,\n    role: \"none\",\n    ref: forwardRef\n  }, /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, rest, {\n    role: \"group\",\n    \"aria-label\": label\n  }), children));\n});\nMenuItemGroup.propTypes = {\n  /**\n   * A collection of MenuItems to be rendered within this group.\n   */\n  children: PropTypes.node,\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * A required label titling this group.\n   */\n  label: PropTypes.string.isRequired\n};\nconst defaultItemToString = item => item.toString();\nconst MenuItemRadioGroup = /*#__PURE__*/forwardRef(function MenuItemRadioGroup(_ref4, forwardRef) {\n  let {\n    className,\n    defaultSelectedItem,\n    items,\n    itemToString = defaultItemToString,\n    label,\n    onChange,\n    selectedItem,\n    ...rest\n  } = _ref4;\n  const prefix = usePrefix();\n  const context = useContext(MenuContext);\n  if (context.state.mode === 'basic') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'MenuItemRadioGroup is not supported when the menu is in \"basic\" mode.') : void 0;\n  }\n  const [selection, setSelection] = useControllableState({\n    value: selectedItem,\n    onChange,\n    defaultValue: defaultSelectedItem\n  });\n  function handleClick(item, e) {\n    setSelection(item);\n    if (onChange) {\n      onChange(e);\n    }\n  }\n  useEffect(() => {\n    if (!context.state.hasIcons) {\n      // @ts-ignore - TODO: Should we be passing payload?\n      context.dispatch({\n        type: 'enableIcons'\n      });\n    }\n  }, [context.state.hasIcons, context]);\n  const classNames = cx(className, `${prefix}--menu-item-radio-group`);\n  return /*#__PURE__*/React__default.createElement(\"li\", {\n    className: classNames,\n    role: \"none\",\n    ref: forwardRef\n  }, /*#__PURE__*/React__default.createElement(\"ul\", _extends({}, rest, {\n    role: \"group\",\n    \"aria-label\": label\n  }), items.map((item, i) => /*#__PURE__*/React__default.createElement(MenuItem, {\n    key: i,\n    label: itemToString(item),\n    role: \"menuitemradio\",\n    \"aria-checked\": item === selection,\n    renderIcon: item === selection ? Checkmark : undefined,\n    onClick: e => {\n      handleClick(item, e);\n    }\n  }))));\n});\nMenuItemRadioGroup.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the default selected item. Must match the type of props.items.\n   */\n  defaultSelectedItem: PropTypes.any,\n  /**\n   * Provide a function to convert an item to the string that will be rendered. Defaults to item.toString().\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  itemToString: PropTypes.func,\n  /**\n   * Provide the options for this radio group. Can be of any type, as long as you provide an appropriate props.itemToString function.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  items: PropTypes.array,\n  /**\n   * A required label titling this radio group.\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Provide an optional function to be called when the selection changes.\n   */\n  // @ts-ignore-next-line -- avoid spurious (?) TS2322 error\n  onChange: PropTypes.func,\n  /**\n   * Provide props.selectedItem to control the state of this radio group. Must match the type of props.items.\n   */\n  selectedItem: PropTypes.any\n};\nconst MenuItemDivider = /*#__PURE__*/forwardRef(function MenuItemDivider(_ref5, forwardRef) {\n  let {\n    className,\n    ...rest\n  } = _ref5;\n  const prefix = usePrefix();\n  const classNames = cx(className, `${prefix}--menu-item-divider`);\n  return /*#__PURE__*/React__default.createElement(\"li\", _extends({}, rest, {\n    className: classNames,\n    role: \"separator\",\n    ref: forwardRef\n  }));\n});\nMenuItemDivider.propTypes = {\n  /**\n   * Additional CSS class names.\n   */\n  className: PropTypes.string\n};\n\nexport { MenuItem, MenuItemDivider, MenuItemGroup, MenuItemRadioGroup, MenuItemSelectable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}