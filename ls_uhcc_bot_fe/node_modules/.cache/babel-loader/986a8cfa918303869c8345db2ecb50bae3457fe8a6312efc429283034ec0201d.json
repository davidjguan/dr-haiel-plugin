{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { createContext, useRef, isValidElement } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useDelayedState } from '../../internal/useDelayedState.js';\nimport { breakpoints } from '@carbon/layout';\nimport { useMatchMedia } from '../../internal/useMatchMedia.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Tab, Escape } from '../../internal/keyboard/keys.js';\n\n// TO-DO: comment back in when footer is added for rails\n// import SideNavFooter from './SideNavFooter';\n\nconst SideNavContext = /*#__PURE__*/createContext({});\nfunction SideNavRenderFunction(_ref, ref) {\n  let {\n    expanded: expandedProp,\n    defaultExpanded = false,\n    isChildOfHeader = true,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    children,\n    onToggle,\n    className: customClassName,\n    // TO-DO: comment back in when footer is added for rails\n    // translateById: t = (id) => translations[id],\n    href,\n    isFixedNav = false,\n    isRail,\n    isPersistent = true,\n    addFocusListeners = true,\n    addMouseListeners = true,\n    onOverlayClick,\n    onSideNavBlur,\n    enterDelayMs = 100,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const {\n    current: controlled\n  } = useRef(expandedProp !== undefined);\n  const [expandedState, setExpandedState] = useDelayedState(defaultExpanded);\n  const [expandedViaHoverState, setExpandedViaHoverState] = useDelayedState(defaultExpanded);\n  const expanded = controlled ? expandedProp : expandedState;\n  const sideNavRef = useRef(null);\n  const navRef = useMergedRefs([sideNavRef, ref]);\n  const handleToggle = function (event) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n    if (!controlled) {\n      setExpandedState(value, enterDelayMs);\n    }\n    if (onToggle) {\n      onToggle(event, value);\n    }\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value, enterDelayMs);\n    }\n  };\n  const accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n\n  // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  const className = cx(customClassName, {\n    [\"\".concat(prefix, \"--side-nav\")]: true,\n    [\"\".concat(prefix, \"--side-nav--expanded\")]: expanded || expandedViaHoverState,\n    [\"\".concat(prefix, \"--side-nav--collapsed\")]: !expanded && isFixedNav,\n    [\"\".concat(prefix, \"--side-nav--rail\")]: isRail,\n    [\"\".concat(prefix, \"--side-nav--ux\")]: isChildOfHeader,\n    [\"\".concat(prefix, \"--side-nav--hidden\")]: !isPersistent\n  });\n  const overlayClassName = cx({\n    [\"\".concat(prefix, \"--side-nav__overlay\")]: true,\n    [\"\".concat(prefix, \"--side-nav__overlay-active\")]: expanded || expandedViaHoverState\n  });\n  let childrenToRender = children;\n\n  // Pass the expansion state as a prop, so children can update themselves to match\n  childrenToRender = React__default.Children.map(children, child => {\n    // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n    const currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded;\n    if ( /*#__PURE__*/isValidElement(child)) {\n      var _childJsxElement$type, _childJsxElement$type2, _childJsxElement$type3;\n      const childJsxElement = child;\n      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n      return /*#__PURE__*/React__default.cloneElement(childJsxElement, {\n        ...(CARBON_SIDENAV_ITEMS.includes((_childJsxElement$type = (_childJsxElement$type2 = childJsxElement.type) === null || _childJsxElement$type2 === void 0 ? void 0 : _childJsxElement$type2.displayName) !== null && _childJsxElement$type !== void 0 ? _childJsxElement$type : (_childJsxElement$type3 = childJsxElement.type) === null || _childJsxElement$type3 === void 0 ? void 0 : _childJsxElement$type3.name) ? {\n          isSideNavExpanded: currentExpansionState\n        } : {})\n      });\n    }\n    return child;\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onFocus = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && isRail) {\n        handleToggle(event, true);\n      }\n    };\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n      if (!event.currentTarget.contains(event.relatedTarget) && expanded && !isFixedNav) {\n        if (onSideNavBlur) {\n          onSideNavBlur();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        handleToggle(event, false);\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = () => {\n      handleToggle(true, true);\n    };\n    eventHandlers.onMouseLeave = () => {\n      setExpandedState(false);\n      setExpandedViaHoverState(false);\n      handleToggle(false, false);\n    };\n    eventHandlers.onClick = () => {\n      //if delay is enabled, and user intentionally clicks it to see it expanded immediately\n      setExpandedState(true);\n      setExpandedViaHoverState(true);\n      handleToggle(true, true);\n    };\n  }\n  useWindowEvent('keydown', event => {\n    const focusedElement = document.activeElement;\n    if (match(event, Tab) && expanded && !isFixedNav && sideNavRef.current && focusedElement !== null && focusedElement !== void 0 && focusedElement.classList.contains(\"\".concat(prefix, \"--header__menu-toggle\")) && !focusedElement.closest('nav')) {\n      sideNavRef.current.focus();\n    }\n  });\n  const lgMediaQuery = \"(min-width: \".concat(breakpoints.lg.width, \")\");\n  const isLg = useMatchMedia(lgMediaQuery);\n  return /*#__PURE__*/React__default.createElement(SideNavContext.Provider, {\n    value: {\n      isRail\n    }\n  }, isFixedNav ? null : /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React__default.createElement(\"nav\", _extends({\n    tabIndex: -1,\n    ref: navRef,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className),\n    inert: !isRail ? expanded || isLg ? undefined : -1 : undefined\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n}\nconst SideNav = /*#__PURE__*/React__default.forwardRef(SideNavRenderFunction);\nSideNav.displayName = 'SideNav';\nSideNav.propTypes = {\n  /**\n   * Required props for accessibility label on the underlying menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the sidenavigation\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that is the\n   * main content.\n   */\n  href: PropTypes.string,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n  /**\n   * An optional listener that is called a callback to collapse the SideNav\n   */\n\n  onSideNavBlur: PropTypes.func,\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  // translateById: PropTypes.func,\n};\nexport { SideNavContext, SideNav as default };","map":{"version":3,"names":["extends","_extends","React__default","createContext","useRef","isValidElement","cx","PropTypes","AriaLabelPropType","CARBON_SIDENAV_ITEMS","usePrefix","useMergedRefs","useWindowEvent","useDelayedState","breakpoints","useMatchMedia","match","Tab","Escape","SideNavContext","SideNavRenderFunction","_ref","ref","expanded","expandedProp","defaultExpanded","isChildOfHeader","ariaLabel","ariaLabelledBy","children","onToggle","className","customClassName","href","isFixedNav","isRail","isPersistent","addFocusListeners","addMouseListeners","onOverlayClick","onSideNavBlur","enterDelayMs","other","prefix","current","controlled","undefined","expandedState","setExpandedState","expandedViaHoverState","setExpandedViaHoverState","sideNavRef","navRef","handleToggle","event","value","arguments","length","accessibilityLabel","concat","overlayClassName","childrenToRender","Children","map","child","currentExpansionState","_childJsxElement$type","_childJsxElement$type2","_childJsxElement$type3","childJsxElement","cloneElement","includes","type","displayName","name","isSideNavExpanded","eventHandlers","onFocus","currentTarget","contains","relatedTarget","onBlur","onKeyDown","window","location","onMouseEnter","onMouseLeave","onClick","focusedElement","document","activeElement","classList","closest","focus","lgMediaQuery","lg","width","isLg","createElement","Provider","tabIndex","inert","SideNav","forwardRef","propTypes","bool","string","number","func","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/UIShell/SideNav.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { createContext, useRef, isValidElement } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport { CARBON_SIDENAV_ITEMS } from './_utils.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useDelayedState } from '../../internal/useDelayedState.js';\nimport { breakpoints } from '@carbon/layout';\nimport { useMatchMedia } from '../../internal/useMatchMedia.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Tab, Escape } from '../../internal/keyboard/keys.js';\n\n// TO-DO: comment back in when footer is added for rails\n// import SideNavFooter from './SideNavFooter';\n\nconst SideNavContext = /*#__PURE__*/createContext({});\nfunction SideNavRenderFunction(_ref, ref) {\n  let {\n    expanded: expandedProp,\n    defaultExpanded = false,\n    isChildOfHeader = true,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    children,\n    onToggle,\n    className: customClassName,\n    // TO-DO: comment back in when footer is added for rails\n    // translateById: t = (id) => translations[id],\n    href,\n    isFixedNav = false,\n    isRail,\n    isPersistent = true,\n    addFocusListeners = true,\n    addMouseListeners = true,\n    onOverlayClick,\n    onSideNavBlur,\n    enterDelayMs = 100,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const {\n    current: controlled\n  } = useRef(expandedProp !== undefined);\n  const [expandedState, setExpandedState] = useDelayedState(defaultExpanded);\n  const [expandedViaHoverState, setExpandedViaHoverState] = useDelayedState(defaultExpanded);\n  const expanded = controlled ? expandedProp : expandedState;\n  const sideNavRef = useRef(null);\n  const navRef = useMergedRefs([sideNavRef, ref]);\n  const handleToggle = function (event) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n    if (!controlled) {\n      setExpandedState(value, enterDelayMs);\n    }\n    if (onToggle) {\n      onToggle(event, value);\n    }\n    if (controlled || isRail) {\n      setExpandedViaHoverState(value, enterDelayMs);\n    }\n  };\n  const accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n\n  // TO-DO: comment back in when footer is added for rails\n  // const assistiveText = expanded\n  //   ? t('carbon.sidenav.state.open')\n  //   : t('carbon.sidenav.state.closed');\n\n  const className = cx(customClassName, {\n    [`${prefix}--side-nav`]: true,\n    [`${prefix}--side-nav--expanded`]: expanded || expandedViaHoverState,\n    [`${prefix}--side-nav--collapsed`]: !expanded && isFixedNav,\n    [`${prefix}--side-nav--rail`]: isRail,\n    [`${prefix}--side-nav--ux`]: isChildOfHeader,\n    [`${prefix}--side-nav--hidden`]: !isPersistent\n  });\n  const overlayClassName = cx({\n    [`${prefix}--side-nav__overlay`]: true,\n    [`${prefix}--side-nav__overlay-active`]: expanded || expandedViaHoverState\n  });\n  let childrenToRender = children;\n\n  // Pass the expansion state as a prop, so children can update themselves to match\n  childrenToRender = React__default.Children.map(children, child => {\n    // if we are controlled, check for if we have hovered over or the expanded state, else just use the expanded state (uncontrolled)\n    const currentExpansionState = controlled ? expandedViaHoverState || expanded : expanded;\n    if ( /*#__PURE__*/isValidElement(child)) {\n      const childJsxElement = child;\n      // avoid spreading `isSideNavExpanded` to non-Carbon UI Shell children\n      return /*#__PURE__*/React__default.cloneElement(childJsxElement, {\n        ...(CARBON_SIDENAV_ITEMS.includes(childJsxElement.type?.displayName ?? childJsxElement.type?.name) ? {\n          isSideNavExpanded: currentExpansionState\n        } : {})\n      });\n    }\n    return child;\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onFocus = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && isRail) {\n        handleToggle(event, true);\n      }\n    };\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget)) {\n        handleToggle(event, false);\n      }\n      if (!event.currentTarget.contains(event.relatedTarget) && expanded && !isFixedNav) {\n        if (onSideNavBlur) {\n          onSideNavBlur();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        handleToggle(event, false);\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  if (addMouseListeners && isRail) {\n    eventHandlers.onMouseEnter = () => {\n      handleToggle(true, true);\n    };\n    eventHandlers.onMouseLeave = () => {\n      setExpandedState(false);\n      setExpandedViaHoverState(false);\n      handleToggle(false, false);\n    };\n    eventHandlers.onClick = () => {\n      //if delay is enabled, and user intentionally clicks it to see it expanded immediately\n      setExpandedState(true);\n      setExpandedViaHoverState(true);\n      handleToggle(true, true);\n    };\n  }\n  useWindowEvent('keydown', event => {\n    const focusedElement = document.activeElement;\n    if (match(event, Tab) && expanded && !isFixedNav && sideNavRef.current && focusedElement?.classList.contains(`${prefix}--header__menu-toggle`) && !focusedElement.closest('nav')) {\n      sideNavRef.current.focus();\n    }\n  });\n  const lgMediaQuery = `(min-width: ${breakpoints.lg.width})`;\n  const isLg = useMatchMedia(lgMediaQuery);\n  return /*#__PURE__*/React__default.createElement(SideNavContext.Provider, {\n    value: {\n      isRail\n    }\n  }, isFixedNav ? null :\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: overlayClassName,\n    onClick: onOverlayClick\n  }), /*#__PURE__*/React__default.createElement(\"nav\", _extends({\n    tabIndex: -1,\n    ref: navRef,\n    className: `${prefix}--side-nav__navigation ${className}`,\n    inert: !isRail ? expanded || isLg ? undefined : -1 : undefined\n  }, accessibilityLabel, eventHandlers, other), childrenToRender));\n}\nconst SideNav = /*#__PURE__*/React__default.forwardRef(SideNavRenderFunction);\nSideNav.displayName = 'SideNav';\nSideNav.propTypes = {\n  /**\n   * Required props for accessibility label on the underlying menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * Specify whether mouse entry/exit listeners are added. They are by default.\n   */\n  addMouseListeners: PropTypes.bool,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * Specify the duration in milliseconds to delay before displaying the sidenavigation\n   */\n  enterDelayMs: PropTypes.number,\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that is the\n   * main content.\n   */\n  href: PropTypes.string,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  isChildOfHeader: PropTypes.bool,\n  /**\n   * Specify if sideNav is standalone\n   */\n  isFixedNav: PropTypes.bool,\n  /**\n   * Specify if the sideNav will be persistent above the lg breakpoint\n   */\n  isPersistent: PropTypes.bool,\n  /**\n   * Optional prop to display the side nav rail.\n   */\n  isRail: PropTypes.bool,\n  /**\n   * An optional listener that is called when the SideNav overlay is clicked\n   *\n   * @param {object} event\n   */\n  onOverlayClick: PropTypes.func,\n  /**\n   * An optional listener that is called a callback to collapse the SideNav\n   */\n\n  onSideNavBlur: PropTypes.func,\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  // translateById: PropTypes.func,\n};\n\nexport { SideNavContext, SideNav as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}