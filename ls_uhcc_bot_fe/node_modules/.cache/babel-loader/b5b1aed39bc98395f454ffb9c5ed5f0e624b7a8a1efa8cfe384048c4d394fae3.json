{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { LayoutConstraint } from '../Layout/index.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport { noopFn } from '../../internal/noopFn.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { getNextIndex } from '../../internal/keyboard/navigation.js';\nimport { ArrowRight, ArrowLeft } from '../../internal/keyboard/keys.js';\nclass ContentSwitcher extends React__default.Component {\n  constructor() {\n    super(...arguments);\n    /**\n     * The DOM references of child `<Switch>`.\n     * @type {Array<Element>}\n     * @private\n     */\n    _defineProperty(this, \"_switchRefs\", []);\n    _defineProperty(this, \"state\", {\n      selectedIndex: undefined\n    });\n    _defineProperty(this, \"handleItemRef\", index => ref => {\n      this._switchRefs[index] = ref;\n    });\n    _defineProperty(this, \"handleChildChange\", data => {\n      const {\n        selectionMode = 'automatic'\n      } = this.props;\n      // the currently selected child index\n      const {\n        selectedIndex\n      } = this.state;\n      // the newly selected child index\n      const {\n        index\n      } = data;\n      const {\n        key\n      } = data;\n      if (matches(data, [ArrowRight, ArrowLeft])) {\n        var _this$props$children;\n        const nextIndex = getNextIndex(key, index, (_this$props$children = this.props.children) === null || _this$props$children === void 0 ? void 0 : _this$props$children.length);\n        const children = React__default.Children.toArray(this.props.children);\n        if (selectionMode === 'manual') {\n          const switchRef = this._switchRefs[nextIndex];\n          switchRef && switchRef.focus();\n        } else {\n          this.setState({\n            selectedIndex: nextIndex\n          }, () => {\n            if (typeof this.state.selectedIndex !== 'number') {\n              return;\n            }\n            const child = children[this.state.selectedIndex];\n            const switchRef = this._switchRefs[this.state.selectedIndex];\n            switchRef && switchRef.focus();\n            this.props.onChange({\n              ...data,\n              index: this.state.selectedIndex,\n              name: child.props.name,\n              text: child.props.text\n            });\n          });\n        }\n      } else if (selectedIndex !== index) {\n        this.setState({\n          selectedIndex: index\n        }, () => {\n          const switchRef = this._switchRefs[index];\n          switchRef && switchRef.focus();\n          this.props.onChange(data);\n        });\n      }\n    });\n  }\n  static getDerivedStateFromProps(_ref, state) {\n    let {\n      selectedIndex = 0\n    } = _ref;\n    const {\n      prevSelectedIndex\n    } = state;\n    return prevSelectedIndex === selectedIndex ? null : {\n      selectedIndex,\n      prevSelectedIndex: selectedIndex\n    };\n  }\n  render() {\n    var _React__default$Child;\n    const prefix = this.context;\n    const {\n      children,\n      className,\n      light,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      selectedIndex = 0,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      selectionMode = 'automatic',\n      size,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange = noopFn,\n      ...other\n    } = this.props;\n    const isIconOnly = (_React__default$Child = React__default.Children) === null || _React__default$Child === void 0 || (_React__default$Child = _React__default$Child.map(children, child => {\n      return child.type.displayName === 'IconSwitch';\n    })) === null || _React__default$Child === void 0 ? void 0 : _React__default$Child.every(val => val === true);\n    const classes = cx(\"\".concat(prefix, \"--content-switcher\"), className, {\n      [\"\".concat(prefix, \"--content-switcher--light\")]: light,\n      [\"\".concat(prefix, \"--content-switcher--\").concat(size)]: size,\n      // TODO: V12 - Remove this class\n      [\"\".concat(prefix, \"--layout--size-\").concat(size)]: size,\n      [\"\".concat(prefix, \"--content-switcher--icon-only\")]: isIconOnly\n    });\n    return /*#__PURE__*/React__default.createElement(LayoutConstraint, _extends({\n      size: {\n        default: 'md',\n        min: 'sm',\n        max: 'lg'\n      }\n    }, other, {\n      className: classes,\n      role: \"tablist\",\n      onChange: undefined\n    }), children && React__default.Children.toArray(children).map((child, index) => /*#__PURE__*/React__default.cloneElement(child, {\n      index,\n      onClick: composeEventHandlers([this.handleChildChange, child.props.onClick]),\n      onKeyDown: this.handleChildChange,\n      selected: index === this.state.selectedIndex,\n      ref: this.handleItemRef(index),\n      size\n    })));\n  }\n}\n_defineProperty(ContentSwitcher, \"propTypes\", {\n  /**\n   * Pass in Switch components to be rendered in the ContentSwitcher\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to use the light variant.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ContentSwitcher` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),\n  /**\n   * Specify an `onChange` handler that is called whenever the ContentSwitcher\n   * changes which item is selected\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Specify a selected index for the initially selected content\n   */\n  selectedIndex: PropTypes.number,\n  /**\n   * Choose whether or not to automatically change selection on focus\n   */\n  selectionMode: PropTypes.oneOf(['automatic', 'manual']),\n  /**\n   * Specify the size of the Content Switcher. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n});\n_defineProperty(ContentSwitcher, \"contextType\", PrefixContext);\nexport { ContentSwitcher as default };","map":{"version":3,"names":["defineProperty","_defineProperty","extends","_extends","PropTypes","React__default","cx","deprecate","LayoutConstraint","composeEventHandlers","PrefixContext","noopFn","matches","getNextIndex","ArrowRight","ArrowLeft","ContentSwitcher","Component","constructor","arguments","selectedIndex","undefined","index","ref","_switchRefs","data","selectionMode","props","state","key","_this$props$children","nextIndex","children","length","Children","toArray","switchRef","focus","setState","child","onChange","name","text","getDerivedStateFromProps","_ref","prevSelectedIndex","render","_React__default$Child","prefix","context","className","light","size","other","isIconOnly","map","type","displayName","every","val","classes","concat","createElement","default","min","max","role","cloneElement","onClick","handleChildChange","onKeyDown","selected","handleItemRef","node","string","bool","func","isRequired","number","oneOf"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/ContentSwitcher/ContentSwitcher.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { LayoutConstraint } from '../Layout/index.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport { noopFn } from '../../internal/noopFn.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { getNextIndex } from '../../internal/keyboard/navigation.js';\nimport { ArrowRight, ArrowLeft } from '../../internal/keyboard/keys.js';\n\nclass ContentSwitcher extends React__default.Component {\n  constructor() {\n    super(...arguments);\n    /**\n     * The DOM references of child `<Switch>`.\n     * @type {Array<Element>}\n     * @private\n     */\n    _defineProperty(this, \"_switchRefs\", []);\n    _defineProperty(this, \"state\", {\n      selectedIndex: undefined\n    });\n    _defineProperty(this, \"handleItemRef\", index => ref => {\n      this._switchRefs[index] = ref;\n    });\n    _defineProperty(this, \"handleChildChange\", data => {\n      const {\n        selectionMode = 'automatic'\n      } = this.props;\n      // the currently selected child index\n      const {\n        selectedIndex\n      } = this.state;\n      // the newly selected child index\n      const {\n        index\n      } = data;\n      const {\n        key\n      } = data;\n      if (matches(data, [ArrowRight, ArrowLeft])) {\n        const nextIndex = getNextIndex(key, index, this.props.children?.length);\n        const children = React__default.Children.toArray(this.props.children);\n        if (selectionMode === 'manual') {\n          const switchRef = this._switchRefs[nextIndex];\n          switchRef && switchRef.focus();\n        } else {\n          this.setState({\n            selectedIndex: nextIndex\n          }, () => {\n            if (typeof this.state.selectedIndex !== 'number') {\n              return;\n            }\n            const child = children[this.state.selectedIndex];\n            const switchRef = this._switchRefs[this.state.selectedIndex];\n            switchRef && switchRef.focus();\n            this.props.onChange({\n              ...data,\n              index: this.state.selectedIndex,\n              name: child.props.name,\n              text: child.props.text\n            });\n          });\n        }\n      } else if (selectedIndex !== index) {\n        this.setState({\n          selectedIndex: index\n        }, () => {\n          const switchRef = this._switchRefs[index];\n          switchRef && switchRef.focus();\n          this.props.onChange(data);\n        });\n      }\n    });\n  }\n  static getDerivedStateFromProps(_ref, state) {\n    let {\n      selectedIndex = 0\n    } = _ref;\n    const {\n      prevSelectedIndex\n    } = state;\n    return prevSelectedIndex === selectedIndex ? null : {\n      selectedIndex,\n      prevSelectedIndex: selectedIndex\n    };\n  }\n  render() {\n    const prefix = this.context;\n    const {\n      children,\n      className,\n      light,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      selectedIndex = 0,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      selectionMode = 'automatic',\n      size,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onChange = noopFn,\n      ...other\n    } = this.props;\n    const isIconOnly = React__default.Children?.map(children, child => {\n      return child.type.displayName === 'IconSwitch';\n    })?.every(val => val === true);\n    const classes = cx(`${prefix}--content-switcher`, className, {\n      [`${prefix}--content-switcher--light`]: light,\n      [`${prefix}--content-switcher--${size}`]: size,\n      // TODO: V12 - Remove this class\n      [`${prefix}--layout--size-${size}`]: size,\n      [`${prefix}--content-switcher--icon-only`]: isIconOnly\n    });\n    return /*#__PURE__*/React__default.createElement(LayoutConstraint, _extends({\n      size: {\n        default: 'md',\n        min: 'sm',\n        max: 'lg'\n      }\n    }, other, {\n      className: classes,\n      role: \"tablist\",\n      onChange: undefined\n    }), children && React__default.Children.toArray(children).map((child, index) => /*#__PURE__*/React__default.cloneElement(child, {\n      index,\n      onClick: composeEventHandlers([this.handleChildChange, child.props.onClick]),\n      onKeyDown: this.handleChildChange,\n      selected: index === this.state.selectedIndex,\n      ref: this.handleItemRef(index),\n      size\n    })));\n  }\n}\n_defineProperty(ContentSwitcher, \"propTypes\", {\n  /**\n   * Pass in Switch components to be rendered in the ContentSwitcher\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to use the light variant.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ContentSwitcher` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),\n  /**\n   * Specify an `onChange` handler that is called whenever the ContentSwitcher\n   * changes which item is selected\n   */\n  onChange: PropTypes.func.isRequired,\n  /**\n   * Specify a selected index for the initially selected content\n   */\n  selectedIndex: PropTypes.number,\n  /**\n   * Choose whether or not to automatically change selection on focus\n   */\n  selectionMode: PropTypes.oneOf(['automatic', 'manual']),\n  /**\n   * Specify the size of the Content Switcher. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n});\n_defineProperty(ContentSwitcher, \"contextType\", PrefixContext);\n\nexport { ContentSwitcher as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}