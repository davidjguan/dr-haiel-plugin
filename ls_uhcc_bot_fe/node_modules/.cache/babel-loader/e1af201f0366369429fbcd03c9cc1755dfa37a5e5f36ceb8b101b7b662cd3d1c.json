{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { RadioButtonChecked, RadioButton, CheckmarkFilled } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { useFallbackId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { noopFn } from '../../internal/noopFn.js';\nimport '../Text/index.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { Text } from '../Text/Text.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\nvar _RadioButtonChecked, _RadioButton, _CheckmarkFilled;\nconst RadioTile = /*#__PURE__*/React__default.forwardRef(function RadioTile(_ref, ref) {\n  var _slug$type;\n  let {\n    children,\n    className: customClassName,\n    disabled,\n    light,\n    checked,\n    name,\n    value,\n    id,\n    onChange = noopFn,\n    tabIndex = 0,\n    hasRoundedCorners,\n    slug,\n    required,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const inputId = useFallbackId(id);\n  const className = cx(customClassName, \"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), \"\".concat(prefix, \"--tile--radio\"), {\n    [\"\".concat(prefix, \"--tile--is-selected\")]: checked,\n    [\"\".concat(prefix, \"--tile--light\")]: light,\n    [\"\".concat(prefix, \"--tile--disabled\")]: disabled,\n    [\"\".concat(prefix, \"--tile--slug\")]: slug,\n    [\"\".concat(prefix, \"--tile--slug-rounded\")]: slug && hasRoundedCorners\n  });\n  const v12TileRadioIcons = useFeatureFlag('enable-v12-tile-radio-icons');\n  function icon() {\n    if (v12TileRadioIcons) {\n      if (checked) {\n        return _RadioButtonChecked || (_RadioButtonChecked = /*#__PURE__*/React__default.createElement(RadioButtonChecked, null));\n      } else {\n        return _RadioButton || (_RadioButton = /*#__PURE__*/React__default.createElement(RadioButton, null));\n      }\n    } else {\n      return _CheckmarkFilled || (_CheckmarkFilled = /*#__PURE__*/React__default.createElement(CheckmarkFilled, null));\n    }\n  }\n  function handleOnChange(evt) {\n    onChange(value, name, evt);\n  }\n  function handleOnKeyDown(evt) {\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      onChange(value, name, evt);\n    }\n  }\n\n  // Slug is always size `xs`\n  let normalizedSlug;\n  if (slug && ((_slug$type = slug['type']) === null || _slug$type === void 0 ? void 0 : _slug$type.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'xs'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(\"input\", {\n    checked: checked,\n    className: \"\".concat(prefix, \"--tile-input\"),\n    disabled: disabled,\n    id: inputId,\n    name: name,\n    onChange: !disabled ? handleOnChange : undefined,\n    onKeyDown: !disabled ? handleOnKeyDown : undefined,\n    tabIndex: !disabled ? tabIndex : undefined,\n    type: \"radio\",\n    value: value,\n    ref: ref,\n    required: required\n  }), /*#__PURE__*/React__default.createElement(\"label\", _extends({}, rest, {\n    htmlFor: inputId,\n    className: className\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--tile__checkmark\")\n  }, icon()), /*#__PURE__*/React__default.createElement(Text, {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, children), normalizedSlug));\n});\nRadioTile.displayName = 'RadioTile';\nRadioTile.propTypes = {\n  /**\n   * Specify whether the `RadioTile` should be checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The `RadioTile` content.\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional `className` to be applied to the underlying `<label>`.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the `RadioTile` should be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify if the `ExpandableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * Provide a unique id for the underlying `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on `$layer-01` backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `RadioTile` is no longer needed and has ' + 'been deprecated in v11 in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Provide a `name` for the underlying `<input>`.\n   */\n  name: PropTypes.string,\n  /**\n   * Provide an optional `onChange` hook that is called each time the value of\n   * the underlying `<input>` changes.\n   */\n  onChange: PropTypes.func,\n  /**\n   * `true` to specify if the control is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `SelectableTile` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Specify the tab index of the underlying `<input>`.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Specify the value of the underlying `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nexport { RadioTile as default };","map":{"version":3,"names":["extends","_extends","RadioButtonChecked","RadioButton","CheckmarkFilled","cx","PropTypes","React__default","useFallbackId","usePrefix","deprecate","noopFn","useFeatureFlag","Text","matches","Enter","Space","_RadioButtonChecked","_RadioButton","_CheckmarkFilled","RadioTile","forwardRef","_ref","ref","_slug$type","children","className","customClassName","disabled","light","checked","name","value","id","onChange","tabIndex","hasRoundedCorners","slug","required","rest","prefix","inputId","concat","v12TileRadioIcons","icon","createElement","handleOnChange","evt","handleOnKeyDown","preventDefault","normalizedSlug","displayName","cloneElement","size","undefined","onKeyDown","type","htmlFor","propTypes","bool","node","string","func","number","oneOfType","isRequired","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/RadioTile/RadioTile.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { RadioButtonChecked, RadioButton, CheckmarkFilled } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { useFallbackId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { noopFn } from '../../internal/noopFn.js';\nimport '../Text/index.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { Text } from '../Text/Text.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\n\nvar _RadioButtonChecked, _RadioButton, _CheckmarkFilled;\nconst RadioTile = /*#__PURE__*/React__default.forwardRef(function RadioTile(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    disabled,\n    light,\n    checked,\n    name,\n    value,\n    id,\n    onChange = noopFn,\n    tabIndex = 0,\n    hasRoundedCorners,\n    slug,\n    required,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const inputId = useFallbackId(id);\n  const className = cx(customClassName, `${prefix}--tile`, `${prefix}--tile--selectable`, `${prefix}--tile--radio`, {\n    [`${prefix}--tile--is-selected`]: checked,\n    [`${prefix}--tile--light`]: light,\n    [`${prefix}--tile--disabled`]: disabled,\n    [`${prefix}--tile--slug`]: slug,\n    [`${prefix}--tile--slug-rounded`]: slug && hasRoundedCorners\n  });\n  const v12TileRadioIcons = useFeatureFlag('enable-v12-tile-radio-icons');\n  function icon() {\n    if (v12TileRadioIcons) {\n      if (checked) {\n        return _RadioButtonChecked || (_RadioButtonChecked = /*#__PURE__*/React__default.createElement(RadioButtonChecked, null));\n      } else {\n        return _RadioButton || (_RadioButton = /*#__PURE__*/React__default.createElement(RadioButton, null));\n      }\n    } else {\n      return _CheckmarkFilled || (_CheckmarkFilled = /*#__PURE__*/React__default.createElement(CheckmarkFilled, null));\n    }\n  }\n  function handleOnChange(evt) {\n    onChange(value, name, evt);\n  }\n  function handleOnKeyDown(evt) {\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      onChange(value, name, evt);\n    }\n  }\n\n  // Slug is always size `xs`\n  let normalizedSlug;\n  if (slug && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'xs'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(\"input\", {\n    checked: checked,\n    className: `${prefix}--tile-input`,\n    disabled: disabled,\n    id: inputId,\n    name: name,\n    onChange: !disabled ? handleOnChange : undefined,\n    onKeyDown: !disabled ? handleOnKeyDown : undefined,\n    tabIndex: !disabled ? tabIndex : undefined,\n    type: \"radio\",\n    value: value,\n    ref: ref,\n    required: required\n  }), /*#__PURE__*/React__default.createElement(\"label\", _extends({}, rest, {\n    htmlFor: inputId,\n    className: className\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--tile__checkmark`\n  }, icon()), /*#__PURE__*/React__default.createElement(Text, {\n    className: `${prefix}--tile-content`\n  }, children), normalizedSlug));\n});\nRadioTile.displayName = 'RadioTile';\nRadioTile.propTypes = {\n  /**\n   * Specify whether the `RadioTile` should be checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The `RadioTile` content.\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional `className` to be applied to the underlying `<label>`.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the `RadioTile` should be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify if the `ExpandableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * Provide a unique id for the underlying `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on `$layer-01` backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `RadioTile` is no longer needed and has ' + 'been deprecated in v11 in favor of the new `Layer` component. It will be removed in the next major release.'),\n  /**\n   * Provide a `name` for the underlying `<input>`.\n   */\n  name: PropTypes.string,\n  /**\n   * Provide an optional `onChange` hook that is called each time the value of\n   * the underlying `<input>` changes.\n   */\n  onChange: PropTypes.func,\n  /**\n   * `true` to specify if the control is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `SelectableTile` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Specify the tab index of the underlying `<input>`.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Specify the value of the underlying `<input>`.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\n\nexport { RadioTile as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}