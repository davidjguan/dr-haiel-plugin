{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport RadioTile from '../RadioTile/RadioTile.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { noopFn } from '../../internal/noopFn.js';\nconst TileGroup = props => {\n  const {\n    children,\n    className,\n    defaultSelected,\n    disabled,\n    legend,\n    name,\n    onChange = noopFn,\n    valueSelected,\n    required\n  } = props;\n  const prefix = usePrefix();\n  const [selected, setSelected] = useState(valueSelected !== null && valueSelected !== void 0 ? valueSelected : defaultSelected);\n  const [prevValueSelected, setPrevValueSelected] = useState(valueSelected);\n\n  /**\n   * prop + state alignment - getDerivedStateFromProps\n   * only update if selected prop changes\n   */\n  if (valueSelected !== prevValueSelected) {\n    setSelected(valueSelected);\n    setPrevValueSelected(valueSelected);\n  }\n  const getRadioTilesWithWrappers = children => {\n    const traverseAndModifyChildren = children => {\n      return React__default.Children.map(children, child => {\n        // If RadioTile found, return it with necessary props\n        if (child.type === RadioTile) {\n          const {\n            value,\n            ...otherProps\n          } = child.props;\n          return /*#__PURE__*/React__default.createElement(RadioTile, _extends({}, otherProps, {\n            required: required,\n            name: name,\n            key: value,\n            value: value,\n            onChange: handleChange,\n            checked: value === selected\n          }));\n        } else if (child.props && child.props.children) {\n          // If the child is not RadioTile and has children, recheck the children\n          return /*#__PURE__*/React__default.cloneElement(child, {\n            ...child.props,\n            children: traverseAndModifyChildren(child.props.children)\n          });\n        } else {\n          // If the child is neither a RadioTile nor has children, return it as is\n          return child;\n        }\n      });\n    };\n    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, traverseAndModifyChildren(children));\n  };\n  const handleChange = (newSelection, value, evt) => {\n    if (newSelection !== selected) {\n      setSelected(newSelection);\n      onChange(newSelection, name, evt);\n    }\n  };\n  const renderLegend = legend => {\n    if (legend) {\n      return /*#__PURE__*/React__default.createElement(\"legend\", {\n        className: \"\".concat(prefix, \"--label\")\n      }, legend);\n    }\n  };\n  return /*#__PURE__*/React__default.createElement(\"fieldset\", {\n    className: className !== null && className !== void 0 ? className : \"\".concat(prefix, \"--tile-group\"),\n    disabled: disabled\n  }, renderLegend(legend), /*#__PURE__*/React__default.createElement(\"div\", null, getRadioTilesWithWrappers(children)));\n};\nTileGroup.propTypes = {\n  /**\n   * Provide a collection of <RadioTile> components to render in the group\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the the value of <RadioTile> to be selected by default\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the group is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an optional legend for this group\n   */\n  legend: PropTypes.string,\n  /**\n   * Specify the name of the underlying `<input>` nodes\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional `onChange` hook that is called whenever the value of\n   * the group changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * `true` to specify if input selection in group is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * Specify the value that is currently selected in the group\n   */\n  valueSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTileGroup.displayName = 'TileGroup';\nexport { TileGroup as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","useState","RadioTile","usePrefix","noopFn","TileGroup","props","children","className","defaultSelected","disabled","legend","name","onChange","valueSelected","required","prefix","selected","setSelected","prevValueSelected","setPrevValueSelected","getRadioTilesWithWrappers","traverseAndModifyChildren","Children","map","child","type","value","otherProps","createElement","key","handleChange","checked","cloneElement","Fragment","newSelection","evt","renderLegend","concat","propTypes","node","string","oneOfType","number","bool","isRequired","func","displayName","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/TileGroup/TileGroup.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport RadioTile from '../RadioTile/RadioTile.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { noopFn } from '../../internal/noopFn.js';\n\nconst TileGroup = props => {\n  const {\n    children,\n    className,\n    defaultSelected,\n    disabled,\n    legend,\n    name,\n    onChange = noopFn,\n    valueSelected,\n    required\n  } = props;\n  const prefix = usePrefix();\n  const [selected, setSelected] = useState(valueSelected ?? defaultSelected);\n  const [prevValueSelected, setPrevValueSelected] = useState(valueSelected);\n\n  /**\n   * prop + state alignment - getDerivedStateFromProps\n   * only update if selected prop changes\n   */\n  if (valueSelected !== prevValueSelected) {\n    setSelected(valueSelected);\n    setPrevValueSelected(valueSelected);\n  }\n  const getRadioTilesWithWrappers = children => {\n    const traverseAndModifyChildren = children => {\n      return React__default.Children.map(children, child => {\n        // If RadioTile found, return it with necessary props\n        if (child.type === RadioTile) {\n          const {\n            value,\n            ...otherProps\n          } = child.props;\n          return /*#__PURE__*/React__default.createElement(RadioTile, _extends({}, otherProps, {\n            required: required,\n            name: name,\n            key: value,\n            value: value,\n            onChange: handleChange,\n            checked: value === selected\n          }));\n        } else if (child.props && child.props.children) {\n          // If the child is not RadioTile and has children, recheck the children\n          return /*#__PURE__*/React__default.cloneElement(child, {\n            ...child.props,\n            children: traverseAndModifyChildren(child.props.children)\n          });\n        } else {\n          // If the child is neither a RadioTile nor has children, return it as is\n          return child;\n        }\n      });\n    };\n    return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, traverseAndModifyChildren(children));\n  };\n  const handleChange = (newSelection, value, evt) => {\n    if (newSelection !== selected) {\n      setSelected(newSelection);\n      onChange(newSelection, name, evt);\n    }\n  };\n  const renderLegend = legend => {\n    if (legend) {\n      return /*#__PURE__*/React__default.createElement(\"legend\", {\n        className: `${prefix}--label`\n      }, legend);\n    }\n  };\n  return /*#__PURE__*/React__default.createElement(\"fieldset\", {\n    className: className ?? `${prefix}--tile-group`,\n    disabled: disabled\n  }, renderLegend(legend), /*#__PURE__*/React__default.createElement(\"div\", null, getRadioTilesWithWrappers(children)));\n};\nTileGroup.propTypes = {\n  /**\n   * Provide a collection of <RadioTile> components to render in the group\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the the value of <RadioTile> to be selected by default\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the group is disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide an optional legend for this group\n   */\n  legend: PropTypes.string,\n  /**\n   * Specify the name of the underlying `<input>` nodes\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * Provide an optional `onChange` hook that is called whenever the value of\n   * the group changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * `true` to specify if input selection in group is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * Specify the value that is currently selected in the group\n   */\n  valueSelected: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTileGroup.displayName = 'TileGroup';\n\nexport { TileGroup as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}