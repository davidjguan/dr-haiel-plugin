{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useRef, useEffect } from 'react';\nimport { useEvent } from './useEvent.js';\nimport { canUseDOM } from './environment.js';\nfunction useOutsideClick(ref, callback) {\n  const savedCallback = useRef(callback);\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  // We conditionally guard the `useEvent` hook for SSR. `canUseDOM` can be\n  // treated as a constant as it will be false when executed in a Node.js\n  // environment and true when executed in the browser\n  if (canUseDOM) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEvent(window, 'click', event => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        savedCallback.current(event);\n      }\n    });\n  }\n}\nexport { useOutsideClick };","map":{"version":3,"names":["useRef","useEffect","useEvent","canUseDOM","useOutsideClick","ref","callback","savedCallback","current","window","event","contains","target"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/internal/useOutsideClick.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useRef, useEffect } from 'react';\nimport { useEvent } from './useEvent.js';\nimport { canUseDOM } from './environment.js';\n\nfunction useOutsideClick(ref, callback) {\n  const savedCallback = useRef(callback);\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  // We conditionally guard the `useEvent` hook for SSR. `canUseDOM` can be\n  // treated as a constant as it will be false when executed in a Node.js\n  // environment and true when executed in the browser\n  if (canUseDOM) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEvent(window, 'click', event => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        savedCallback.current(event);\n      }\n    });\n  }\n}\n\nexport { useOutsideClick };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,eAAeA,CAACC,GAAG,EAAEC,QAAQ,EAAE;EACtC,MAAMC,aAAa,GAAGP,MAAM,CAACM,QAAQ,CAAC;EACtCL,SAAS,CAAC,MAAM;IACdM,aAAa,CAACC,OAAO,GAAGF,QAAQ;EAClC,CAAC,CAAC;;EAEF;EACA;EACA;EACA,IAAIH,SAAS,EAAE;IACb;IACAD,QAAQ,CAACO,MAAM,EAAE,OAAO,EAAEC,KAAK,IAAI;MACjC,IAAIL,GAAG,CAACG,OAAO,IAAI,CAACH,GAAG,CAACG,OAAO,CAACG,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;QACtDL,aAAa,CAACC,OAAO,CAACE,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}