{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useCallback } from 'react';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nfunction HeaderContainer(_ref) {\n  let {\n    render: Children,\n    isSideNavExpanded = false,\n    ...rest\n  } = _ref;\n  //state for expandable sidenav\n  const [isSideNavExpandedState, setIsSideNavExpandedState] = useState(isSideNavExpanded);\n  useWindowEvent('keydown', event => {\n    if (match(event, Escape)) {\n      setIsSideNavExpandedState(false);\n    }\n  });\n  const handleHeaderMenuButtonClick = useCallback(() => {\n    setIsSideNavExpandedState(prevIsSideNavExpanded => !prevIsSideNavExpanded);\n  }, [setIsSideNavExpandedState]);\n  return /*#__PURE__*/React__default.createElement(Children, _extends({}, rest, {\n    isSideNavExpanded: isSideNavExpandedState,\n    onClickSideNavExpand: handleHeaderMenuButtonClick\n  }));\n}\nHeaderContainer.propTypes = {\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  isSideNavExpanded: PropTypes.bool,\n  /**\n   * A function or a component that is invoked with `isSideNavExpanded` and `onClickSideNavExpand`.\n   * The function or component can then use those properties to within the components it\n   * returns, such as with the HeaderMenuButton and SideNav components. Additional props will also be passed\n   * into this component for convenience.\n   */\n  render: PropTypes.elementType.isRequired\n};\nexport { HeaderContainer as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","useState","useCallback","useWindowEvent","match","Escape","HeaderContainer","_ref","render","Children","isSideNavExpanded","rest","isSideNavExpandedState","setIsSideNavExpandedState","event","handleHeaderMenuButtonClick","prevIsSideNavExpanded","createElement","onClickSideNavExpand","propTypes","bool","elementType","isRequired","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/UIShell/HeaderContainer.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useState, useCallback } from 'react';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nfunction HeaderContainer(_ref) {\n  let {\n    render: Children,\n    isSideNavExpanded = false,\n    ...rest\n  } = _ref;\n  //state for expandable sidenav\n  const [isSideNavExpandedState, setIsSideNavExpandedState] = useState(isSideNavExpanded);\n  useWindowEvent('keydown', event => {\n    if (match(event, Escape)) {\n      setIsSideNavExpandedState(false);\n    }\n  });\n  const handleHeaderMenuButtonClick = useCallback(() => {\n    setIsSideNavExpandedState(prevIsSideNavExpanded => !prevIsSideNavExpanded);\n  }, [setIsSideNavExpandedState]);\n  return /*#__PURE__*/React__default.createElement(Children, _extends({}, rest, {\n    isSideNavExpanded: isSideNavExpandedState,\n    onClickSideNavExpand: handleHeaderMenuButtonClick\n  }));\n}\nHeaderContainer.propTypes = {\n  /**\n   * Optionally provide a custom class name that is applied to the underlying <header>\n   */\n  isSideNavExpanded: PropTypes.bool,\n  /**\n   * A function or a component that is invoked with `isSideNavExpanded` and `onClickSideNavExpand`.\n   * The function or component can then use those properties to within the components it\n   * returns, such as with the HeaderMenuButton and SideNav components. Additional props will also be passed\n   * into this component for convenience.\n   */\n  render: PropTypes.elementType.isRequired\n};\n\nexport { HeaderContainer as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,KAAK,QAAQ,kCAAkC;AACxD,SAASC,MAAM,QAAQ,iCAAiC;AAExD,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC7B,IAAI;IACFC,MAAM,EAAEC,QAAQ;IAChBC,iBAAiB,GAAG,KAAK;IACzB,GAAGC;EACL,CAAC,GAAGJ,IAAI;EACR;EACA,MAAM,CAACK,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGZ,QAAQ,CAACS,iBAAiB,CAAC;EACvFP,cAAc,CAAC,SAAS,EAAEW,KAAK,IAAI;IACjC,IAAIV,KAAK,CAACU,KAAK,EAAET,MAAM,CAAC,EAAE;MACxBQ,yBAAyB,CAAC,KAAK,CAAC;IAClC;EACF,CAAC,CAAC;EACF,MAAME,2BAA2B,GAAGb,WAAW,CAAC,MAAM;IACpDW,yBAAyB,CAACG,qBAAqB,IAAI,CAACA,qBAAqB,CAAC;EAC5E,CAAC,EAAE,CAACH,yBAAyB,CAAC,CAAC;EAC/B,OAAO,aAAab,cAAc,CAACiB,aAAa,CAACR,QAAQ,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEa,IAAI,EAAE;IAC5ED,iBAAiB,EAAEE,sBAAsB;IACzCM,oBAAoB,EAAEH;EACxB,CAAC,CAAC,CAAC;AACL;AACAT,eAAe,CAACa,SAAS,GAAG;EAC1B;AACF;AACA;EACET,iBAAiB,EAAEX,SAAS,CAACqB,IAAI;EACjC;AACF;AACA;AACA;AACA;AACA;EACEZ,MAAM,EAAET,SAAS,CAACsB,WAAW,CAACC;AAChC,CAAC;AAED,SAAShB,eAAe,IAAIiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}