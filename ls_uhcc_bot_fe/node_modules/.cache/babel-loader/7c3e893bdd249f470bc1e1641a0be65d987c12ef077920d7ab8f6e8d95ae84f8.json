{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { forwardRef, useRef } from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport getDisplayName from '../../prop-types/tools/getDisplayName.js';\nconst Switcher = /*#__PURE__*/forwardRef(function Switcher(props, forwardRef) {\n  const switcherRef = useRef(null);\n  const ref = useMergedRefs([switcherRef, forwardRef]);\n  const prefix = usePrefix();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    className: customClassName,\n    children,\n    expanded\n  } = props;\n  const accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  const className = cx(\"\".concat(prefix, \"--switcher\"), {\n    [customClassName || '']: !!customClassName\n  });\n  const handleSwitcherItemFocus = _ref => {\n    var _switcherRef$current;\n    let {\n      currentIndex,\n      direction\n    } = _ref;\n    const enabledIndices = React__default.Children.toArray(children).reduce((acc, curr, i) => {\n      if (Object.keys(curr.props).length !== 0) {\n        acc.push(i);\n      }\n      return acc;\n    }, []);\n    const nextValidIndex = (() => {\n      const nextIndex = enabledIndices.indexOf(currentIndex) + direction;\n      switch (enabledIndices[nextIndex]) {\n        case undefined:\n          if (direction === -1) {\n            return enabledIndices[enabledIndices.length - 1];\n          }\n          return 0;\n        default:\n          return enabledIndices[nextIndex];\n      }\n    })();\n    const switcherItem = (_switcherRef$current = switcherRef.current) === null || _switcherRef$current === void 0 || (_switcherRef$current = _switcherRef$current.children[nextValidIndex]) === null || _switcherRef$current === void 0 ? void 0 : _switcherRef$current.children[0];\n    if (switcherItem) {\n      switcherItem.focus();\n    }\n  };\n  const childrenWithProps = React__default.Children.toArray(children).map((child, index) => {\n    // only setup click handlers if onChange event is passed\n    if ( /*#__PURE__*/React__default.isValidElement(child) && child.type && getDisplayName(child.type) === 'Switcher') {\n      return /*#__PURE__*/React__default.cloneElement(child, {\n        handleSwitcherItemFocus,\n        index,\n        key: index,\n        expanded\n      });\n    }\n    return /*#__PURE__*/React__default.cloneElement(child, {\n      index,\n      key: index,\n      expanded\n    });\n  });\n  return /*#__PURE__*/React__default.createElement(\"ul\", _extends({\n    ref: ref,\n    className: className\n  }, accessibilityLabel), childrenWithProps);\n});\nSwitcher.displayName = 'Switcher';\nSwitcher.propTypes = {\n  /**\n   * Required props for accessibility label on the underlying menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * expects to receive <SwitcherItem />\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<ul>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool\n};\nexport { Switcher as default };","map":{"version":3,"names":["extends","_extends","React__default","forwardRef","useRef","cx","usePrefix","useMergedRefs","PropTypes","AriaLabelPropType","getDisplayName","Switcher","props","switcherRef","ref","prefix","ariaLabel","ariaLabelledBy","className","customClassName","children","expanded","accessibilityLabel","concat","handleSwitcherItemFocus","_ref","_switcherRef$current","currentIndex","direction","enabledIndices","Children","toArray","reduce","acc","curr","i","Object","keys","length","push","nextValidIndex","nextIndex","indexOf","undefined","switcherItem","current","focus","childrenWithProps","map","child","index","isValidElement","type","cloneElement","key","createElement","displayName","propTypes","node","isRequired","string","bool","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/UIShell/Switcher.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { forwardRef, useRef } from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes.js';\nimport getDisplayName from '../../prop-types/tools/getDisplayName.js';\n\nconst Switcher = /*#__PURE__*/forwardRef(function Switcher(props, forwardRef) {\n  const switcherRef = useRef(null);\n  const ref = useMergedRefs([switcherRef, forwardRef]);\n  const prefix = usePrefix();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    className: customClassName,\n    children,\n    expanded\n  } = props;\n  const accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  const className = cx(`${prefix}--switcher`, {\n    [customClassName || '']: !!customClassName\n  });\n  const handleSwitcherItemFocus = _ref => {\n    let {\n      currentIndex,\n      direction\n    } = _ref;\n    const enabledIndices = React__default.Children.toArray(children).reduce((acc, curr, i) => {\n      if (Object.keys(curr.props).length !== 0) {\n        acc.push(i);\n      }\n      return acc;\n    }, []);\n    const nextValidIndex = (() => {\n      const nextIndex = enabledIndices.indexOf(currentIndex) + direction;\n      switch (enabledIndices[nextIndex]) {\n        case undefined:\n          if (direction === -1) {\n            return enabledIndices[enabledIndices.length - 1];\n          }\n          return 0;\n        default:\n          return enabledIndices[nextIndex];\n      }\n    })();\n    const switcherItem = switcherRef.current?.children[nextValidIndex]?.children[0];\n    if (switcherItem) {\n      switcherItem.focus();\n    }\n  };\n  const childrenWithProps = React__default.Children.toArray(children).map((child, index) => {\n    // only setup click handlers if onChange event is passed\n    if ( /*#__PURE__*/React__default.isValidElement(child) && child.type && getDisplayName(child.type) === 'Switcher') {\n      return /*#__PURE__*/React__default.cloneElement(child, {\n        handleSwitcherItemFocus,\n        index,\n        key: index,\n        expanded\n      });\n    }\n    return /*#__PURE__*/React__default.cloneElement(child, {\n      index,\n      key: index,\n      expanded\n    });\n  });\n  return /*#__PURE__*/React__default.createElement(\"ul\", _extends({\n    ref: ref,\n    className: className\n  }, accessibilityLabel), childrenWithProps);\n});\nSwitcher.displayName = 'Switcher';\nSwitcher.propTypes = {\n  /**\n   * Required props for accessibility label on the underlying menu\n   */\n  ...AriaLabelPropType,\n  /**\n   * expects to receive <SwitcherItem />\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<ul>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool\n};\n\nexport { Switcher as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}