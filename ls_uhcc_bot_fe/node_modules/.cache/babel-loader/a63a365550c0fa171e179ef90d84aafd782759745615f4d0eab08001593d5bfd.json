{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { forwardRef } from 'react';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nvar _ChevronDown;\nconst SideNavSwitcher = /*#__PURE__*/forwardRef(function SideNavSwitcher(props, ref) {\n  const id = useId('side-nav-switcher');\n  const prefix = usePrefix();\n  const {\n    className: customClassName,\n    labelText,\n    onChange,\n    options\n  } = props;\n  const className = cx(\"\".concat(prefix, \"--side-nav__switcher\"), customClassName);\n\n  // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, labelText), /*#__PURE__*/React__default.createElement(\"select\", {\n    id: id,\n    className: \"\".concat(prefix, \"--side-nav__select\"),\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(\"option\", {\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(option => /*#__PURE__*/React__default.createElement(\"option\", {\n    key: option,\n    className: \"\".concat(prefix, \"--side-nav__option\"),\n    value: option\n  }, option))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__switcher-chevron\")\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, {\n    size: 20\n  }))));\n});\nSideNavSwitcher.displayName = 'SideNavSwitcher';\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide the label for the switcher. This will be the first visible option\n   * when someone views this control\n   */\n  labelText: PropTypes.string.isRequired,\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  // @ts-expect-error\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport { SideNavSwitcher as default };","map":{"version":3,"names":["ChevronDown","cx","PropTypes","React__default","forwardRef","useId","usePrefix","_ChevronDown","SideNavSwitcher","props","ref","id","prefix","className","customClassName","labelText","onChange","options","concat","createElement","htmlFor","defaultValue","onBlur","disabled","hidden","value","map","option","key","size","displayName","propTypes","string","isRequired","func","arrayOf","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/UIShell/SideNavSwitcher.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { forwardRef } from 'react';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nvar _ChevronDown;\nconst SideNavSwitcher = /*#__PURE__*/forwardRef(function SideNavSwitcher(props, ref) {\n  const id = useId('side-nav-switcher');\n  const prefix = usePrefix();\n  const {\n    className: customClassName,\n    labelText,\n    onChange,\n    options\n  } = props;\n  const className = cx(`${prefix}--side-nav__switcher`, customClassName);\n\n  // Note for usage around `onBlur`: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/React__default.createElement(\"label\", {\n    htmlFor: id,\n    className: `${prefix}--assistive-text`\n  }, labelText), /*#__PURE__*/React__default.createElement(\"select\", {\n    id: id,\n    className: `${prefix}--side-nav__select`,\n    defaultValue: \"\",\n    onBlur: onChange,\n    onChange: onChange,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(\"option\", {\n    className: `${prefix}--side-nav__option`,\n    disabled: true,\n    hidden: true,\n    value: \"\"\n  }, labelText), options.map(option => /*#__PURE__*/React__default.createElement(\"option\", {\n    key: option,\n    className: `${prefix}--side-nav__option`,\n    value: option\n  }, option))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--side-nav__switcher-chevron`\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, {\n    size: 20\n  }))));\n});\nSideNavSwitcher.displayName = 'SideNavSwitcher';\nSideNavSwitcher.propTypes = {\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide the label for the switcher. This will be the first visible option\n   * when someone views this control\n   */\n  labelText: PropTypes.string.isRequired,\n  /**\n   * Provide a callback function that is called whenever the switcher value is\n   * updated\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide an array of options to be rendered in the switcher as an\n   * `<option>`. The text value will be what is displayed to the user and is set\n   * as the `value` prop for each `<option>`.\n   */\n  // @ts-expect-error\n  options: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport { SideNavSwitcher as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,IAAIC,UAAU,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,IAAIC,YAAY;AAChB,MAAMC,eAAe,GAAG,aAAaJ,UAAU,CAAC,SAASI,eAAeA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACnF,MAAMC,EAAE,GAAGN,KAAK,CAAC,mBAAmB,CAAC;EACrC,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM;IACJO,SAAS,EAAEC,eAAe;IAC1BC,SAAS;IACTC,QAAQ;IACRC;EACF,CAAC,GAAGR,KAAK;EACT,MAAMI,SAAS,GAAGZ,EAAE,IAAAiB,MAAA,CAAIN,MAAM,2BAAwBE,eAAe,CAAC;;EAEtE;EACA,OAAO,aAAaX,cAAc,CAACgB,aAAa,CAAC,KAAK,EAAE;IACtDN,SAAS,EAAEA;EACb,CAAC,EAAE,aAAaV,cAAc,CAACgB,aAAa,CAAC,OAAO,EAAE;IACpDC,OAAO,EAAET,EAAE;IACXE,SAAS,KAAAK,MAAA,CAAKN,MAAM;EACtB,CAAC,EAAEG,SAAS,CAAC,EAAE,aAAaZ,cAAc,CAACgB,aAAa,CAAC,QAAQ,EAAE;IACjER,EAAE,EAAEA,EAAE;IACNE,SAAS,KAAAK,MAAA,CAAKN,MAAM,uBAAoB;IACxCS,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAEN,QAAQ;IAChBA,QAAQ,EAAEA,QAAQ;IAClBN,GAAG,EAAEA;EACP,CAAC,EAAE,aAAaP,cAAc,CAACgB,aAAa,CAAC,QAAQ,EAAE;IACrDN,SAAS,KAAAK,MAAA,CAAKN,MAAM,uBAAoB;IACxCW,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE;EACT,CAAC,EAAEV,SAAS,CAAC,EAAEE,OAAO,CAACS,GAAG,CAACC,MAAM,IAAI,aAAaxB,cAAc,CAACgB,aAAa,CAAC,QAAQ,EAAE;IACvFS,GAAG,EAAED,MAAM;IACXd,SAAS,KAAAK,MAAA,CAAKN,MAAM,uBAAoB;IACxCa,KAAK,EAAEE;EACT,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAE,aAAaxB,cAAc,CAACgB,aAAa,CAAC,KAAK,EAAE;IAC7DN,SAAS,KAAAK,MAAA,CAAKN,MAAM;EACtB,CAAC,EAAEL,YAAY,KAAKA,YAAY,GAAG,aAAaJ,cAAc,CAACgB,aAAa,CAACnB,WAAW,EAAE;IACxF6B,IAAI,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AACFrB,eAAe,CAACsB,WAAW,GAAG,iBAAiB;AAC/CtB,eAAe,CAACuB,SAAS,GAAG;EAC1B;AACF;AACA;EACElB,SAAS,EAAEX,SAAS,CAAC8B,MAAM;EAC3B;AACF;AACA;AACA;EACEjB,SAAS,EAAEb,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACtC;AACF;AACA;AACA;EACEjB,QAAQ,EAAEd,SAAS,CAACgC,IAAI;EACxB;AACF;AACA;AACA;AACA;EACE;EACAjB,OAAO,EAAEf,SAAS,CAACiC,OAAO,CAACjC,SAAS,CAAC8B,MAAM,CAAC,CAACC;AAC/C,CAAC;AAED,SAASzB,eAAe,IAAI4B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}