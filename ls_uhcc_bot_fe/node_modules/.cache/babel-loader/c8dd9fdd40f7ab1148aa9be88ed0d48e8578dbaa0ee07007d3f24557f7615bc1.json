{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronRight } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nconst TableExpandHeader = _ref => {\n  let {\n    ['aria-controls']: ariaControls,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    className: headerClassName,\n    enableExpando,\n    enableToggle,\n    id = 'expand',\n    isExpanded,\n    onExpand,\n    expandIconDescription,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(\"\".concat(prefix, \"--table-expand\"), headerClassName);\n  const previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React__default.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue,\n    id: id\n  }, rest), enableExpando || enableToggle ? /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": ariaControls\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  })) : null, children);\n};\nTableExpandHeader.propTypes = {\n  /**\n   * Space separated list of one or more ID values referencing the TableExpandedRow(s) being controlled by the TableExpandHeader\n   */\n  ['aria-controls']: PropTypes.string,\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * The enableExpando prop is being replaced by enableToggle\n   */\n  enableExpando: deprecate(PropTypes.bool, 'The `enableExpando` prop has been deprecated in favor of `enableToggle`. This prop will be removed in the next major release.'),\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableToggle: PropTypes.bool,\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n  /**\n   * Supply an id to the th element.\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: requiredIfGivenPropIsTruthy('enableToggle', PropTypes.bool),\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.func)])\n};\nexport { TableExpandHeader as default };","map":{"version":3,"names":["extends","_extends","ChevronRight","cx","PropTypes","React__default","usePrefix","deprecate","requiredIfGivenPropIsTruthy","TableExpandHeader","_ref","ariaControls","ariaLabel","deprecatedAriaLabel","className","headerClassName","enableExpando","enableToggle","id","isExpanded","onExpand","expandIconDescription","children","rest","prefix","concat","previousValue","undefined","createElement","scope","type","onClick","title","propTypes","string","node","bool","oneOfType","func","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/DataTable/TableExpandHeader.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { ChevronRight } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\n\nconst TableExpandHeader = _ref => {\n  let {\n    ['aria-controls']: ariaControls,\n    ['aria-label']: ariaLabel,\n    ariaLabel: deprecatedAriaLabel,\n    className: headerClassName,\n    enableExpando,\n    enableToggle,\n    id = 'expand',\n    isExpanded,\n    onExpand,\n    expandIconDescription,\n    children,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--table-expand`, headerClassName);\n  const previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React__default.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue,\n    id: id\n  }, rest), enableExpando || enableToggle ? /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    className: `${prefix}--table-expand__button`,\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": deprecatedAriaLabel || ariaLabel,\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": ariaControls\n  }, /*#__PURE__*/React__default.createElement(ChevronRight, {\n    className: `${prefix}--table-expand__svg`,\n    \"aria-label\": expandIconDescription\n  })) : null, children);\n};\nTableExpandHeader.propTypes = {\n  /**\n   * Space separated list of one or more ID values referencing the TableExpandedRow(s) being controlled by the TableExpandHeader\n   */\n  ['aria-controls']: PropTypes.string,\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Deprecated, please use `aria-label` instead.\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * The enableExpando prop is being replaced by enableToggle\n   */\n  enableExpando: deprecate(PropTypes.bool, 'The `enableExpando` prop has been deprecated in favor of `enableToggle`. This prop will be removed in the next major release.'),\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableToggle: PropTypes.bool,\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n  /**\n   * Supply an id to the th element.\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExpandedRow` work together\n   */\n  isExpanded: requiredIfGivenPropIsTruthy('enableToggle', PropTypes.bool),\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: PropTypes.oneOfType([requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func), requiredIfGivenPropIsTruthy('enableToggle', PropTypes.func)])\n};\n\nexport { TableExpandHeader as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}