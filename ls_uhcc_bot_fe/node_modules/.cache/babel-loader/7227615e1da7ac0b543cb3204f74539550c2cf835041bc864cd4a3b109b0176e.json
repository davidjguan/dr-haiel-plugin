{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport { isElement } from 'react-is';\nimport PropTypes from 'prop-types';\nimport { Layer } from '../Layer/index.js';\nimport { ModalHeader } from './ModalHeader.js';\nimport { ModalFooter } from './ModalFooter.js';\nimport debounce from 'lodash.debounce';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport mergeRefs from '../../tools/mergeRefs.js';\nimport cx from 'classnames';\nimport toggleClass from '../../tools/toggleClass.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nimport wrapFocus, { wrapFocusWithoutSentinels, elementOrParentIsFloatingMenu } from '../../internal/wrapFocus.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape, Tab } from '../../internal/keyboard/keys.js';\nconst ModalBody = /*#__PURE__*/React__default.forwardRef(function ModalBody(_ref, ref) {\n  let {\n    className: customClassName,\n    children,\n    hasForm,\n    hasScrollingContent,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const contentRef = useRef(null);\n  const [isScrollable, setIsScrollable] = useState(false);\n  const contentClass = cx({\n    [\"\".concat(prefix, \"--modal-content\")]: true,\n    [\"\".concat(prefix, \"--modal-content--with-form\")]: hasForm,\n    [\"\".concat(prefix, \"--modal-scroll-content\")]: hasScrollingContent || isScrollable\n  }, customClassName);\n  useIsomorphicEffect(() => {\n    if (contentRef.current) {\n      setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n    }\n    function handler() {\n      if (contentRef.current) {\n        setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n      }\n    }\n    const debouncedHandler = debounce(handler, 200);\n    window.addEventListener('resize', debouncedHandler);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  }, []);\n  const hasScrollingContentProps = hasScrollingContent || isScrollable ? {\n    tabIndex: 0,\n    role: 'region'\n  } : {};\n  return /*#__PURE__*/React__default.createElement(Layer, _extends({\n    className: contentClass\n  }, hasScrollingContentProps, rest, {\n    ref: mergeRefs(contentRef, ref)\n  }), children);\n});\nModalBody.propTypes = {\n  /**\n   * Required props for the accessibility label of the header\n   */\n  ['aria-label']: requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string),\n  /**\n   * Specify the content to be placed in the ModalBody\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the Modal Body node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide whether the modal content has a form element.\n   * If `true` is used here, non-form child content should have `cds--modal-content__regular-content` class.\n   */\n  hasForm: PropTypes.bool,\n  /**\n   * Specify whether the modal contains scrolling content\n   */\n  hasScrollingContent: PropTypes.bool\n};\nconst ComposedModal = /*#__PURE__*/React__default.forwardRef(function ComposedModal(_ref2, ref) {\n  var _slug$type;\n  let {\n    ['aria-labelledby']: ariaLabelledBy,\n    ['aria-label']: ariaLabel,\n    children,\n    className: customClassName,\n    containerClassName,\n    danger,\n    isFullWidth,\n    onClose,\n    onKeyDown,\n    open,\n    preventCloseOnClickOutside,\n    selectorPrimaryFocus = '[data-modal-primary-focus]',\n    selectorsFloatingMenus,\n    size,\n    launcherButtonRef,\n    slug,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const [isOpen, setIsOpen] = useState(!!open);\n  const [wasOpen, setWasOpen] = useState(!!open);\n  const innerModal = useRef(null);\n  const button = useRef(null);\n  const startSentinel = useRef(null);\n  const endSentinel = useRef(null);\n  const focusTrapWithoutSentinels = useFeatureFlag('enable-experimental-focus-wrap-without-sentinels');\n\n  // Keep track of modal open/close state\n  // and propagate it to the document.body\n  useEffect(() => {\n    if (open !== wasOpen) {\n      setIsOpen(!!open);\n      setWasOpen(!!open);\n      toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), !!open);\n    }\n  }, [open, wasOpen, prefix]);\n  // Remove the document.body className on unmount\n  useEffect(() => {\n    return () => {\n      toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), false);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleKeyDown(event) {\n    event.stopPropagation();\n    if (match(event, Escape)) {\n      closeModal(event);\n    }\n    if (focusTrapWithoutSentinels && open && match(event, Tab) && innerModal.current) {\n      wrapFocusWithoutSentinels({\n        containerNode: innerModal.current,\n        currentActiveNode: event.target,\n        event: event\n      });\n    }\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event);\n  }\n  function handleOnClick(evt) {\n    const target = evt.target;\n    evt.stopPropagation();\n    if (!preventCloseOnClickOutside && !elementOrParentIsFloatingMenu(target, selectorsFloatingMenus) && innerModal.current && !innerModal.current.contains(target)) {\n      closeModal(evt);\n    }\n  }\n  function handleBlur(_ref3) {\n    let {\n      target: oldActiveNode,\n      relatedTarget: currentActiveNode\n    } = _ref3;\n    if (open && currentActiveNode && oldActiveNode && innerModal.current) {\n      const {\n        current: bodyNode\n      } = innerModal;\n      const {\n        current: startSentinelNode\n      } = startSentinel;\n      const {\n        current: endSentinelNode\n      } = endSentinel;\n      wrapFocus({\n        bodyNode,\n        startTrapNode: startSentinelNode,\n        endTrapNode: endSentinelNode,\n        currentActiveNode,\n        oldActiveNode,\n        selectorsFloatingMenus: selectorsFloatingMenus === null || selectorsFloatingMenus === void 0 ? void 0 : selectorsFloatingMenus.filter(Boolean)\n      });\n    }\n  }\n  function closeModal(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  }\n  const modalClass = cx(\"\".concat(prefix, \"--modal\"), {\n    'is-visible': isOpen,\n    [\"\".concat(prefix, \"--modal--danger\")]: danger,\n    [\"\".concat(prefix, \"--modal--slug\")]: slug\n  }, customClassName);\n  const containerClass = cx(\"\".concat(prefix, \"--modal-container\"), size && \"\".concat(prefix, \"--modal-container--\").concat(size), isFullWidth && \"\".concat(prefix, \"--modal-container--full-width\"), containerClassName);\n\n  // Generate aria-label based on Modal Header label if one is not provided (L253)\n  let generatedAriaLabel;\n  const childrenWithProps = React__default.Children.toArray(children).map(child => {\n    switch (true) {\n      case isElement(child) && child.type === React__default.createElement(ModalHeader).type:\n        {\n          const el = child;\n          generatedAriaLabel = el.props.label;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal\n          });\n        }\n      case isElement(child) && child.type === React__default.createElement(ModalFooter).type:\n        {\n          const el = child;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal,\n            inputref: button\n          });\n        }\n      default:\n        return child;\n    }\n  });\n  useEffect(() => {\n    if (!open && launcherButtonRef) {\n      setTimeout(() => {\n        var _launcherButtonRef$cu;\n        launcherButtonRef === null || launcherButtonRef === void 0 || (_launcherButtonRef$cu = launcherButtonRef.current) === null || _launcherButtonRef$cu === void 0 || _launcherButtonRef$cu.focus();\n      });\n    }\n  }, [open, launcherButtonRef]);\n  useEffect(() => {\n    const initialFocus = focusContainerElement => {\n      const containerElement = focusContainerElement || innerModal.current;\n      const primaryFocusElement = containerElement ? containerElement.querySelector(selectorPrimaryFocus) : null;\n      if (primaryFocusElement) {\n        return primaryFocusElement;\n      }\n      return button && button.current;\n    };\n    const focusButton = focusContainerElement => {\n      const target = initialFocus(focusContainerElement);\n      if (target) {\n        target.focus();\n      }\n    };\n    if (open && isOpen) {\n      focusButton(innerModal.current);\n    }\n  }, [open, selectorPrimaryFocus, isOpen]);\n\n  // Slug is always size `sm`\n  let normalizedSlug;\n  if (slug && ((_slug$type = slug['type']) === null || _slug$type === void 0 ? void 0 : _slug$type.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'sm'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(Layer, _extends({}, rest, {\n    level: 0,\n    role: \"presentation\",\n    ref: ref,\n    \"aria-hidden\": !open,\n    onBlur: !focusTrapWithoutSentinels ? handleBlur : () => {},\n    onClick: composeEventHandlers([rest === null || rest === void 0 ? void 0 : rest.onClick, handleOnClick]),\n    onKeyDown: handleKeyDown,\n    className: modalClass\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: containerClass,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": ariaLabel ? ariaLabel : generatedAriaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: startSentinel,\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, \"Focus sentinel\"), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: innerModal,\n    className: \"\".concat(prefix, \"--modal-container-body\")\n  }, normalizedSlug, childrenWithProps), !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: endSentinel,\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, \"Focus sentinel\")));\n});\nComposedModal.propTypes = {\n  /**\n   * Specify the aria-label for cds--modal-container\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Specify the aria-labelledby for cds--modal-container\n   */\n  ['aria-labelledby']: PropTypes.string,\n  /**\n   * Specify the content to be placed in the ComposedModal\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal root node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal node\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n  /**\n   * Specify whether the Modal content should have any inner padding.\n   */\n  isFullWidth: PropTypes.bool,\n  /**\n   * Provide a ref to return focus to once the modal is closed.\n   */\n  // @ts-expect-error: Invalid derived type\n  launcherButtonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify an optional handler for closing modal.\n   * Returning `false` here prevents closing modal.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Specify an optional handler for the `onKeyDown` event. Called for all\n   * `onKeyDown` events that do not close the modal\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify whether the Modal is currently open\n   */\n  open: PropTypes.bool,\n  preventCloseOnClickOutside: PropTypes.bool,\n  /**\n   * Specify a CSS selector that matches the DOM element that should be\n   * focused when the Modal opens\n   */\n  selectorPrimaryFocus: PropTypes.string,\n  /**\n   * Specify the CSS selectors that match the floating menus\n   */\n  selectorsFloatingMenus: PropTypes.arrayOf(PropTypes.string.isRequired),\n  /**\n   * Specify the size variant.\n   */\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg']),\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `ComposedModal` component\n   */\n  slug: PropTypes.node\n};\nexport { ModalBody, ComposedModal as default };","map":{"version":3,"names":["extends","_extends","React__default","useRef","useState","useEffect","isElement","PropTypes","Layer","ModalHeader","ModalFooter","debounce","useIsomorphicEffect","mergeRefs","cx","toggleClass","requiredIfGivenPropIsTruthy","wrapFocus","wrapFocusWithoutSentinels","elementOrParentIsFloatingMenu","usePrefix","useFeatureFlag","composeEventHandlers","match","Escape","Tab","ModalBody","forwardRef","_ref","ref","className","customClassName","children","hasForm","hasScrollingContent","rest","prefix","contentRef","isScrollable","setIsScrollable","contentClass","concat","current","scrollHeight","clientHeight","handler","debouncedHandler","window","addEventListener","cancel","removeEventListener","hasScrollingContentProps","tabIndex","role","createElement","propTypes","string","node","bool","ComposedModal","_ref2","_slug$type","ariaLabelledBy","ariaLabel","containerClassName","danger","isFullWidth","onClose","onKeyDown","open","preventCloseOnClickOutside","selectorPrimaryFocus","selectorsFloatingMenus","size","launcherButtonRef","slug","isOpen","setIsOpen","wasOpen","setWasOpen","innerModal","button","startSentinel","endSentinel","focusTrapWithoutSentinels","document","body","handleKeyDown","event","stopPropagation","closeModal","containerNode","currentActiveNode","target","handleOnClick","evt","contains","handleBlur","_ref3","oldActiveNode","relatedTarget","bodyNode","startSentinelNode","endSentinelNode","startTrapNode","endTrapNode","filter","Boolean","modalClass","containerClass","generatedAriaLabel","childrenWithProps","Children","toArray","map","child","type","el","props","label","cloneElement","inputref","setTimeout","_launcherButtonRef$cu","focus","initialFocus","focusContainerElement","containerElement","primaryFocusElement","querySelector","focusButton","normalizedSlug","displayName","level","onBlur","onClick","oneOfType","func","shape","any","arrayOf","isRequired","oneOf","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/ComposedModal/ComposedModal.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport { isElement } from 'react-is';\nimport PropTypes from 'prop-types';\nimport { Layer } from '../Layer/index.js';\nimport { ModalHeader } from './ModalHeader.js';\nimport { ModalFooter } from './ModalFooter.js';\nimport debounce from 'lodash.debounce';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport mergeRefs from '../../tools/mergeRefs.js';\nimport cx from 'classnames';\nimport toggleClass from '../../tools/toggleClass.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nimport wrapFocus, { wrapFocusWithoutSentinels, elementOrParentIsFloatingMenu } from '../../internal/wrapFocus.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape, Tab } from '../../internal/keyboard/keys.js';\n\nconst ModalBody = /*#__PURE__*/React__default.forwardRef(function ModalBody(_ref, ref) {\n  let {\n    className: customClassName,\n    children,\n    hasForm,\n    hasScrollingContent,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const contentRef = useRef(null);\n  const [isScrollable, setIsScrollable] = useState(false);\n  const contentClass = cx({\n    [`${prefix}--modal-content`]: true,\n    [`${prefix}--modal-content--with-form`]: hasForm,\n    [`${prefix}--modal-scroll-content`]: hasScrollingContent || isScrollable\n  }, customClassName);\n  useIsomorphicEffect(() => {\n    if (contentRef.current) {\n      setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n    }\n    function handler() {\n      if (contentRef.current) {\n        setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n      }\n    }\n    const debouncedHandler = debounce(handler, 200);\n    window.addEventListener('resize', debouncedHandler);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  }, []);\n  const hasScrollingContentProps = hasScrollingContent || isScrollable ? {\n    tabIndex: 0,\n    role: 'region'\n  } : {};\n  return /*#__PURE__*/React__default.createElement(Layer, _extends({\n    className: contentClass\n  }, hasScrollingContentProps, rest, {\n    ref: mergeRefs(contentRef, ref)\n  }), children);\n});\nModalBody.propTypes = {\n  /**\n   * Required props for the accessibility label of the header\n   */\n  ['aria-label']: requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string),\n  /**\n   * Specify the content to be placed in the ModalBody\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be added to the Modal Body node\n   */\n  className: PropTypes.string,\n  /**\n   * Provide whether the modal content has a form element.\n   * If `true` is used here, non-form child content should have `cds--modal-content__regular-content` class.\n   */\n  hasForm: PropTypes.bool,\n  /**\n   * Specify whether the modal contains scrolling content\n   */\n  hasScrollingContent: PropTypes.bool\n};\nconst ComposedModal = /*#__PURE__*/React__default.forwardRef(function ComposedModal(_ref2, ref) {\n  let {\n    ['aria-labelledby']: ariaLabelledBy,\n    ['aria-label']: ariaLabel,\n    children,\n    className: customClassName,\n    containerClassName,\n    danger,\n    isFullWidth,\n    onClose,\n    onKeyDown,\n    open,\n    preventCloseOnClickOutside,\n    selectorPrimaryFocus = '[data-modal-primary-focus]',\n    selectorsFloatingMenus,\n    size,\n    launcherButtonRef,\n    slug,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const [isOpen, setIsOpen] = useState(!!open);\n  const [wasOpen, setWasOpen] = useState(!!open);\n  const innerModal = useRef(null);\n  const button = useRef(null);\n  const startSentinel = useRef(null);\n  const endSentinel = useRef(null);\n  const focusTrapWithoutSentinels = useFeatureFlag('enable-experimental-focus-wrap-without-sentinels');\n\n  // Keep track of modal open/close state\n  // and propagate it to the document.body\n  useEffect(() => {\n    if (open !== wasOpen) {\n      setIsOpen(!!open);\n      setWasOpen(!!open);\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, !!open);\n    }\n  }, [open, wasOpen, prefix]);\n  // Remove the document.body className on unmount\n  useEffect(() => {\n    return () => {\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, false);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleKeyDown(event) {\n    event.stopPropagation();\n    if (match(event, Escape)) {\n      closeModal(event);\n    }\n    if (focusTrapWithoutSentinels && open && match(event, Tab) && innerModal.current) {\n      wrapFocusWithoutSentinels({\n        containerNode: innerModal.current,\n        currentActiveNode: event.target,\n        event: event\n      });\n    }\n    onKeyDown?.(event);\n  }\n  function handleOnClick(evt) {\n    const target = evt.target;\n    evt.stopPropagation();\n    if (!preventCloseOnClickOutside && !elementOrParentIsFloatingMenu(target, selectorsFloatingMenus) && innerModal.current && !innerModal.current.contains(target)) {\n      closeModal(evt);\n    }\n  }\n  function handleBlur(_ref3) {\n    let {\n      target: oldActiveNode,\n      relatedTarget: currentActiveNode\n    } = _ref3;\n    if (open && currentActiveNode && oldActiveNode && innerModal.current) {\n      const {\n        current: bodyNode\n      } = innerModal;\n      const {\n        current: startSentinelNode\n      } = startSentinel;\n      const {\n        current: endSentinelNode\n      } = endSentinel;\n      wrapFocus({\n        bodyNode,\n        startTrapNode: startSentinelNode,\n        endTrapNode: endSentinelNode,\n        currentActiveNode,\n        oldActiveNode,\n        selectorsFloatingMenus: selectorsFloatingMenus?.filter(Boolean)\n      });\n    }\n  }\n  function closeModal(evt) {\n    if (!onClose || onClose(evt) !== false) {\n      setIsOpen(false);\n    }\n  }\n  const modalClass = cx(`${prefix}--modal`, {\n    'is-visible': isOpen,\n    [`${prefix}--modal--danger`]: danger,\n    [`${prefix}--modal--slug`]: slug\n  }, customClassName);\n  const containerClass = cx(`${prefix}--modal-container`, size && `${prefix}--modal-container--${size}`, isFullWidth && `${prefix}--modal-container--full-width`, containerClassName);\n\n  // Generate aria-label based on Modal Header label if one is not provided (L253)\n  let generatedAriaLabel;\n  const childrenWithProps = React__default.Children.toArray(children).map(child => {\n    switch (true) {\n      case isElement(child) && child.type === React__default.createElement(ModalHeader).type:\n        {\n          const el = child;\n          generatedAriaLabel = el.props.label;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal\n          });\n        }\n      case isElement(child) && child.type === React__default.createElement(ModalFooter).type:\n        {\n          const el = child;\n          return /*#__PURE__*/React__default.cloneElement(el, {\n            closeModal,\n            inputref: button\n          });\n        }\n      default:\n        return child;\n    }\n  });\n  useEffect(() => {\n    if (!open && launcherButtonRef) {\n      setTimeout(() => {\n        launcherButtonRef?.current?.focus();\n      });\n    }\n  }, [open, launcherButtonRef]);\n  useEffect(() => {\n    const initialFocus = focusContainerElement => {\n      const containerElement = focusContainerElement || innerModal.current;\n      const primaryFocusElement = containerElement ? containerElement.querySelector(selectorPrimaryFocus) : null;\n      if (primaryFocusElement) {\n        return primaryFocusElement;\n      }\n      return button && button.current;\n    };\n    const focusButton = focusContainerElement => {\n      const target = initialFocus(focusContainerElement);\n      if (target) {\n        target.focus();\n      }\n    };\n    if (open && isOpen) {\n      focusButton(innerModal.current);\n    }\n  }, [open, selectorPrimaryFocus, isOpen]);\n\n  // Slug is always size `sm`\n  let normalizedSlug;\n  if (slug && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'sm'\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(Layer, _extends({}, rest, {\n    level: 0,\n    role: \"presentation\",\n    ref: ref,\n    \"aria-hidden\": !open,\n    onBlur: !focusTrapWithoutSentinels ? handleBlur : () => {},\n    onClick: composeEventHandlers([rest?.onClick, handleOnClick]),\n    onKeyDown: handleKeyDown,\n    className: modalClass\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: containerClass,\n    role: \"dialog\",\n    \"aria-modal\": \"true\",\n    \"aria-label\": ariaLabel ? ariaLabel : generatedAriaLabel,\n    \"aria-labelledby\": ariaLabelledBy\n  }, !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: startSentinel,\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\"), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: innerModal,\n    className: `${prefix}--modal-container-body`\n  }, normalizedSlug, childrenWithProps), !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    ref: endSentinel,\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\")));\n});\nComposedModal.propTypes = {\n  /**\n   * Specify the aria-label for cds--modal-container\n   */\n  ['aria-label']: PropTypes.string,\n  /**\n   * Specify the aria-labelledby for cds--modal-container\n   */\n  ['aria-labelledby']: PropTypes.string,\n  /**\n   * Specify the content to be placed in the ComposedModal\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal root node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the modal node\n   */\n  containerClassName: PropTypes.string,\n  /**\n   * Specify whether the primary button should be replaced with danger button.\n   * Note that this prop is not applied if you render primary/danger button by yourself\n   */\n  danger: PropTypes.bool,\n  /**\n   * Specify whether the Modal content should have any inner padding.\n   */\n  isFullWidth: PropTypes.bool,\n  /**\n   * Provide a ref to return focus to once the modal is closed.\n   */\n  // @ts-expect-error: Invalid derived type\n  launcherButtonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify an optional handler for closing modal.\n   * Returning `false` here prevents closing modal.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Specify an optional handler for the `onKeyDown` event. Called for all\n   * `onKeyDown` events that do not close the modal\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Specify whether the Modal is currently open\n   */\n  open: PropTypes.bool,\n  preventCloseOnClickOutside: PropTypes.bool,\n  /**\n   * Specify a CSS selector that matches the DOM element that should be\n   * focused when the Modal opens\n   */\n  selectorPrimaryFocus: PropTypes.string,\n  /**\n   * Specify the CSS selectors that match the floating menus\n   */\n  selectorsFloatingMenus: PropTypes.arrayOf(PropTypes.string.isRequired),\n  /**\n   * Specify the size variant.\n   */\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg']),\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `ComposedModal` component\n   */\n  slug: PropTypes.node\n};\n\nexport { ModalBody, ComposedModal as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}