{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useRef, useCallback, useEffect } from 'react';\n\n/**\n * `useDelayedState` mirrors `useState` but also allows you to add a delay to\n * when your state updates. You can provide a second argument to `setState`,\n * `delayMs`, which will be the time in milliseconds after which the state is\n * updated.\n *\n * This hook will clean up pending timers in `useEffect` and will cancel any\n * pending timers when a `setState` is called before the state is updated from\n * a previous call\n */\n\nfunction useDelayedState(initialState) {\n  const [state, setState] = useState(initialState);\n  const timeoutId = useRef(null);\n  // We use `useCallback` to match the signature of React's `useState` which will\n  // always return the same reference for the `setState` updater\n  const setStateWithDelay = useCallback(function (stateToSet) {\n    var _timeoutId$current;\n    let delayMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    window.clearTimeout((_timeoutId$current = timeoutId.current) !== null && _timeoutId$current !== void 0 ? _timeoutId$current : undefined);\n    timeoutId.current = null;\n    if (delayMs === 0) {\n      setState(stateToSet);\n      return;\n    }\n    timeoutId.current = window.setTimeout(() => {\n      setState(stateToSet);\n      timeoutId.current = null;\n    }, delayMs);\n  }, []);\n  useEffect(() => {\n    return () => {\n      var _timeoutId$current2;\n      window.clearTimeout((_timeoutId$current2 = timeoutId.current) !== null && _timeoutId$current2 !== void 0 ? _timeoutId$current2 : undefined);\n    };\n  }, []);\n  return [state, setStateWithDelay];\n}\nexport { useDelayedState };","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","useDelayedState","initialState","state","setState","timeoutId","setStateWithDelay","stateToSet","_timeoutId$current","delayMs","arguments","length","undefined","window","clearTimeout","current","setTimeout","_timeoutId$current2"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/internal/useDelayedState.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { useState, useRef, useCallback, useEffect } from 'react';\n\n/**\n * `useDelayedState` mirrors `useState` but also allows you to add a delay to\n * when your state updates. You can provide a second argument to `setState`,\n * `delayMs`, which will be the time in milliseconds after which the state is\n * updated.\n *\n * This hook will clean up pending timers in `useEffect` and will cancel any\n * pending timers when a `setState` is called before the state is updated from\n * a previous call\n */\n\nfunction useDelayedState(initialState) {\n  const [state, setState] = useState(initialState);\n  const timeoutId = useRef(null);\n  // We use `useCallback` to match the signature of React's `useState` which will\n  // always return the same reference for the `setState` updater\n  const setStateWithDelay = useCallback(function (stateToSet) {\n    let delayMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    window.clearTimeout(timeoutId.current ?? undefined);\n    timeoutId.current = null;\n    if (delayMs === 0) {\n      setState(stateToSet);\n      return;\n    }\n    timeoutId.current = window.setTimeout(() => {\n      setState(stateToSet);\n      timeoutId.current = null;\n    }, delayMs);\n  }, []);\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(timeoutId.current ?? undefined);\n    };\n  }, []);\n  return [state, setStateWithDelay];\n}\n\nexport { useDelayedState };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAeA,CAACC,YAAY,EAAE;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACK,YAAY,CAAC;EAChD,MAAMG,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B;EACA;EACA,MAAMQ,iBAAiB,GAAGP,WAAW,CAAC,UAAUQ,UAAU,EAAE;IAAA,IAAAC,kBAAA;IAC1D,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;IACnFG,MAAM,CAACC,YAAY,EAAAN,kBAAA,GAACH,SAAS,CAACU,OAAO,cAAAP,kBAAA,cAAAA,kBAAA,GAAII,SAAS,CAAC;IACnDP,SAAS,CAACU,OAAO,GAAG,IAAI;IACxB,IAAIN,OAAO,KAAK,CAAC,EAAE;MACjBL,QAAQ,CAACG,UAAU,CAAC;MACpB;IACF;IACAF,SAAS,CAACU,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,MAAM;MAC1CZ,QAAQ,CAACG,UAAU,CAAC;MACpBF,SAAS,CAACU,OAAO,GAAG,IAAI;IAC1B,CAAC,EAAEN,OAAO,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNT,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MAAA,IAAAiB,mBAAA;MACXJ,MAAM,CAACC,YAAY,EAAAG,mBAAA,GAACZ,SAAS,CAACU,OAAO,cAAAE,mBAAA,cAAAA,mBAAA,GAAIL,SAAS,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACT,KAAK,EAAEG,iBAAiB,CAAC;AACnC;AAEA,SAASL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}