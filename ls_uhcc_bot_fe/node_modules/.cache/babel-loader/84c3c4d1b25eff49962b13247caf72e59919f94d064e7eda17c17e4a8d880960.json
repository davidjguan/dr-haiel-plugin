{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useState } from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nconst noopFn = () => {};\nconst HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    expanded,\n    addFocusListeners = true,\n    onHeaderPanelFocus = noopFn,\n    href,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const headerPanelReference = useRef(null);\n  const headerPanelRef = useMergedRefs([headerPanelReference, ref]);\n  const controlled = useRef(expanded !== undefined).current;\n  const [expandedState, setExpandedState] = useState(expanded);\n  const expandedProp = controlled ? expanded : expandedState;\n  const [lastClickedElement, setLastClickedElement] = useState(null);\n  const className = cx(\"\".concat(prefix, \"--header-panel\"), {\n    [\"\".concat(prefix, \"--header-panel--expanded\")]: expandedProp,\n    [customClassName]: !!customClassName\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onBlur = event => {\n      var _lastClickedElement$c;\n      if (!event.currentTarget.contains(event.relatedTarget) && !(lastClickedElement !== null && lastClickedElement !== void 0 && (_lastClickedElement$c = lastClickedElement.classList) !== null && _lastClickedElement$c !== void 0 && _lastClickedElement$c.contains('cds--switcher__item-link'))) {\n        setExpandedState(false);\n        setLastClickedElement(null);\n        if (expanded) {\n          onHeaderPanelFocus();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        setExpandedState(false);\n        onHeaderPanelFocus();\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  useWindowEvent('click', () => {\n    var _childJsxElement$type, _headerPanelReference;\n    const focusedElement = document.activeElement;\n    setLastClickedElement(focusedElement);\n    const childJsxElement = children;\n    if (((_childJsxElement$type = childJsxElement.type) === null || _childJsxElement$type === void 0 ? void 0 : _childJsxElement$type.displayName) === 'Switcher' && !(focusedElement !== null && focusedElement !== void 0 && focusedElement.closest(\".\".concat(prefix, \"--header-panel--expanded\"))) && !(focusedElement !== null && focusedElement !== void 0 && focusedElement.closest(\".\".concat(prefix, \"--header__action\"))) && !(headerPanelReference !== null && headerPanelReference !== void 0 && (_headerPanelReference = headerPanelReference.current) !== null && _headerPanelReference !== void 0 && _headerPanelReference.classList.contains(\"\".concat(prefix, \"--switcher\"))) && expanded) {\n      setExpandedState(false);\n      onHeaderPanelFocus();\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    className: className,\n    ref: headerPanelRef\n  }, eventHandlers), children);\n});\nHeaderPanel.propTypes = {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * The content that will render inside of the `HeaderPanel`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that could\n   * be target.\n   */\n  href: PropTypes.string,\n  /**\n   * An optional listener that is called a callback to collapse the HeaderPanel\n   */\n  onHeaderPanelFocus: PropTypes.func\n};\nHeaderPanel.displayName = 'HeaderPanel';\nexport { HeaderPanel as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","useRef","useState","usePrefix","useWindowEvent","useMergedRefs","match","Escape","noopFn","HeaderPanel","forwardRef","_ref","ref","children","className","customClassName","expanded","addFocusListeners","onHeaderPanelFocus","href","rest","prefix","headerPanelReference","headerPanelRef","controlled","undefined","current","expandedState","setExpandedState","expandedProp","lastClickedElement","setLastClickedElement","concat","eventHandlers","onBlur","event","_lastClickedElement$c","currentTarget","contains","relatedTarget","classList","onKeyDown","window","location","_childJsxElement$type","_headerPanelReference","focusedElement","document","activeElement","childJsxElement","type","displayName","closest","createElement","propTypes","bool","node","string","func","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/UIShell/HeaderPanel.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useState } from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { useWindowEvent } from '../../internal/useEvent.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nconst noopFn = () => {};\nconst HeaderPanel = /*#__PURE__*/React__default.forwardRef(function HeaderPanel(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    expanded,\n    addFocusListeners = true,\n    onHeaderPanelFocus = noopFn,\n    href,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const headerPanelReference = useRef(null);\n  const headerPanelRef = useMergedRefs([headerPanelReference, ref]);\n  const controlled = useRef(expanded !== undefined).current;\n  const [expandedState, setExpandedState] = useState(expanded);\n  const expandedProp = controlled ? expanded : expandedState;\n  const [lastClickedElement, setLastClickedElement] = useState(null);\n  const className = cx(`${prefix}--header-panel`, {\n    [`${prefix}--header-panel--expanded`]: expandedProp,\n    [customClassName]: !!customClassName\n  });\n  const eventHandlers = {};\n  if (addFocusListeners) {\n    eventHandlers.onBlur = event => {\n      if (!event.currentTarget.contains(event.relatedTarget) && !lastClickedElement?.classList?.contains('cds--switcher__item-link')) {\n        setExpandedState(false);\n        setLastClickedElement(null);\n        if (expanded) {\n          onHeaderPanelFocus();\n        }\n      }\n    };\n    eventHandlers.onKeyDown = event => {\n      if (match(event, Escape)) {\n        setExpandedState(false);\n        onHeaderPanelFocus();\n        if (href) {\n          window.location.href = href;\n        }\n      }\n    };\n  }\n  useWindowEvent('click', () => {\n    const focusedElement = document.activeElement;\n    setLastClickedElement(focusedElement);\n    const childJsxElement = children;\n    if (childJsxElement.type?.displayName === 'Switcher' && !focusedElement?.closest(`.${prefix}--header-panel--expanded`) && !focusedElement?.closest(`.${prefix}--header__action`) && !headerPanelReference?.current?.classList.contains(`${prefix}--switcher`) && expanded) {\n      setExpandedState(false);\n      onHeaderPanelFocus();\n    }\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({}, rest, {\n    className: className,\n    ref: headerPanelRef\n  }, eventHandlers), children);\n});\nHeaderPanel.propTypes = {\n  /**\n   * Specify whether focus and blur listeners are added. They are by default.\n   */\n  addFocusListeners: PropTypes.bool,\n  /**\n   * The content that will render inside of the `HeaderPanel`\n   */\n  children: PropTypes.node,\n  /**\n   * Optionally provide a custom class to apply to the underlying `<li>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the panel is expanded\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Provide the `href` to the id of the element on your package that could\n   * be target.\n   */\n  href: PropTypes.string,\n  /**\n   * An optional listener that is called a callback to collapse the HeaderPanel\n   */\n  onHeaderPanelFocus: PropTypes.func\n};\nHeaderPanel.displayName = 'HeaderPanel';\n\nexport { HeaderPanel as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}