{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport Search from '../Search/Search.js';\nimport '../Search/Search.Skeleton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\nconst FluidSearch = /*#__PURE__*/React__default.forwardRef(function FluidSearch(_ref, ref) {\n  let {\n    className,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const classNames = cx(\"\".concat(prefix, \"--search--fluid\"), className);\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, /*#__PURE__*/React__default.createElement(Search, _extends({\n    ref: ref,\n    className: classNames\n  }, other)));\n});\nFluidSearch.propTypes = {\n  /**\n   * Specify an optional value for the `autocomplete` property on the underlying\n   * `<input>`, defaults to \"off\"\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify a label to be read by screen readers on the \"close\" button\n   */\n  closeButtonLabelText: PropTypes.string,\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify a custom `id` for the input\n   */\n  id: PropTypes.string,\n  /**\n   * Provide the label text for the Search icon\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Optional callback called when the search value changes.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optional callback called when the search value is cleared.\n   */\n  onClear: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the input\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional placeholder text for the Search.\n   * Note: if the label and placeholder differ,\n   * VoiceOver on Mac will read both\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the role for the underlying `<input>`, defaults to `searchbox`\n   */\n  role: PropTypes.string,\n  /**\n   * Optional prop to specify the type of the `<input>`\n   */\n  type: PropTypes.string,\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nvar FluidSearch$1 = FluidSearch;\nexport { FluidSearch$1 as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","Search","usePrefix","FormContext","FluidSearch","forwardRef","_ref","ref","className","other","prefix","classNames","concat","createElement","Provider","value","isFluid","propTypes","autoComplete","string","closeButtonLabelText","defaultValue","oneOfType","number","disabled","bool","id","labelText","node","isRequired","onChange","func","onClear","onKeyDown","placeholder","role","type","FluidSearch$1","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/FluidSearch/FluidSearch.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport Search from '../Search/Search.js';\nimport '../Search/Search.Skeleton.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { FormContext } from '../FluidForm/FormContext.js';\n\nconst FluidSearch = /*#__PURE__*/React__default.forwardRef(function FluidSearch(_ref, ref) {\n  let {\n    className,\n    ...other\n  } = _ref;\n  const prefix = usePrefix();\n  const classNames = cx(`${prefix}--search--fluid`, className);\n  return /*#__PURE__*/React__default.createElement(FormContext.Provider, {\n    value: {\n      isFluid: true\n    }\n  }, /*#__PURE__*/React__default.createElement(Search, _extends({\n    ref: ref,\n    className: classNames\n  }, other)));\n});\nFluidSearch.propTypes = {\n  /**\n   * Specify an optional value for the `autocomplete` property on the underlying\n   * `<input>`, defaults to \"off\"\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify a label to be read by screen readers on the \"close\" button\n   */\n  closeButtonLabelText: PropTypes.string,\n  /**\n   * Optionally provide the default value of the `<input>`\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Specify whether the `<input>` should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Specify a custom `id` for the input\n   */\n  id: PropTypes.string,\n  /**\n   * Provide the label text for the Search icon\n   */\n  labelText: PropTypes.node.isRequired,\n  /**\n   * Optional callback called when the search value changes.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Optional callback called when the search value is cleared.\n   */\n  onClear: PropTypes.func,\n  /**\n   * Provide a handler that is invoked on the key down event for the input\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional placeholder text for the Search.\n   * Note: if the label and placeholder differ,\n   * VoiceOver on Mac will read both\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Specify the role for the underlying `<input>`, defaults to `searchbox`\n   */\n  role: PropTypes.string,\n  /**\n   * Optional prop to specify the type of the `<input>`\n   */\n  type: PropTypes.string,\n  /**\n   * Specify the value of the `<input>`\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nvar FluidSearch$1 = FluidSearch;\n\nexport { FluidSearch$1 as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,8BAA8B;AACrC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,WAAW,QAAQ,6BAA6B;AAEzD,MAAMC,WAAW,GAAG,aAAaL,cAAc,CAACM,UAAU,CAAC,SAASD,WAAWA,CAACE,IAAI,EAAEC,GAAG,EAAE;EACzF,IAAI;IACFC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGH,IAAI;EACR,MAAMI,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,UAAU,GAAGX,EAAE,IAAAY,MAAA,CAAIF,MAAM,sBAAmBF,SAAS,CAAC;EAC5D,OAAO,aAAaT,cAAc,CAACc,aAAa,CAACV,WAAW,CAACW,QAAQ,EAAE;IACrEC,KAAK,EAAE;MACLC,OAAO,EAAE;IACX;EACF,CAAC,EAAE,aAAajB,cAAc,CAACc,aAAa,CAACZ,MAAM,EAAEJ,QAAQ,CAAC;IAC5DU,GAAG,EAAEA,GAAG;IACRC,SAAS,EAAEG;EACb,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC;AACb,CAAC,CAAC;AACFL,WAAW,CAACa,SAAS,GAAG;EACtB;AACF;AACA;AACA;EACEC,YAAY,EAAEpB,SAAS,CAACqB,MAAM;EAC9B;AACF;AACA;EACEX,SAAS,EAAEV,SAAS,CAACqB,MAAM;EAC3B;AACF;AACA;EACEC,oBAAoB,EAAEtB,SAAS,CAACqB,MAAM;EACtC;AACF;AACA;EACEE,YAAY,EAAEvB,SAAS,CAACwB,SAAS,CAAC,CAACxB,SAAS,CAACqB,MAAM,EAAErB,SAAS,CAACyB,MAAM,CAAC,CAAC;EACvE;AACF;AACA;EACEC,QAAQ,EAAE1B,SAAS,CAAC2B,IAAI;EACxB;AACF;AACA;EACEC,EAAE,EAAE5B,SAAS,CAACqB,MAAM;EACpB;AACF;AACA;EACEQ,SAAS,EAAE7B,SAAS,CAAC8B,IAAI,CAACC,UAAU;EACpC;AACF;AACA;EACEC,QAAQ,EAAEhC,SAAS,CAACiC,IAAI;EACxB;AACF;AACA;EACEC,OAAO,EAAElC,SAAS,CAACiC,IAAI;EACvB;AACF;AACA;EACEE,SAAS,EAAEnC,SAAS,CAACiC,IAAI;EACzB;AACF;AACA;AACA;AACA;EACEG,WAAW,EAAEpC,SAAS,CAACqB,MAAM;EAC7B;AACF;AACA;EACEgB,IAAI,EAAErC,SAAS,CAACqB,MAAM;EACtB;AACF;AACA;EACEiB,IAAI,EAAEtC,SAAS,CAACqB,MAAM;EACtB;AACF;AACA;EACEJ,KAAK,EAAEjB,SAAS,CAACwB,SAAS,CAAC,CAACxB,SAAS,CAACqB,MAAM,EAAErB,SAAS,CAACyB,MAAM,CAAC;AACjE,CAAC;AACD,IAAIc,aAAa,GAAGjC,WAAW;AAE/B,SAASiC,aAAa,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}