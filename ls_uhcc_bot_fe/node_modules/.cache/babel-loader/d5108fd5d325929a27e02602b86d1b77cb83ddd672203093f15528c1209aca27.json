{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst ButtonSkeleton = _ref => {\n  let {\n    className,\n    small = false,\n    href,\n    size = 'lg',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const buttonClasses = cx(className, {\n    [\"\".concat(prefix, \"--skeleton\")]: true,\n    [\"\".concat(prefix, \"--btn\")]: true,\n    [\"\".concat(prefix, \"--btn--sm\")]: small || size === 'sm',\n    [\"\".concat(prefix, \"--btn--md\")]: size === 'md',\n    [\"\".concat(prefix, \"--btn--lg\")]: size === 'lg',\n    [\"\".concat(prefix, \"--btn--xl\")]: size === 'xl',\n    [\"\".concat(prefix, \"--btn--2xl\")]: size === '2xl'\n  });\n  const commonProps = {\n    className: buttonClasses,\n    ...rest\n  };\n  const button = /*#__PURE__*/React__default.createElement(\"div\", commonProps);\n  const anchor = /*#__PURE__*/React__default.createElement(\"a\", _extends({}, commonProps, {\n    href: href,\n    role: \"button\"\n  })); // eslint-disable-line\n\n  return href ? anchor : button;\n};\nButtonSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n  /**\n   * Optionally specify an href for your Button to become an `<a>` element\n   */\n  href: PropTypes.string,\n  /**\n   * Specify the size of the button, from a list of available sizes.\n   * For `default` buttons, this prop can remain unspecified or use `default`.\n   * In the next major release of Carbon, `default`, `field`, and `small` will be removed\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl', '2xl']),\n  /**\n   * @deprecated This property will be removed in the next major Carbon version,\n   * use size={sm} instead.\n   *\n   * Specify whether the Button should be a small variant\n   */\n  small: PropTypes.bool\n};\nexport { ButtonSkeleton, ButtonSkeleton as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","ButtonSkeleton","_ref","className","small","href","size","rest","prefix","buttonClasses","concat","commonProps","button","createElement","anchor","role","propTypes","string","oneOf","bool","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Button/Button.Skeleton.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst ButtonSkeleton = _ref => {\n  let {\n    className,\n    small = false,\n    href,\n    size = 'lg',\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const buttonClasses = cx(className, {\n    [`${prefix}--skeleton`]: true,\n    [`${prefix}--btn`]: true,\n    [`${prefix}--btn--sm`]: small || size === 'sm',\n    [`${prefix}--btn--md`]: size === 'md',\n    [`${prefix}--btn--lg`]: size === 'lg',\n    [`${prefix}--btn--xl`]: size === 'xl',\n    [`${prefix}--btn--2xl`]: size === '2xl'\n  });\n  const commonProps = {\n    className: buttonClasses,\n    ...rest\n  };\n  const button = /*#__PURE__*/React__default.createElement(\"div\", commonProps);\n  const anchor = /*#__PURE__*/React__default.createElement(\"a\", _extends({}, commonProps, {\n    href: href,\n    role: \"button\"\n  })); // eslint-disable-line\n\n  return href ? anchor : button;\n};\nButtonSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n  /**\n   * Optionally specify an href for your Button to become an `<a>` element\n   */\n  href: PropTypes.string,\n  /**\n   * Specify the size of the button, from a list of available sizes.\n   * For `default` buttons, this prop can remain unspecified or use `default`.\n   * In the next major release of Carbon, `default`, `field`, and `small` will be removed\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl', '2xl']),\n  /**\n   * @deprecated This property will be removed in the next major Carbon version,\n   * use size={sm} instead.\n   *\n   * Specify whether the Button should be a small variant\n   */\n  small: PropTypes.bool\n};\n\nexport { ButtonSkeleton, ButtonSkeleton as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,cAAc,GAAGC,IAAI,IAAI;EAC7B,IAAI;IACFC,SAAS;IACTC,KAAK,GAAG,KAAK;IACbC,IAAI;IACJC,IAAI,GAAG,IAAI;IACX,GAAGC;EACL,CAAC,GAAGL,IAAI;EACR,MAAMM,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,aAAa,GAAGV,EAAE,CAACI,SAAS,EAAE;IAClC,IAAAO,MAAA,CAAIF,MAAM,kBAAe,IAAI;IAC7B,IAAAE,MAAA,CAAIF,MAAM,aAAU,IAAI;IACxB,IAAAE,MAAA,CAAIF,MAAM,iBAAcJ,KAAK,IAAIE,IAAI,KAAK,IAAI;IAC9C,IAAAI,MAAA,CAAIF,MAAM,iBAAcF,IAAI,KAAK,IAAI;IACrC,IAAAI,MAAA,CAAIF,MAAM,iBAAcF,IAAI,KAAK,IAAI;IACrC,IAAAI,MAAA,CAAIF,MAAM,iBAAcF,IAAI,KAAK,IAAI;IACrC,IAAAI,MAAA,CAAIF,MAAM,kBAAeF,IAAI,KAAK;EACpC,CAAC,CAAC;EACF,MAAMK,WAAW,GAAG;IAClBR,SAAS,EAAEM,aAAa;IACxB,GAAGF;EACL,CAAC;EACD,MAAMK,MAAM,GAAG,aAAad,cAAc,CAACe,aAAa,CAAC,KAAK,EAAEF,WAAW,CAAC;EAC5E,MAAMG,MAAM,GAAG,aAAahB,cAAc,CAACe,aAAa,CAAC,GAAG,EAAEjB,QAAQ,CAAC,CAAC,CAAC,EAAEe,WAAW,EAAE;IACtFN,IAAI,EAAEA,IAAI;IACVU,IAAI,EAAE;EACR,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEL,OAAOV,IAAI,GAAGS,MAAM,GAAGF,MAAM;AAC/B,CAAC;AACDX,cAAc,CAACe,SAAS,GAAG;EACzB;AACF;AACA;EACEb,SAAS,EAAEN,SAAS,CAACoB,MAAM;EAC3B;AACF;AACA;EACEZ,IAAI,EAAER,SAAS,CAACoB,MAAM;EACtB;AACF;AACA;AACA;AACA;EACEX,IAAI,EAAET,SAAS,CAACqB,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EACtD;AACF;AACA;AACA;AACA;AACA;EACEd,KAAK,EAAEP,SAAS,CAACsB;AACnB,CAAC;AAED,SAASlB,cAAc,EAAEA,cAAc,IAAImB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}