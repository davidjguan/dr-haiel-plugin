{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ErrorFilled, CheckmarkFilled } from '@carbon/icons-react';\nimport Loading from '../Loading/Loading.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst InlineLoading = _ref => {\n  let {\n    className,\n    status = 'active',\n    iconDescription,\n    description,\n    onSuccess,\n    successDelay = 1500,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const loadingClasses = cx(\"\".concat(prefix, \"--inline-loading\"), className);\n  const getLoading = () => {\n    let iconLabel = iconDescription ? iconDescription : status;\n    if (status === 'error') {\n      return /*#__PURE__*/React__default.createElement(ErrorFilled, {\n        className: \"\".concat(prefix, \"--inline-loading--error\")\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'finished') {\n      setTimeout(() => {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React__default.createElement(CheckmarkFilled, {\n        className: \"\".concat(prefix, \"--inline-loading__checkmark-container\")\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'inactive' || status === 'active') {\n      if (!iconDescription) {\n        iconLabel = status === 'active' ? 'loading' : 'not loading';\n      }\n      return /*#__PURE__*/React__default.createElement(Loading, {\n        small: true,\n        description: iconLabel,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n    return undefined;\n  };\n  const loadingText = /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__text\")\n  }, description);\n  const loading = getLoading();\n  const loadingAnimation = loading && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-loading__animation\")\n  }, loading);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, rest, {\n    \"aria-live\": 'assertive'\n  }), loadingAnimation, description && loadingText);\n};\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\nexport { InlineLoading as default };","map":{"version":3,"names":["extends","_extends","React__default","PropTypes","cx","ErrorFilled","CheckmarkFilled","Loading","usePrefix","InlineLoading","_ref","className","status","iconDescription","description","onSuccess","successDelay","rest","prefix","loadingClasses","concat","getLoading","iconLabel","createElement","setTimeout","small","withOverlay","active","undefined","loadingText","loading","loadingAnimation","propTypes","string","node","func","oneOf","number","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/InlineLoading/InlineLoading.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ErrorFilled, CheckmarkFilled } from '@carbon/icons-react';\nimport Loading from '../Loading/Loading.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst InlineLoading = _ref => {\n  let {\n    className,\n    status = 'active',\n    iconDescription,\n    description,\n    onSuccess,\n    successDelay = 1500,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const loadingClasses = cx(`${prefix}--inline-loading`, className);\n  const getLoading = () => {\n    let iconLabel = iconDescription ? iconDescription : status;\n    if (status === 'error') {\n      return /*#__PURE__*/React__default.createElement(ErrorFilled, {\n        className: `${prefix}--inline-loading--error`\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'finished') {\n      setTimeout(() => {\n        if (onSuccess) {\n          onSuccess();\n        }\n      }, successDelay);\n      return /*#__PURE__*/React__default.createElement(CheckmarkFilled, {\n        className: `${prefix}--inline-loading__checkmark-container`\n      }, /*#__PURE__*/React__default.createElement(\"title\", null, iconLabel));\n    }\n    if (status === 'inactive' || status === 'active') {\n      if (!iconDescription) {\n        iconLabel = status === 'active' ? 'loading' : 'not loading';\n      }\n      return /*#__PURE__*/React__default.createElement(Loading, {\n        small: true,\n        description: iconLabel,\n        withOverlay: false,\n        active: status === 'active'\n      });\n    }\n    return undefined;\n  };\n  const loadingText = /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--inline-loading__text`\n  }, description);\n  const loading = getLoading();\n  const loadingAnimation = loading && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--inline-loading__animation`\n  }, loading);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: loadingClasses\n  }, rest, {\n    \"aria-live\": 'assertive' \n  }), loadingAnimation, description && loadingText);\n};\nInlineLoading.propTypes = {\n  /**\n   * Specify a custom className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify the description for the inline loading text\n   */\n  description: PropTypes.node,\n  /**\n   * Specify the description for the inline loading text\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Provide an optional handler to be invoked when <InlineLoading> is\n   * successful\n   */\n  onSuccess: PropTypes.func,\n  /**\n   * Specify the loading status\n   */\n  status: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n  /**\n   * Provide a delay for the `setTimeout` for success\n   */\n  successDelay: PropTypes.number\n};\n\nexport { InlineLoading as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}