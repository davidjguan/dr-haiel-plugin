{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { Settings } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport OverflowMenu from '../OverflowMenu/index.js';\nconst defaultIconDescription = 'Settings';\nconst TableToolbarMenu = _ref => {\n  let {\n    className,\n    renderIcon = Settings,\n    iconDescription = defaultIconDescription,\n    children,\n    menuOptionsClass,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const toolbarActionClasses = cx(className, \"\".concat(prefix, \"--toolbar-action \").concat(prefix, \"--overflow-menu\"));\n  const menuOptionsClasses = cx(menuOptionsClass, \"\".concat(prefix, \"--toolbar-action__menu\"));\n  return /*#__PURE__*/React__default.createElement(OverflowMenu, _extends({\n    \"aria-label\": iconDescription,\n    renderIcon: renderIcon,\n    className: toolbarActionClasses,\n    title: iconDescription,\n    iconDescription: iconDescription,\n    menuOptionsClass: menuOptionsClasses,\n    flipped: true\n  }, rest), children);\n};\nTableToolbarMenu.propTypes = {\n  children: PropTypes.node.isRequired,\n  /**\n   * Provide an optional class name for the toolbar menu\n   */\n  className: PropTypes.string,\n  /**\n   * The description of the menu icon.\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Provide an optional class name for the toolbar menu\n   */\n  menuOptionsClass: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the default menu icon\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nexport { TableToolbarMenu as default };","map":{"version":3,"names":["extends","_extends","Settings","cx","PropTypes","React__default","usePrefix","OverflowMenu","defaultIconDescription","TableToolbarMenu","_ref","className","renderIcon","iconDescription","children","menuOptionsClass","rest","prefix","toolbarActionClasses","concat","menuOptionsClasses","createElement","title","flipped","propTypes","node","isRequired","string","oneOfType","func","object","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/DataTable/TableToolbarMenu.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { Settings } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport OverflowMenu from '../OverflowMenu/index.js';\n\nconst defaultIconDescription = 'Settings';\nconst TableToolbarMenu = _ref => {\n  let {\n    className,\n    renderIcon = Settings,\n    iconDescription = defaultIconDescription,\n    children,\n    menuOptionsClass,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const toolbarActionClasses = cx(className, `${prefix}--toolbar-action ${prefix}--overflow-menu`);\n  const menuOptionsClasses = cx(menuOptionsClass, `${prefix}--toolbar-action__menu`);\n  return /*#__PURE__*/React__default.createElement(OverflowMenu, _extends({\n    \"aria-label\": iconDescription,\n    renderIcon: renderIcon,\n    className: toolbarActionClasses,\n    title: iconDescription,\n    iconDescription: iconDescription,\n    menuOptionsClass: menuOptionsClasses,\n    flipped: true\n  }, rest), children);\n};\nTableToolbarMenu.propTypes = {\n  children: PropTypes.node.isRequired,\n  /**\n   * Provide an optional class name for the toolbar menu\n   */\n  className: PropTypes.string,\n  /**\n   * The description of the menu icon.\n   */\n  iconDescription: PropTypes.string,\n  /**\n   * Provide an optional class name for the toolbar menu\n   */\n  menuOptionsClass: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the default menu icon\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\n\nexport { TableToolbarMenu as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,MAAMC,sBAAsB,GAAG,UAAU;AACzC,MAAMC,gBAAgB,GAAGC,IAAI,IAAI;EAC/B,IAAI;IACFC,SAAS;IACTC,UAAU,GAAGV,QAAQ;IACrBW,eAAe,GAAGL,sBAAsB;IACxCM,QAAQ;IACRC,gBAAgB;IAChB,GAAGC;EACL,CAAC,GAAGN,IAAI;EACR,MAAMO,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMY,oBAAoB,GAAGf,EAAE,CAACQ,SAAS,KAAAQ,MAAA,CAAKF,MAAM,uBAAAE,MAAA,CAAoBF,MAAM,oBAAiB,CAAC;EAChG,MAAMG,kBAAkB,GAAGjB,EAAE,CAACY,gBAAgB,KAAAI,MAAA,CAAKF,MAAM,2BAAwB,CAAC;EAClF,OAAO,aAAaZ,cAAc,CAACgB,aAAa,CAACd,YAAY,EAAEN,QAAQ,CAAC;IACtE,YAAY,EAAEY,eAAe;IAC7BD,UAAU,EAAEA,UAAU;IACtBD,SAAS,EAAEO,oBAAoB;IAC/BI,KAAK,EAAET,eAAe;IACtBA,eAAe,EAAEA,eAAe;IAChCE,gBAAgB,EAAEK,kBAAkB;IACpCG,OAAO,EAAE;EACX,CAAC,EAAEP,IAAI,CAAC,EAAEF,QAAQ,CAAC;AACrB,CAAC;AACDL,gBAAgB,CAACe,SAAS,GAAG;EAC3BV,QAAQ,EAAEV,SAAS,CAACqB,IAAI,CAACC,UAAU;EACnC;AACF;AACA;EACEf,SAAS,EAAEP,SAAS,CAACuB,MAAM;EAC3B;AACF;AACA;EACEd,eAAe,EAAET,SAAS,CAACuB,MAAM;EACjC;AACF;AACA;EACEZ,gBAAgB,EAAEX,SAAS,CAACuB,MAAM;EAClC;AACF;AACA;EACEf,UAAU,EAAER,SAAS,CAACwB,SAAS,CAAC,CAACxB,SAAS,CAACyB,IAAI,EAAEzB,SAAS,CAAC0B,MAAM,CAAC;AACpE,CAAC;AAED,SAASrB,gBAAgB,IAAIsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}