{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport { Popover, PopoverContent } from '../Popover/index.js';\nimport { useFallbackId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nconst DefinitionTooltip = _ref => {\n  let {\n    align = 'bottom-start',\n    className,\n    children,\n    definition,\n    defaultOpen = false,\n    id,\n    openOnHover,\n    tooltipText,\n    triggerClassName,\n    ...rest\n  } = _ref;\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const prefix = usePrefix();\n  const tooltipId = useFallbackId(id);\n  function onKeyDown(event) {\n    if (isOpen && match(event, Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(Popover, {\n    align: align,\n    className: className,\n    dropShadow: false,\n    highContrast: true,\n    onMouseLeave: () => {\n      setOpen(false);\n    },\n    onMouseEnter: () => {\n      openOnHover ? setOpen(true) : null;\n    },\n    onFocus: () => {\n      setOpen(true);\n    },\n    open: isOpen\n  }, /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    className: cx(\"\".concat(prefix, \"--definition-term\"), triggerClassName),\n    \"aria-controls\": tooltipId,\n    \"aria-expanded\": isOpen,\n    onBlur: () => {\n      setOpen(false);\n    },\n    onClick: () => {\n      setOpen(!isOpen);\n    },\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }), children), /*#__PURE__*/React__default.createElement(PopoverContent, {\n    className: \"\".concat(prefix, \"--definition-tooltip\"),\n    id: tooltipId\n  }, tooltipText !== null && tooltipText !== void 0 ? tooltipText : definition));\n};\nDefinitionTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left',\n  // deprecated use top-start instead\n  'top-right',\n  // deprecated use top-end instead\n\n  'bottom', 'bottom-left',\n  // deprecated use bottom-start instead\n  'bottom-right',\n  // deprecated use bottom-end instead\n\n  'left', 'left-bottom',\n  // deprecated use left-end instead\n  'left-top',\n  // deprecated use left-start instead\n\n  'right', 'right-bottom',\n  // deprecated use right-end instead\n  'right-top',\n  // deprecated use right-start instead\n\n  // new values to match floating-ui\n  'top-start', 'top-end', 'bottom-start', 'bottom-end', 'left-end', 'left-start', 'right-end', 'right-start']),\n  /**\n   * The `children` prop will be used as the value that is being defined\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * The `definition` prop is used as the content inside of the tooltip that\n   * appears when a user interacts with the element rendered by the `children`\n   * prop\n   */\n  definition: PropTypes.node.isRequired,\n  /**\n   * Provide a value that will be assigned as the id of the tooltip\n   */\n  id: PropTypes.string,\n  /**\n   * Specifies whether or not the `DefinitionTooltip` should open on hover or not\n   */\n  openOnHover: PropTypes.bool,\n  /**\n   * [Deprecated in v11] Please use the `definition` prop instead.\n   *\n   * Provide the text that will be displayed in the tooltip when it is rendered.\n   */\n  tooltipText: deprecate(PropTypes.node, 'The tooltipText prop has been deprecated. Please use the `definition` prop instead.'),\n  /**\n   * The CSS class name of the trigger element\n   */\n  triggerClassName: PropTypes.string\n};\nexport { DefinitionTooltip };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","useState","Popover","PopoverContent","useFallbackId","usePrefix","deprecate","match","Escape","DefinitionTooltip","_ref","align","className","children","definition","defaultOpen","id","openOnHover","tooltipText","triggerClassName","rest","isOpen","setOpen","prefix","tooltipId","onKeyDown","event","stopPropagation","createElement","dropShadow","highContrast","onMouseLeave","onMouseEnter","onFocus","open","concat","onBlur","onClick","type","propTypes","oneOf","node","isRequired","string","bool"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Tooltip/DefinitionTooltip.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport { Popover, PopoverContent } from '../Popover/index.js';\nimport { useFallbackId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nconst DefinitionTooltip = _ref => {\n  let {\n    align = 'bottom-start',\n    className,\n    children,\n    definition,\n    defaultOpen = false,\n    id,\n    openOnHover,\n    tooltipText,\n    triggerClassName,\n    ...rest\n  } = _ref;\n  const [isOpen, setOpen] = useState(defaultOpen);\n  const prefix = usePrefix();\n  const tooltipId = useFallbackId(id);\n  function onKeyDown(event) {\n    if (isOpen && match(event, Escape)) {\n      event.stopPropagation();\n      setOpen(false);\n    }\n  }\n  return /*#__PURE__*/React__default.createElement(Popover, {\n    align: align,\n    className: className,\n    dropShadow: false,\n    highContrast: true,\n    onMouseLeave: () => {\n      setOpen(false);\n    },\n    onMouseEnter: () => {\n      openOnHover ? setOpen(true) : null;\n    },\n    onFocus: () => {\n      setOpen(true);\n    },\n    open: isOpen\n  }, /*#__PURE__*/React__default.createElement(\"button\", _extends({}, rest, {\n    className: cx(`${prefix}--definition-term`, triggerClassName),\n    \"aria-controls\": tooltipId,\n    \"aria-expanded\": isOpen,\n    onBlur: () => {\n      setOpen(false);\n    },\n    onClick: () => {\n      setOpen(!isOpen);\n    },\n    onKeyDown: onKeyDown,\n    type: \"button\"\n  }), children), /*#__PURE__*/React__default.createElement(PopoverContent, {\n    className: `${prefix}--definition-tooltip`,\n    id: tooltipId\n  }, tooltipText ?? definition));\n};\nDefinitionTooltip.propTypes = {\n  /**\n   * Specify how the trigger should align with the tooltip\n   */\n  align: PropTypes.oneOf(['top', 'top-left',\n  // deprecated use top-start instead\n  'top-right',\n  // deprecated use top-end instead\n\n  'bottom', 'bottom-left',\n  // deprecated use bottom-start instead\n  'bottom-right',\n  // deprecated use bottom-end instead\n\n  'left', 'left-bottom',\n  // deprecated use left-end instead\n  'left-top',\n  // deprecated use left-start instead\n\n  'right', 'right-bottom',\n  // deprecated use right-end instead\n  'right-top',\n  // deprecated use right-start instead\n\n  // new values to match floating-ui\n  'top-start', 'top-end', 'bottom-start', 'bottom-end', 'left-end', 'left-start', 'right-end', 'right-start']),\n  /**\n   * The `children` prop will be used as the value that is being defined\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the tooltip should be open when it first renders\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * The `definition` prop is used as the content inside of the tooltip that\n   * appears when a user interacts with the element rendered by the `children`\n   * prop\n   */\n  definition: PropTypes.node.isRequired,\n  /**\n   * Provide a value that will be assigned as the id of the tooltip\n   */\n  id: PropTypes.string,\n  /**\n   * Specifies whether or not the `DefinitionTooltip` should open on hover or not\n   */\n  openOnHover: PropTypes.bool,\n  /**\n   * [Deprecated in v11] Please use the `definition` prop instead.\n   *\n   * Provide the text that will be displayed in the tooltip when it is rendered.\n   */\n  tooltipText: deprecate(PropTypes.node, 'The tooltipText prop has been deprecated. Please use the `definition` prop instead.'),\n  /**\n   * The CSS class name of the trigger element\n   */\n  triggerClassName: PropTypes.string\n};\n\nexport { DefinitionTooltip };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}