{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { CheckboxCheckedFilled, Checkbox, ChevronDown, ArrowRight, Error } from '@carbon/icons-react';\nimport Link from '../Link/Link.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { getInteractiveContent, getRoleContent } from '../../internal/useNoInteractiveChildren.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { useId } from '../../internal/useId.js';\nimport '../Text/index.js';\nimport { Text } from '../Text/Text.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\nvar _rect, _path, _CheckboxCheckedFille, _Checkbox, _ChevronDown, _ChevronDown2;\nconst Tile = /*#__PURE__*/React__default.forwardRef(function Tile(_ref, ref) {\n  let {\n    children,\n    className,\n    light = false,\n    slug,\n    hasRoundedCorners = false,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const tileClasses = cx(\"\".concat(prefix, \"--tile\"), {\n    [\"\".concat(prefix, \"--tile--light\")]: light,\n    [\"\".concat(prefix, \"--tile--slug\")]: slug,\n    [\"\".concat(prefix, \"--tile--slug-rounded\")]: slug && hasRoundedCorners\n  }, className);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children, slug);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * **Experimental**: Specify if the `Tile` component should be rendered with rounded corners. Only valid\n   * when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   *\n   * @deprecated\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `Tile` component\n   */\n  slug: PropTypes.node\n};\nconst ClickableTile = /*#__PURE__*/React__default.forwardRef(function ClickableTile(_ref2, ref) {\n  let {\n    children,\n    className,\n    clicked = false,\n    disabled,\n    href,\n    light,\n    onClick = () => {},\n    onKeyDown = () => {},\n    renderIcon: Icon,\n    hasRoundedCorners,\n    slug,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--clickable\"), {\n    [\"\".concat(prefix, \"--tile--is-clicked\")]: clicked,\n    [\"\".concat(prefix, \"--tile--light\")]: light,\n    [\"\".concat(prefix, \"--tile--slug\")]: slug,\n    [\"\".concat(prefix, \"--tile--slug-rounded\")]: slug && hasRoundedCorners\n  }, className);\n  const [isSelected, setIsSelected] = useState(clicked);\n  function handleOnClick(evt) {\n    var _evt$persist;\n    evt === null || evt === void 0 || (_evt$persist = evt.persist) === null || _evt$persist === void 0 || _evt$persist.call(evt);\n    setIsSelected(!isSelected);\n    onClick(evt);\n  }\n  function handleOnKeyDown(evt) {\n    var _evt$persist2;\n    evt === null || evt === void 0 || (_evt$persist2 = evt.persist) === null || _evt$persist2 === void 0 || _evt$persist2.call(evt);\n    if (matches(evt, [Enter, Space])) {\n      setIsSelected(!isSelected);\n    }\n    onKeyDown(evt);\n  }\n\n  // To Do: Replace with an an icon from `@carbon/react`\n  // since the hollow slug in `ClickableTile` is not interactive\n  const hollowSlugIcon = /*#__PURE__*/React__default.createElement(\"svg\", {\n    className: \"\".concat(prefix, \"--tile--slug-icon\"),\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, _rect || (_rect = /*#__PURE__*/React__default.createElement(\"rect\", {\n    x: \"0.5\",\n    y: \"0.5\",\n    width: \"23\",\n    height: \"23\"\n  })), _path || (_path = /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M13.2436 16H11.5996L10.9276 13.864H7.95164L7.29164 16H5.68364L8.49164 7.624H10.4596L13.2436 16ZM10.5436 12.508L9.46364 9.064H9.40364L8.33564 12.508H10.5436ZM17.9341 16H14.1301V14.728H15.2341V8.896H14.1301V7.624H17.9341V8.896H16.8181V14.728H17.9341V16Z\",\n    fill: \"#161616\"\n  })));\n  const v12DefaultIcons = useFeatureFlag('enable-v12-tile-default-icons');\n  if (v12DefaultIcons) {\n    if (!Icon) {\n      Icon = ArrowRight;\n    }\n    if (disabled) {\n      Icon = Error;\n    }\n  }\n  const iconClasses = cx({\n    [\"\".concat(prefix, \"--tile--icon\")]: !v12DefaultIcons || v12DefaultIcons && !disabled,\n    [\"\".concat(prefix, \"--tile--disabled-icon\")]: v12DefaultIcons && disabled\n  });\n  return /*#__PURE__*/React__default.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    tabIndex: !href && !disabled ? 0 : undefined,\n    onClick: !disabled ? handleOnClick : undefined,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    disabled: disabled\n  }, rest), slug ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, children) : children, slug && hollowSlugIcon, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    className: iconClasses,\n    \"aria-hidden\": \"true\"\n  }));\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n  /**\n   * Specify whether the ClickableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * **Experimental**: Specify if the `ClickableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid derived prop type, seemingly no real solution.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nconst SelectableTile = /*#__PURE__*/React__default.forwardRef(function SelectableTile(_ref3, ref) {\n  var _slug$type;\n  let {\n    children,\n    className,\n    disabled,\n    id,\n    light,\n    onClick = () => {},\n    onChange = () => {},\n    onKeyDown = () => {},\n    selected = false,\n    tabIndex = 0,\n    title = 'title',\n    slug,\n    hasRoundedCorners,\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const clickHandler = onClick;\n  const keyDownHandler = onKeyDown;\n  const [isSelected, setIsSelected] = useState(selected);\n  const [prevSelected, setPrevSelected] = useState(selected);\n  const classes = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--selectable\"), {\n    [\"\".concat(prefix, \"--tile--is-selected\")]: isSelected,\n    [\"\".concat(prefix, \"--tile--light\")]: light,\n    [\"\".concat(prefix, \"--tile--disabled\")]: disabled,\n    [\"\".concat(prefix, \"--tile--slug\")]: slug,\n    [\"\".concat(prefix, \"--tile--slug-rounded\")]: slug && hasRoundedCorners\n  }, className);\n\n  // TODO: rename to handleClick when handleClick prop is deprecated\n  function handleOnClick(evt) {\n    var _evt$persist3;\n    evt.preventDefault();\n    evt === null || evt === void 0 || (_evt$persist3 = evt.persist) === null || _evt$persist3 === void 0 || _evt$persist3.call(evt);\n    if (slug && slugRef.current && slugRef.current.contains(evt.target)) {\n      return;\n    }\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt, isSelected, id);\n  }\n\n  // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n  function handleOnKeyDown(evt) {\n    var _evt$persist4;\n    evt === null || evt === void 0 || (_evt$persist4 = evt.persist) === null || _evt$persist4 === void 0 || _evt$persist4.call(evt);\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt, isSelected, id);\n    }\n    keyDownHandler(evt);\n  }\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event, isSelected, id);\n  }\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n\n  // Slug is always size `xs`\n  const slugRef = useRef(null);\n  let normalizedSlug;\n  if (slug && ((_slug$type = slug['type']) === null || _slug$type === void 0 ? void 0 : _slug$type.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'xs',\n      ref: slugRef\n    });\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    React__default.createElement(\"div\", _extends({\n      className: classes,\n      onClick: !disabled ? handleOnClick : undefined,\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      onKeyDown: !disabled ? handleOnKeyDown : undefined\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      ,\n\n      tabIndex: !disabled ? tabIndex : undefined,\n      ref: ref,\n      id: id,\n      onChange: !disabled ? handleChange : undefined,\n      title: title\n    }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"\".concat(prefix, \"--tile__checkmark \").concat(prefix, \"--tile__checkmark--persistent\")\n    }, isSelected ? _CheckboxCheckedFille || (_CheckboxCheckedFille = /*#__PURE__*/React__default.createElement(CheckboxCheckedFilled, null)) : _Checkbox || (_Checkbox = /*#__PURE__*/React__default.createElement(Checkbox, null))), /*#__PURE__*/React__default.createElement(Text, {\n      as: \"label\",\n      htmlFor: id,\n      className: \"\".concat(prefix, \"--tile-content\")\n    }, children), normalizedSlug)\n  );\n});\nSelectableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * **Experimental**: Specify if the `SelectableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * The `name` of the `<input>`.\n   * @deprecated\n   */\n  name: PropTypes.string,\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `SelectableTile` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n  /**\n   * The value of the `<input>`.\n   * @deprecated\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nconst ExpandableTile = /*#__PURE__*/React__default.forwardRef(function ExpandableTile(_ref4, forwardRef) {\n  var _slug$type2;\n  let {\n    tabIndex = 0,\n    className,\n    children,\n    expanded = false,\n    tileMaxHeight = 0,\n    // eslint-disable-line\n    tilePadding = 0,\n    // eslint-disable-line\n    onClick,\n    onKeyUp,\n    tileCollapsedIconText = 'Interact to expand Tile',\n    tileExpandedIconText = 'Interact to collapse Tile',\n    tileCollapsedLabel,\n    tileExpandedLabel,\n    light,\n    slug,\n    hasRoundedCorners,\n    ...rest\n  } = _ref4;\n  const [isTileMaxHeight, setIsTileMaxHeight] = useState(tileMaxHeight);\n  const [isTilePadding, setIsTilePadding] = useState(tilePadding);\n  const [prevExpanded, setPrevExpanded] = useState(expanded);\n  const [prevTileMaxHeight, setPrevTileMaxHeight] = useState(tileMaxHeight);\n  const [prevTilePadding, setPrevTilePadding] = useState(tilePadding);\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const [interactive, setInteractive] = useState(true);\n  const aboveTheFold = useRef(null);\n  const belowTheFold = useRef(null);\n  const chevronInteractiveRef = useRef(null);\n  const tileContent = useRef(null);\n  const tile = useRef(null);\n  const ref = useMergedRefs([forwardRef, tile]);\n  const prefix = usePrefix();\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n  function setMaxHeight() {\n    if (isExpanded && tileContent.current) {\n      var _tileContent$current$;\n      setIsTileMaxHeight((_tileContent$current$ = tileContent.current.getBoundingClientRect()) === null || _tileContent$current$ === void 0 ? void 0 : _tileContent$current$.height);\n    }\n    if (aboveTheFold.current) {\n      setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n    }\n  }\n  function handleClick(evt) {\n    var _evt$persist5;\n    evt === null || evt === void 0 || (_evt$persist5 = evt.persist) === null || _evt$persist5 === void 0 || _evt$persist5.call(evt);\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n  }\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current && evt.target !== chevronInteractiveRef.current) {\n      if (matches(evt, [Enter, Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n  function getChildren() {\n    return React__default.Children.toArray(children);\n  }\n  const classNames = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--expandable\"), {\n    [\"\".concat(prefix, \"--tile--is-expanded\")]: isExpanded,\n    [\"\".concat(prefix, \"--tile--light\")]: light\n  }, className);\n  const interactiveClassNames = cx(\"\".concat(prefix, \"--tile\"), \"\".concat(prefix, \"--tile--expandable\"), \"\".concat(prefix, \"--tile--expandable--interactive\"), {\n    [\"\".concat(prefix, \"--tile--is-expanded\")]: isExpanded,\n    [\"\".concat(prefix, \"--tile--light\")]: light,\n    [\"\".concat(prefix, \"--tile--slug\")]: slug,\n    [\"\".concat(prefix, \"--tile--slug-rounded\")]: slug && hasRoundedCorners\n  }, className);\n  const chevronInteractiveClassNames = cx(\"\".concat(prefix, \"--tile__chevron\"), \"\".concat(prefix, \"--tile__chevron--interactive\"));\n  const childrenAsArray = getChildren();\n  useIsomorphicEffect(() => {\n    if (!tile.current || !aboveTheFold.current) {\n      return;\n    }\n    const getStyle = window.getComputedStyle(tile.current, null);\n    const {\n      current: node\n    } = aboveTheFold;\n    const {\n      height\n    } = node.getBoundingClientRect();\n    const paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    const paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, [isTileMaxHeight]);\n  useIsomorphicEffect(() => {\n    if (!aboveTheFold.current || !belowTheFold.current) {\n      return;\n    }\n\n    // Interactive elements or elements that are given a role should be treated\n    // the same because elements with a role can not be rendered inside a `button`\n    if (!getInteractiveContent(belowTheFold.current) && !getRoleContent(belowTheFold.current) && !getInteractiveContent(aboveTheFold.current) && !getRoleContent(aboveTheFold.current) && !slug) {\n      setInteractive(false);\n    }\n  }, [slug]);\n  useIsomorphicEffect(() => {\n    if (!tile.current) {\n      return;\n    }\n    if (isExpanded) {\n      tile.current.style.maxHeight = '';\n    } else {\n      tile.current.style.maxHeight = isTileMaxHeight + isTilePadding + 'px';\n    }\n  }, [isExpanded, isTileMaxHeight, isTilePadding]);\n  useEffect(() => {\n    if (!aboveTheFold.current) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [aboveTheFold] = entries;\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return () => resizeObserver.disconnect();\n  }, []);\n  const belowTheFoldId = useId('expandable-tile-interactive');\n\n  // Slug is always size `xs`\n  let normalizedSlug;\n  if (slug && ((_slug$type2 = slug['type']) === null || _slug$type2 === void 0 ? void 0 : _slug$type2.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'xs'\n    });\n  }\n  return interactive ? /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ref: ref,\n    className: interactiveClassNames\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, normalizedSlug, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": belowTheFoldId,\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    \"aria-label\": isExpanded ? tileExpandedIconText : tileCollapsedIconText,\n    ref: chevronInteractiveRef,\n    className: chevronInteractiveClassNames\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: \"\".concat(prefix, \"--tile-content\"),\n    id: belowTheFoldId\n  }, childrenAsArray[1]))) : /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ,\n\n    ref: ref,\n    className: classNames,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--tile__chevron\")\n  }, /*#__PURE__*/React__default.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), _ChevronDown2 || (_ChevronDown2 = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: \"\".concat(prefix, \"--tile-content\")\n  }, childrenAsArray[1])));\n});\nExpandableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Specify if the `ExpandableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `ExpandableTile` component\n   */\n  slug: PropTypes.node,\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.displayName = 'ExpandableTile';\nconst TileAboveTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  let {\n    children\n  } = _ref5;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__above-the-fold\")\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nconst TileBelowTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  let {\n    children\n  } = _ref6;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: ref,\n    className: \"\".concat(prefix, \"--tile-content__below-the-fold\")\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';\nexport { ClickableTile, ExpandableTile, SelectableTile, Tile, TileAboveTheFoldContent, TileBelowTheFoldContent };","map":{"version":3,"names":["extends","_extends","React__default","useState","useRef","useEffect","PropTypes","cx","CheckboxCheckedFilled","Checkbox","ChevronDown","ArrowRight","Error","Link","deprecate","composeEventHandlers","usePrefix","useIsomorphicEffect","getInteractiveContent","getRoleContent","useMergedRefs","useFeatureFlag","useId","Text","matches","Enter","Space","_rect","_path","_CheckboxCheckedFille","_Checkbox","_ChevronDown","_ChevronDown2","Tile","forwardRef","_ref","ref","children","className","light","slug","hasRoundedCorners","rest","prefix","tileClasses","concat","createElement","displayName","propTypes","node","string","bool","ClickableTile","_ref2","clicked","disabled","href","onClick","onKeyDown","renderIcon","Icon","classes","isSelected","setIsSelected","handleOnClick","evt","_evt$persist","persist","call","handleOnKeyDown","_evt$persist2","hollowSlugIcon","width","height","viewBox","fill","xmlns","x","y","d","v12DefaultIcons","iconClasses","tabIndex","undefined","func","rel","oneOfType","object","SelectableTile","_ref3","_slug$type","id","onChange","selected","title","clickHandler","keyDownHandler","prevSelected","setPrevSelected","_evt$persist3","preventDefault","slugRef","current","contains","target","_evt$persist4","handleChange","event","checked","normalizedSlug","cloneElement","size","role","as","htmlFor","name","number","value","isRequired","ExpandableTile","_ref4","_slug$type2","expanded","tileMaxHeight","tilePadding","onKeyUp","tileCollapsedIconText","tileExpandedIconText","tileCollapsedLabel","tileExpandedLabel","isTileMaxHeight","setIsTileMaxHeight","isTilePadding","setIsTilePadding","prevExpanded","setPrevExpanded","prevTileMaxHeight","setPrevTileMaxHeight","prevTilePadding","setPrevTilePadding","isExpanded","setIsExpanded","interactive","setInteractive","aboveTheFold","belowTheFold","chevronInteractiveRef","tileContent","tile","setMaxHeight","_tileContent$current$","getBoundingClientRect","handleClick","_evt$persist5","handleKeyUp","getChildren","Children","toArray","classNames","interactiveClassNames","chevronInteractiveClassNames","childrenAsArray","getStyle","window","getComputedStyle","paddingTop","parseInt","getPropertyValue","paddingBottom","style","maxHeight","resizeObserver","ResizeObserver","entries","contentRect","observe","disconnect","belowTheFoldId","type","TileAboveTheFoldContent","TilAboveTheFoldContent","_ref5","TileBelowTheFoldContent","_ref6"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Tile/Tile.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { CheckboxCheckedFilled, Checkbox, ChevronDown, ArrowRight, Error } from '@carbon/icons-react';\nimport Link from '../Link/Link.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { getInteractiveContent, getRoleContent } from '../../internal/useNoInteractiveChildren.js';\nimport { useMergedRefs } from '../../internal/useMergedRefs.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { useId } from '../../internal/useId.js';\nimport '../Text/index.js';\nimport { Text } from '../Text/Text.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Enter, Space } from '../../internal/keyboard/keys.js';\n\nvar _rect, _path, _CheckboxCheckedFille, _Checkbox, _ChevronDown, _ChevronDown2;\nconst Tile = /*#__PURE__*/React__default.forwardRef(function Tile(_ref, ref) {\n  let {\n    children,\n    className,\n    light = false,\n    slug,\n    hasRoundedCorners = false,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const tileClasses = cx(`${prefix}--tile`, {\n    [`${prefix}--tile--light`]: light,\n    [`${prefix}--tile--slug`]: slug,\n    [`${prefix}--tile--slug-rounded`]: slug && hasRoundedCorners\n  }, className);\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: tileClasses,\n    ref: ref\n  }, rest), children, slug);\n});\nTile.displayName = 'Tile';\nTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * **Experimental**: Specify if the `Tile` component should be rendered with rounded corners. Only valid\n   * when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   *\n   * @deprecated\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `Tile` component\n   */\n  slug: PropTypes.node\n};\nconst ClickableTile = /*#__PURE__*/React__default.forwardRef(function ClickableTile(_ref2, ref) {\n  let {\n    children,\n    className,\n    clicked = false,\n    disabled,\n    href,\n    light,\n    onClick = () => {},\n    onKeyDown = () => {},\n    renderIcon: Icon,\n    hasRoundedCorners,\n    slug,\n    ...rest\n  } = _ref2;\n  const prefix = usePrefix();\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--clickable`, {\n    [`${prefix}--tile--is-clicked`]: clicked,\n    [`${prefix}--tile--light`]: light,\n    [`${prefix}--tile--slug`]: slug,\n    [`${prefix}--tile--slug-rounded`]: slug && hasRoundedCorners\n  }, className);\n  const [isSelected, setIsSelected] = useState(clicked);\n  function handleOnClick(evt) {\n    evt?.persist?.();\n    setIsSelected(!isSelected);\n    onClick(evt);\n  }\n  function handleOnKeyDown(evt) {\n    evt?.persist?.();\n    if (matches(evt, [Enter, Space])) {\n      setIsSelected(!isSelected);\n    }\n    onKeyDown(evt);\n  }\n\n  // To Do: Replace with an an icon from `@carbon/react`\n  // since the hollow slug in `ClickableTile` is not interactive\n  const hollowSlugIcon = /*#__PURE__*/React__default.createElement(\"svg\", {\n    className: `${prefix}--tile--slug-icon`,\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, _rect || (_rect = /*#__PURE__*/React__default.createElement(\"rect\", {\n    x: \"0.5\",\n    y: \"0.5\",\n    width: \"23\",\n    height: \"23\"\n  })), _path || (_path = /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M13.2436 16H11.5996L10.9276 13.864H7.95164L7.29164 16H5.68364L8.49164 7.624H10.4596L13.2436 16ZM10.5436 12.508L9.46364 9.064H9.40364L8.33564 12.508H10.5436ZM17.9341 16H14.1301V14.728H15.2341V8.896H14.1301V7.624H17.9341V8.896H16.8181V14.728H17.9341V16Z\",\n    fill: \"#161616\"\n  })));\n  const v12DefaultIcons = useFeatureFlag('enable-v12-tile-default-icons');\n  if (v12DefaultIcons) {\n    if (!Icon) {\n      Icon = ArrowRight;\n    }\n    if (disabled) {\n      Icon = Error;\n    }\n  }\n  const iconClasses = cx({\n    [`${prefix}--tile--icon`]: !v12DefaultIcons || v12DefaultIcons && !disabled,\n    [`${prefix}--tile--disabled-icon`]: v12DefaultIcons && disabled\n  });\n  return /*#__PURE__*/React__default.createElement(Link, _extends({\n    className: classes,\n    href: href,\n    tabIndex: !href && !disabled ? 0 : undefined,\n    onClick: !disabled ? handleOnClick : undefined,\n    onKeyDown: handleOnKeyDown,\n    ref: ref,\n    disabled: disabled\n  }, rest), slug ? /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tile-content`\n  }, children) : children, slug && hollowSlugIcon, Icon && /*#__PURE__*/React__default.createElement(Icon, {\n    className: iconClasses,\n    \"aria-hidden\": \"true\"\n  }));\n});\nClickableTile.displayName = 'ClickableTile';\nClickableTile.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Boolean for whether a tile has been clicked.\n   */\n  clicked: PropTypes.bool,\n  /**\n   * Specify whether the ClickableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * **Experimental**: Specify if the `ClickableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * The href for the link.\n   */\n  href: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ClickableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the ClickableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * The rel property for the link.\n   */\n  rel: PropTypes.string,\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  // @ts-expect-error: Invalid derived prop type, seemingly no real solution.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n};\nconst SelectableTile = /*#__PURE__*/React__default.forwardRef(function SelectableTile(_ref3, ref) {\n  let {\n    children,\n    className,\n    disabled,\n    id,\n    light,\n    onClick = () => {},\n    onChange = () => {},\n    onKeyDown = () => {},\n    selected = false,\n    tabIndex = 0,\n    title = 'title',\n    slug,\n    hasRoundedCorners,\n    ...rest\n  } = _ref3;\n  const prefix = usePrefix();\n  const clickHandler = onClick;\n  const keyDownHandler = onKeyDown;\n  const [isSelected, setIsSelected] = useState(selected);\n  const [prevSelected, setPrevSelected] = useState(selected);\n  const classes = cx(`${prefix}--tile`, `${prefix}--tile--selectable`, {\n    [`${prefix}--tile--is-selected`]: isSelected,\n    [`${prefix}--tile--light`]: light,\n    [`${prefix}--tile--disabled`]: disabled,\n    [`${prefix}--tile--slug`]: slug,\n    [`${prefix}--tile--slug-rounded`]: slug && hasRoundedCorners\n  }, className);\n\n  // TODO: rename to handleClick when handleClick prop is deprecated\n  function handleOnClick(evt) {\n    evt.preventDefault();\n    evt?.persist?.();\n    if (slug && slugRef.current && slugRef.current.contains(evt.target)) {\n      return;\n    }\n    setIsSelected(!isSelected);\n    clickHandler(evt);\n    onChange(evt, isSelected, id);\n  }\n\n  // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated\n  function handleOnKeyDown(evt) {\n    evt?.persist?.();\n    if (matches(evt, [Enter, Space])) {\n      evt.preventDefault();\n      setIsSelected(!isSelected);\n      onChange(evt, isSelected, id);\n    }\n    keyDownHandler(evt);\n  }\n  function handleChange(event) {\n    setIsSelected(event.target.checked);\n    onChange(event, isSelected, id);\n  }\n  if (selected !== prevSelected) {\n    setIsSelected(selected);\n    setPrevSelected(selected);\n  }\n\n  // Slug is always size `xs`\n  const slugRef = useRef(null);\n  let normalizedSlug;\n  if (slug && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'xs',\n      ref: slugRef\n    });\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    React__default.createElement(\"div\", _extends({\n      className: classes,\n      onClick: !disabled ? handleOnClick : undefined,\n      role: \"checkbox\",\n      \"aria-checked\": isSelected,\n      onKeyDown: !disabled ? handleOnKeyDown : undefined\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      ,\n      tabIndex: !disabled ? tabIndex : undefined,\n      ref: ref,\n      id: id,\n      onChange: !disabled ? handleChange : undefined,\n      title: title\n    }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--tile__checkmark ${prefix}--tile__checkmark--persistent`\n    }, isSelected ? _CheckboxCheckedFille || (_CheckboxCheckedFille = /*#__PURE__*/React__default.createElement(CheckboxCheckedFilled, null)) : _Checkbox || (_Checkbox = /*#__PURE__*/React__default.createElement(Checkbox, null))), /*#__PURE__*/React__default.createElement(Text, {\n      as: \"label\",\n      htmlFor: id,\n      className: `${prefix}--tile-content`\n    }, children), normalizedSlug)\n  );\n});\nSelectableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * Specify whether the SelectableTile should be disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * **Experimental**: Specify if the `SelectableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * The `name` of the `<input>`.\n   * @deprecated\n   */\n  name: PropTypes.string,\n  /**\n   * The empty handler of the `<input>`.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * Specify the function to run when the SelectableTile is interacted with via a keyboard\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * `true` to select this tile.\n   */\n  selected: PropTypes.bool,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `SelectableTile` component\n   */\n  slug: PropTypes.node,\n  /**\n   * Specify the tab index of the wrapper element\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The `title` of the `<input>`.\n   */\n  title: PropTypes.string,\n  /**\n   * The value of the `<input>`.\n   * @deprecated\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n};\nconst ExpandableTile = /*#__PURE__*/React__default.forwardRef(function ExpandableTile(_ref4, forwardRef) {\n  let {\n    tabIndex = 0,\n    className,\n    children,\n    expanded = false,\n    tileMaxHeight = 0,\n    // eslint-disable-line\n    tilePadding = 0,\n    // eslint-disable-line\n    onClick,\n    onKeyUp,\n    tileCollapsedIconText = 'Interact to expand Tile',\n    tileExpandedIconText = 'Interact to collapse Tile',\n    tileCollapsedLabel,\n    tileExpandedLabel,\n    light,\n    slug,\n    hasRoundedCorners,\n    ...rest\n  } = _ref4;\n  const [isTileMaxHeight, setIsTileMaxHeight] = useState(tileMaxHeight);\n  const [isTilePadding, setIsTilePadding] = useState(tilePadding);\n  const [prevExpanded, setPrevExpanded] = useState(expanded);\n  const [prevTileMaxHeight, setPrevTileMaxHeight] = useState(tileMaxHeight);\n  const [prevTilePadding, setPrevTilePadding] = useState(tilePadding);\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  const [interactive, setInteractive] = useState(true);\n  const aboveTheFold = useRef(null);\n  const belowTheFold = useRef(null);\n  const chevronInteractiveRef = useRef(null);\n  const tileContent = useRef(null);\n  const tile = useRef(null);\n  const ref = useMergedRefs([forwardRef, tile]);\n  const prefix = usePrefix();\n  if (expanded !== prevExpanded) {\n    setIsExpanded(expanded);\n    setPrevExpanded(expanded);\n    setMaxHeight();\n  }\n  if (tileMaxHeight !== prevTileMaxHeight) {\n    setIsTileMaxHeight(tileMaxHeight);\n    setPrevTileMaxHeight(tileMaxHeight);\n  }\n  if (tilePadding !== prevTilePadding) {\n    setIsTilePadding(tilePadding);\n    setPrevTilePadding(tilePadding);\n  }\n  function setMaxHeight() {\n    if (isExpanded && tileContent.current) {\n      setIsTileMaxHeight(tileContent.current.getBoundingClientRect()?.height);\n    }\n    if (aboveTheFold.current) {\n      setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);\n    }\n  }\n  function handleClick(evt) {\n    evt?.persist?.();\n    setIsExpanded(!isExpanded);\n    setMaxHeight();\n  }\n  function handleKeyUp(evt) {\n    if (evt.target !== tile.current && evt.target !== chevronInteractiveRef.current) {\n      if (matches(evt, [Enter, Space])) {\n        evt.preventDefault();\n      }\n    }\n  }\n  function getChildren() {\n    return React__default.Children.toArray(children);\n  }\n  const classNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, {\n    [`${prefix}--tile--is-expanded`]: isExpanded,\n    [`${prefix}--tile--light`]: light\n  }, className);\n  const interactiveClassNames = cx(`${prefix}--tile`, `${prefix}--tile--expandable`, `${prefix}--tile--expandable--interactive`, {\n    [`${prefix}--tile--is-expanded`]: isExpanded,\n    [`${prefix}--tile--light`]: light,\n    [`${prefix}--tile--slug`]: slug,\n    [`${prefix}--tile--slug-rounded`]: slug && hasRoundedCorners\n  }, className);\n  const chevronInteractiveClassNames = cx(`${prefix}--tile__chevron`, `${prefix}--tile__chevron--interactive`);\n  const childrenAsArray = getChildren();\n  useIsomorphicEffect(() => {\n    if (!tile.current || !aboveTheFold.current) {\n      return;\n    }\n    const getStyle = window.getComputedStyle(tile.current, null);\n    const {\n      current: node\n    } = aboveTheFold;\n    const {\n      height\n    } = node.getBoundingClientRect();\n    const paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);\n    const paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);\n    setIsTileMaxHeight(height);\n    setIsTilePadding(paddingTop + paddingBottom);\n  }, [isTileMaxHeight]);\n  useIsomorphicEffect(() => {\n    if (!aboveTheFold.current || !belowTheFold.current) {\n      return;\n    }\n\n    // Interactive elements or elements that are given a role should be treated\n    // the same because elements with a role can not be rendered inside a `button`\n    if (!getInteractiveContent(belowTheFold.current) && !getRoleContent(belowTheFold.current) && !getInteractiveContent(aboveTheFold.current) && !getRoleContent(aboveTheFold.current) && !slug) {\n      setInteractive(false);\n    }\n  }, [slug]);\n  useIsomorphicEffect(() => {\n    if (!tile.current) {\n      return;\n    }\n    if (isExpanded) {\n      tile.current.style.maxHeight = '';\n    } else {\n      tile.current.style.maxHeight = isTileMaxHeight + isTilePadding + 'px';\n    }\n  }, [isExpanded, isTileMaxHeight, isTilePadding]);\n  useEffect(() => {\n    if (!aboveTheFold.current) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [aboveTheFold] = entries;\n      setIsTileMaxHeight(aboveTheFold.contentRect.height);\n    });\n    resizeObserver.observe(aboveTheFold.current);\n    return () => resizeObserver.disconnect();\n  }, []);\n  const belowTheFoldId = useId('expandable-tile-interactive');\n\n  // Slug is always size `xs`\n  let normalizedSlug;\n  if (slug && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'xs'\n    });\n  }\n  return interactive ? /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ref: ref,\n    className: interactiveClassNames\n  }, rest), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, normalizedSlug, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"button\", {\n    type: \"button\",\n    \"aria-expanded\": isExpanded,\n    \"aria-controls\": belowTheFoldId,\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    \"aria-label\": isExpanded ? tileExpandedIconText : tileCollapsedIconText,\n    ref: chevronInteractiveRef,\n    className: chevronInteractiveClassNames\n  }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`,\n    id: belowTheFoldId\n  }, childrenAsArray[1]))) : /*#__PURE__*/React__default.createElement(\"button\", _extends({\n    type: \"button\"\n    // @ts-expect-error: Needlesly strict & deep typing for the element type\n    ,\n    ref: ref,\n    className: classNames,\n    \"aria-expanded\": isExpanded,\n    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText\n  }, rest, {\n    onKeyUp: composeEventHandlers([onKeyUp, handleKeyUp]),\n    onClick: composeEventHandlers([onClick, handleClick]),\n    tabIndex: tabIndex\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: tileContent\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: aboveTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[0]), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--tile__chevron`\n  }, /*#__PURE__*/React__default.createElement(\"span\", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), _ChevronDown2 || (_ChevronDown2 = /*#__PURE__*/React__default.createElement(ChevronDown, null))), /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: belowTheFold,\n    className: `${prefix}--tile-content`\n  }, childrenAsArray[1])));\n});\nExpandableTile.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  /**\n   * `true` if the tile is expanded.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Specify if the `ExpandableTile` component should be rendered with rounded corners.\n   * Only valid when `slug` prop is present\n   */\n  hasRoundedCorners: PropTypes.bool,\n  /**\n   * An ID that can be provided to aria-labelledby\n   */\n  id: PropTypes.string,\n  /**\n   * `true` to use the light version. For use on $ui-01 backgrounds only.\n   * Don't use this to make tile background color same as container background color.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),\n  /**\n   * Specify the function to run when the ExpandableTile is clicked\n   */\n  onClick: PropTypes.func,\n  /**\n   * optional handler to trigger a function when a key is pressed\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `ExpandableTile` component\n   */\n  slug: PropTypes.node,\n  /**\n   * The `tabindex` attribute.\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The description of the \"collapsed\" icon that can be read by screen readers.\n   */\n  tileCollapsedIconText: PropTypes.string,\n  /**\n   * When \"collapsed\", a label to appear next to the chevron (e.g., \"View more\").\n   */\n  tileCollapsedLabel: PropTypes.string,\n  /**\n   * The description of the \"expanded\" icon that can be read by screen readers.\n   */\n  tileExpandedIconText: PropTypes.string,\n  /**\n   * When \"expanded\", a label to appear next to the chevron (e.g., \"View less\").\n   */\n  tileExpandedLabel: PropTypes.string\n};\nExpandableTile.displayName = 'ExpandableTile';\nconst TileAboveTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {\n  let {\n    children\n  } = _ref5;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: ref,\n    className: `${prefix}--tile-content__above-the-fold`\n  }, children);\n});\nTileAboveTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';\nconst TileBelowTheFoldContent = /*#__PURE__*/React__default.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {\n  let {\n    children\n  } = _ref6;\n  const prefix = usePrefix();\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    ref: ref,\n    className: `${prefix}--tile-content__below-the-fold`\n  }, children);\n});\nTileBelowTheFoldContent.propTypes = {\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node\n};\nTileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';\n\nexport { ClickableTile, ExpandableTile, SelectableTile, Tile, TileAboveTheFoldContent, TileBelowTheFoldContent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}