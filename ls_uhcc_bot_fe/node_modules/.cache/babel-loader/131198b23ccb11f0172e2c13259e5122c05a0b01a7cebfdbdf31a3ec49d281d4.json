{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport throttle from 'lodash.throttle';\nimport { ArrowDown, ArrowLeft, ArrowUp, ArrowRight, Enter } from '../../internal/keyboard/keys.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { FeatureFlagContext } from '../FeatureFlags/index.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport '../Text/index.js';\nimport '../Tooltip/DefinitionTooltip.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { LowerHandle, LowerHandleFocus, UpperHandle, UpperHandleFocus } from './SliderHandles.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Text } from '../Text/Text.js';\nvar _LowerHandle, _LowerHandleFocus, _UpperHandle, _UpperHandleFocus, _UpperHandle2, _UpperHandleFocus2, _LowerHandle2, _LowerHandleFocus2;\nconst ThumbWrapper = _ref => {\n  let {\n    hasTooltip = false,\n    className,\n    style,\n    children,\n    ...rest\n  } = _ref;\n  if (hasTooltip) {\n    return /*#__PURE__*/(\n      // eslint-disable-next-line react/forbid-component-props\n      React__default.createElement(Tooltip, _extends({\n        className: className,\n        style: style\n      }, rest), children)\n    );\n  } else {\n    return /*#__PURE__*/(\n      // eslint-disable-next-line react/forbid-dom-props\n      React__default.createElement(\"div\", {\n        className: className,\n        style: style\n      }, children)\n    );\n  }\n};\nThumbWrapper.propTypes = {\n  /**\n   * The thumb node itself.\n   */\n  children: PropTypes.node,\n  /**\n   * CSS wrapper class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Should the thumb show a tooltip with the current value?\n   */\n  hasTooltip: PropTypes.bool.isRequired,\n  /**\n   * Percentage offset for the select thumb value.\n   */\n  style: PropTypes.object\n};\nconst translationIds = {\n  autoCorrectAnnouncement: 'carbon.slider.auto-correct-announcement'\n};\n\n/**\n * Message ids that will be passed to translateWithId().\n */\n\nfunction translateWithId(translationId, translationState) {\n  if (translationState !== null && translationState !== void 0 && translationState.correctedValue) {\n    const {\n      correctedValue\n    } = translationState;\n    return \"The inputted value \\\"\".concat(correctedValue, \"\\\" was corrected to the nearest allowed digit.\");\n  }\n  return '';\n}\nconst defaultFormatLabel = (value, label) => {\n  return typeof label === 'function' ? label(value) : \"\".concat(value).concat(label);\n};\n\n/**\n * Minimum time between processed \"drag\" events.\n */\nconst EVENT_THROTTLE = 16; // ms\n\n/**\n * Event types that trigger \"drags\".\n */\nconst DRAG_EVENT_TYPES = new Set(['mousemove', 'touchmove']);\n\n/**\n * Event types that trigger a \"drag\" to stop.\n */\nconst DRAG_STOP_EVENT_TYPES = new Set(['mouseup', 'touchend', 'touchcancel']);\n\n/**\n * Distinguish two handles by lower and upper positions.\n */\nvar HandlePosition = /*#__PURE__*/function (HandlePosition) {\n  HandlePosition[\"LOWER\"] = \"lower\";\n  HandlePosition[\"UPPER\"] = \"upper\";\n  return HandlePosition;\n}(HandlePosition || {});\nclass Slider extends PureComponent {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    _defineProperty(this, \"state\", {\n      value: this.props.value,\n      valueUpper: this.props.unstable_valueUpper,\n      left: 0,\n      leftUpper: 0,\n      needsOnRelease: false,\n      isValid: true,\n      isValidUpper: true,\n      activeHandle: null,\n      correctedValue: null,\n      correctedPosition: null,\n      isRtl: false\n    });\n    _defineProperty(this, \"thumbRef\", void 0);\n    _defineProperty(this, \"thumbRefUpper\", void 0);\n    _defineProperty(this, \"filledTrackRef\", void 0);\n    _defineProperty(this, \"element\", null);\n    _defineProperty(this, \"inputId\", '');\n    _defineProperty(this, \"track\", void 0);\n    /**\n     * Sets up \"drag\" event handlers and calls `this.onDrag` in case dragging\n     * started on somewhere other than the thumb without a corresponding \"move\"\n     * event.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onDragStart\", evt => {\n      // Do nothing if component is disabled\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // We're going to force focus on one of the handles later on here, b/c we're\n      // firing on a mousedown event, we need to call event.preventDefault() to\n      // keep the focus from leaving the HTMLElement.\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#notes\n      evt.preventDefault();\n\n      // Register drag stop handlers\n      DRAG_STOP_EVENT_TYPES.forEach(element => {\n        var _this$element;\n        (_this$element = this.element) === null || _this$element === void 0 || _this$element.ownerDocument.addEventListener(element, this.onDragStop);\n      });\n\n      // Register drag handlers\n      DRAG_EVENT_TYPES.forEach(element => {\n        var _this$element2;\n        (_this$element2 = this.element) === null || _this$element2 === void 0 || _this$element2.ownerDocument.addEventListener(element, this.onDrag);\n      });\n      const clientX = this.getClientXFromEvent(evt);\n      let activeHandle;\n      if (this.hasTwoHandles()) {\n        if (evt.target == this.thumbRef.current) {\n          activeHandle = HandlePosition.LOWER;\n        } else if (evt.target == this.thumbRefUpper.current) {\n          activeHandle = HandlePosition.UPPER;\n        } else {\n          const distanceToLower = this.calcDistanceToHandle(HandlePosition.LOWER, clientX);\n          const distanceToUpper = this.calcDistanceToHandle(HandlePosition.UPPER, clientX);\n          if (distanceToLower <= distanceToUpper) {\n            activeHandle = HandlePosition.LOWER;\n          } else {\n            activeHandle = HandlePosition.UPPER;\n          }\n        }\n      }\n\n      // Force focus to the appropriate handle.\n      const focusOptions = {\n        preventScroll: true\n      };\n      if (this.hasTwoHandles()) {\n        if (this.thumbRef.current && activeHandle === HandlePosition.LOWER) {\n          this.thumbRef.current.focus(focusOptions);\n        } else if (this.thumbRefUpper.current && activeHandle === HandlePosition.UPPER) {\n          this.thumbRefUpper.current.focus(focusOptions);\n        }\n      } else if (this.thumbRef.current) {\n        this.thumbRef.current.focus(focusOptions);\n      }\n      this.setState({\n        activeHandle\n      });\n\n      // Perform first recalculation since we probably didn't click exactly in the\n      // middle of the thumb.\n      this.onDrag(evt, activeHandle);\n    });\n    /**\n     * Unregisters \"drag\" and \"drag stop\" event handlers and calls sets the flag\n     * indicating that the `onRelease` callback should be called.\n     */\n    _defineProperty(this, \"onDragStop\", () => {\n      // Do nothing if component is disabled\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // Remove drag stop handlers\n      DRAG_STOP_EVENT_TYPES.forEach(element => {\n        var _this$element3;\n        (_this$element3 = this.element) === null || _this$element3 === void 0 || _this$element3.ownerDocument.removeEventListener(element, this.onDragStop);\n      });\n\n      // Remove drag handlers\n      DRAG_EVENT_TYPES.forEach(element => {\n        var _this$element4;\n        (_this$element4 = this.element) === null || _this$element4 === void 0 || _this$element4.ownerDocument.removeEventListener(element, this.onDrag);\n      });\n\n      // Set needsOnRelease flag so event fires on next update.\n      this.setState({\n        needsOnRelease: true,\n        isValid: true,\n        isValidUpper: true\n      });\n    });\n    /**\n     * Handles a \"drag\" event by recalculating the value/thumb and setting state\n     * accordingly.\n     *\n     * @param {Event} evt The event.\n     * @param activeHandle\n     *   The first drag event call, we may have an explicit activeHandle value,\n     *   which is to be used before state is used.\n     */\n    _defineProperty(this, \"_onDrag\", function (evt) {\n      var _activeHandle;\n      let activeHandle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      activeHandle = (_activeHandle = activeHandle) !== null && _activeHandle !== void 0 ? _activeHandle : _this.state.activeHandle;\n      // Do nothing if component is disabled, or we have no event.\n      if (_this.props.disabled || _this.props.readOnly || !evt) {\n        return;\n      }\n      const clientX = _this.getClientXFromEvent(evt);\n      const {\n        value,\n        left\n      } = _this.calcValue({\n        clientX,\n        value: _this.state.value\n      });\n      // If we're set to two handles, negotiate which drag handle is closest to\n      // the users' interaction.\n      if (_this.hasTwoHandles() && activeHandle) {\n        _this.setValueLeftForHandle(activeHandle, {\n          value: _this.nearestStepValue(value),\n          left\n        });\n      } else {\n        _this.setState({\n          value: _this.nearestStepValue(value),\n          left,\n          isValid: true\n        });\n      }\n      _this.setState({\n        correctedValue: null,\n        correctedPosition: null\n      });\n    });\n    /**\n     * Throttles calls to `this._onDrag` by limiting events to being processed at\n     * most once every `EVENT_THROTTLE` milliseconds.\n     */\n    _defineProperty(this, \"onDrag\", throttle(this._onDrag, EVENT_THROTTLE, {\n      leading: true,\n      trailing: false\n    }));\n    /**\n     * Handles a `keydown` event by recalculating the value/thumb and setting\n     * state accordingly.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onKeyDown\", evt => {\n      // Do nothing if component is disabled, or we don't have a valid event\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n      const {\n        step = 1,\n        stepMultiplier = 4\n      } = this.props;\n      let delta = 0;\n      if (matches(evt, [ArrowDown, ArrowLeft])) {\n        delta = -step;\n      } else if (matches(evt, [ArrowUp, ArrowRight])) {\n        delta = step;\n      } else {\n        // Ignore keys we don't want to handle\n        return;\n      }\n\n      // If shift was held, account for the stepMultiplier\n      if (evt.shiftKey) {\n        delta *= stepMultiplier;\n      }\n      if (this.hasTwoHandles() && this.state.activeHandle) {\n        const currentValue = this.state.activeHandle === HandlePosition.LOWER ? this.state.value : this.state.valueUpper;\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: this.calcValueForDelta(currentValue, delta, this.props.step)\n        });\n        this.setValueLeftForHandle(this.state.activeHandle, {\n          value: this.nearestStepValue(value),\n          left\n        });\n      } else {\n        const {\n          value,\n          left\n        } = this.calcValue({\n          // Ensures custom value from `<input>` won't cause skipping next stepping\n          // point with right arrow key, e.g. Typing 51 in `<input>`, moving focus\n          // onto the thumb and the hitting right arrow key should yield 52 instead\n          // of 54.\n          value: this.calcValueForDelta(this.state.value, delta, this.props.step)\n        });\n        this.setState({\n          value: this.nearestStepValue(value),\n          left,\n          isValid: true\n        });\n      }\n      this.setState({\n        correctedValue: null,\n        correctedPosition: null\n      });\n    });\n    /**\n     * Provides the two-way binding for the input field of the Slider. It also\n     * Handles a change to the input field by recalculating the value/thumb and\n     * setting state accordingly.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onChange\", evt => {\n      var _evt$target$dataset$h;\n      // Do nothing if component is disabled\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // Do nothing if we have no valid event, target, or value\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n\n      // Avoid calling calcValue for invalid numbers, but still update the state.\n      const activeHandle = (_evt$target$dataset$h = evt.target.dataset.handlePosition) !== null && _evt$target$dataset$h !== void 0 ? _evt$target$dataset$h : HandlePosition.LOWER;\n      const targetValue = Number.parseFloat(evt.target.value);\n      if (this.hasTwoHandles()) {\n        if (isNaN(targetValue)) {\n          this.setValueForHandle(activeHandle, evt.target.value);\n        } else if (this.isValidValueForPosition({\n          handle: activeHandle,\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        })) {\n          this.processNewInputValue(evt.target);\n        } else {\n          this.setValueForHandle(activeHandle, targetValue);\n        }\n      } else {\n        if (isNaN(targetValue)) {\n          this.setState({\n            value: evt.target.value\n          });\n        } else if (this.isValidValue({\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        })) {\n          this.processNewInputValue(evt.target);\n        } else {\n          this.setState({\n            value: targetValue\n          });\n        }\n      }\n    });\n    /**\n     * Checks for validity of input value after clicking out of the input. It also\n     * Handles state change to isValid state.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onBlur\", evt => {\n      var _this$props$onBlur, _this$props, _evt$target;\n      // Do nothing if we have no valid event, target, or value\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n      const {\n        value: targetValue\n      } = evt.target;\n      this.processNewInputValue(evt.target);\n      (_this$props$onBlur = (_this$props = this.props).onBlur) === null || _this$props$onBlur === void 0 || _this$props$onBlur.call(_this$props, {\n        value: targetValue,\n        handlePosition: (_evt$target = evt.target) === null || _evt$target === void 0 || (_evt$target = _evt$target.dataset) === null || _evt$target === void 0 ? void 0 : _evt$target.handlePosition\n      });\n    });\n    _defineProperty(this, \"onInputKeyDown\", evt => {\n      // Do nothing if component is disabled, or we don't have a valid event.\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // Do nothing if we have no valid event, target, or value.\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n      if (matches(evt, [Enter])) {\n        this.processNewInputValue(evt.target);\n      }\n    });\n    _defineProperty(this, \"processNewInputValue\", input => {\n      var _input$dataset;\n      this.setState({\n        correctedValue: null,\n        correctedPosition: null\n      });\n      const targetValue = Number.parseFloat(input.value);\n      const validity = !isNaN(targetValue);\n\n      // When there are two handles, we'll also have the data-handle-position\n      // attribute to consider the other value before settling on the validity to\n      // set.\n      const handlePosition = input === null || input === void 0 || (_input$dataset = input.dataset) === null || _input$dataset === void 0 ? void 0 : _input$dataset.handlePosition;\n      if (handlePosition === HandlePosition.LOWER) {\n        this.setState({\n          isValid: validity\n        });\n      } else if (handlePosition === HandlePosition.UPPER) {\n        this.setState({\n          isValidUpper: validity\n        });\n      }\n      this.setState({\n        isValid: validity\n      });\n      if (validity) {\n        const adjustedValue = handlePosition ? this.getAdjustedValueForPosition({\n          handle: handlePosition,\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        }) : this.getAdjustedValue({\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        });\n        if (adjustedValue !== targetValue) {\n          this.setState({\n            correctedValue: targetValue.toString(),\n            correctedPosition: handlePosition\n          });\n        } else {\n          this.setState({\n            correctedValue: null,\n            correctedPosition: null\n          });\n        }\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: adjustedValue,\n          useRawValue: true\n        });\n        if (handlePosition) {\n          this.setValueLeftForHandle(handlePosition, {\n            value,\n            left\n          });\n        } else {\n          this.setState({\n            value,\n            left\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"calcLeftPercent\", _ref2 => {\n      var _this$element5, _this$element5$getBou;\n      let {\n        clientX,\n        value,\n        range\n      } = _ref2;\n      const boundingRect = (_this$element5 = this.element) === null || _this$element5 === void 0 || (_this$element5$getBou = _this$element5.getBoundingClientRect) === null || _this$element5$getBou === void 0 ? void 0 : _this$element5$getBou.call(_this$element5);\n      let width = boundingRect ? boundingRect.right - boundingRect.left : 0;\n\n      // Enforce a minimum width of at least 1 for calculations\n      if (width <= 0) {\n        width = 1;\n      }\n\n      // If a clientX is specified, use it to calculate the leftPercent. If not,\n      // use the provided value to calculate it instead.\n      if (clientX) {\n        var _boundingRect$right, _boundingRect$left;\n        const leftOffset = this.state.isRtl ? ((_boundingRect$right = boundingRect === null || boundingRect === void 0 ? void 0 : boundingRect.right) !== null && _boundingRect$right !== void 0 ? _boundingRect$right : 0) - clientX : clientX - ((_boundingRect$left = boundingRect === null || boundingRect === void 0 ? void 0 : boundingRect.left) !== null && _boundingRect$left !== void 0 ? _boundingRect$left : 0);\n        return leftOffset / width;\n      } else if (value !== null && value !== undefined && range) {\n        // Prevent NaN calculation if the range is 0.\n        return range === 0 ? 0 : (value - this.props.min) / range;\n      }\n      // We should never end up in this scenario, but in case we do, and to\n      // re-assure Typescript, return 0.\n      return 0;\n    });\n    _defineProperty(this, \"calcSteppedValuePercent\", _ref3 => {\n      let {\n        leftPercent,\n        range\n      } = _ref3;\n      const {\n        step = 1\n      } = this.props;\n      const totalSteps = range / step;\n      let steppedValue = Math.round(leftPercent * totalSteps) * step;\n      const steppedPercent = this.clamp(steppedValue / range, 0, 1);\n      steppedValue = this.clamp(steppedValue + this.props.min, this.props.min, this.props.max);\n      return [steppedValue, steppedPercent];\n    });\n    /**\n     * Calculates a new Slider `value` and `left` (thumb offset) given a `clientX`,\n     * `value`, or neither of those.\n     * - If `clientX` is specified, it will be used in\n     *   conjunction with the Slider's bounding rectangle to calculate the new\n     *   values.\n     * - If `clientX` is not specified and `value` is, it will be used to\n     *   calculate new values as though it were the current value of the Slider.\n     * - If neither `clientX` nor `value` are specified, `this.props.value` will\n     *   be used to calculate the new values as though it were the current value\n     *   of the Slider.\n     *\n     * @param {object} params\n     * @param {number} [params.clientX] Optional clientX value expected to be from\n     *   an event fired by one of the Slider's `DRAG_EVENT_TYPES` events.\n     * @param {number} [params.value] Optional value use during calculations if\n     *   clientX is not provided.\n     * @param {boolean} [params.useRawValue=false] `true` to use the given value as-is.\n     */\n    _defineProperty(this, \"calcValue\", _ref4 => {\n      let {\n        clientX,\n        value,\n        useRawValue = false\n      } = _ref4;\n      const range = this.props.max - this.props.min;\n\n      // @todo solve for rtl.\n      const leftPercent = this.calcLeftPercent({\n        clientX,\n        value,\n        range\n      });\n      if (useRawValue) {\n        // Adjusts only for min/max of thumb position\n        return {\n          value,\n          left: Math.min(1, Math.max(0, leftPercent)) * 100\n        };\n      }\n      const [steppedValue, steppedPercent] = this.calcSteppedValuePercent({\n        leftPercent,\n        range\n      });\n      return {\n        value: steppedValue,\n        left: steppedPercent * 100\n      };\n    });\n    _defineProperty(this, \"calcDistanceToHandle\", (handle, clientX) => {\n      const handleBoundingRect = this.getHandleBoundingRect(handle);\n      // x co-ordinate of the midpoint.\n      const handleX = handleBoundingRect.left + handleBoundingRect.width / 2;\n      return Math.abs(handleX - clientX);\n    });\n    /**\n     * Given the current value, delta and step, calculate the new value.\n     *\n     * @param {number} currentValue\n     *   Current value user is moving from.\n     * @param {number} delta\n     *   Movement from the current value. Can be positive or negative.\n     * @param {number} step\n     *   A value determining how much the value should increase/decrease by moving\n     *   the thumb by mouse.\n     */\n    _defineProperty(this, \"calcValueForDelta\", function (currentValue, delta) {\n      let step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return (delta > 0 ? Math.floor(currentValue / step) * step : currentValue) + delta;\n    });\n    /**\n     * Sets state relevant to the given handle position.\n     *\n     * Guards against setting either lower or upper values beyond its counterpart.\n     */\n    _defineProperty(this, \"setValueLeftForHandle\", (handle, _ref5) => {\n      let {\n        value: newValue,\n        left: newLeft\n      } = _ref5;\n      const {\n        value,\n        valueUpper,\n        left,\n        leftUpper\n      } = this.state;\n      if (handle === HandlePosition.LOWER) {\n        // Don't allow higher than the upper handle.\n        this.setState({\n          value: valueUpper && newValue > valueUpper ? valueUpper : newValue,\n          left: valueUpper && newValue > valueUpper ? leftUpper : newLeft,\n          isValid: true\n        });\n      } else {\n        this.setState({\n          valueUpper: value && newValue < value ? value : newValue,\n          leftUpper: value && newValue < value ? left : newLeft,\n          isValidUpper: true\n        });\n      }\n    });\n    _defineProperty(this, \"setValueForHandle\", (handle, value) => {\n      if (handle === HandlePosition.LOWER) {\n        this.setState({\n          value,\n          isValid: true\n        });\n      } else {\n        this.setState({\n          valueUpper: value,\n          isValidUpper: true\n        });\n      }\n    });\n    _defineProperty(this, \"isValidValueForPosition\", _ref6 => {\n      let {\n        handle,\n        value: newValue,\n        min,\n        max\n      } = _ref6;\n      const {\n        value,\n        valueUpper\n      } = this.state;\n      if (!this.isValidValue({\n        value: newValue,\n        min,\n        max\n      })) {\n        return false;\n      }\n      if (handle === HandlePosition.LOWER) {\n        return !valueUpper || newValue <= valueUpper;\n      } else if (handle === HandlePosition.UPPER) {\n        return !value || newValue >= value;\n      }\n      return false;\n    });\n    _defineProperty(this, \"isValidValue\", _ref7 => {\n      let {\n        value,\n        min,\n        max\n      } = _ref7;\n      return !(value < min || value > max);\n    });\n    _defineProperty(this, \"getAdjustedValueForPosition\", _ref8 => {\n      let {\n        handle,\n        value: newValue,\n        min,\n        max\n      } = _ref8;\n      const {\n        value,\n        valueUpper\n      } = this.state;\n      newValue = this.getAdjustedValue({\n        value: newValue,\n        min,\n        max\n      });\n\n      // Next adjust to the opposite handle.\n      if (handle === HandlePosition.LOWER && valueUpper) {\n        newValue = newValue > valueUpper ? valueUpper : newValue;\n      } else if (handle === HandlePosition.UPPER && value) {\n        newValue = newValue < value ? value : newValue;\n      }\n      return newValue;\n    });\n    _defineProperty(this, \"getAdjustedValue\", _ref9 => {\n      let {\n        value,\n        min,\n        max\n      } = _ref9;\n      if (value < min) {\n        value = min;\n      }\n      if (value > max) {\n        value = max;\n      }\n      return value;\n    });\n    /**\n     * Get the bounding rect for the requested handles' DOM element.\n     *\n     * If the bounding rect is not available, a new, empty DOMRect is returned.\n     */\n    _defineProperty(this, \"getHandleBoundingRect\", handle => {\n      var _boundingRect;\n      let boundingRect;\n      if (handle === HandlePosition.LOWER) {\n        var _this$thumbRef;\n        boundingRect = this === null || this === void 0 || (_this$thumbRef = this.thumbRef) === null || _this$thumbRef === void 0 || (_this$thumbRef = _this$thumbRef.current) === null || _this$thumbRef === void 0 ? void 0 : _this$thumbRef.getBoundingClientRect();\n      } else {\n        var _this$thumbRefUpper;\n        boundingRect = this === null || this === void 0 || (_this$thumbRefUpper = this.thumbRefUpper) === null || _this$thumbRefUpper === void 0 || (_this$thumbRefUpper = _this$thumbRefUpper.current) === null || _this$thumbRefUpper === void 0 ? void 0 : _this$thumbRefUpper.getBoundingClientRect();\n      }\n      return (_boundingRect = boundingRect) !== null && _boundingRect !== void 0 ? _boundingRect : new DOMRect();\n    });\n    this.thumbRef = /*#__PURE__*/React__default.createRef();\n    this.thumbRefUpper = /*#__PURE__*/React__default.createRef();\n    this.filledTrackRef = /*#__PURE__*/React__default.createRef();\n  }\n\n  /**\n   * Sets up initial slider position and value in response to component mount.\n   */\n  componentDidMount() {\n    if (this.element) {\n      var _document;\n      const isRtl = ((_document = document) === null || _document === void 0 ? void 0 : _document.dir) === 'rtl';\n      if (this.hasTwoHandles()) {\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: this.state.value,\n          useRawValue: true\n        });\n        const {\n          value: valueUpper,\n          left: leftUpper\n        } = this.calcValue({\n          value: this.state.valueUpper,\n          useRawValue: true\n        });\n        this.setState({\n          isRtl,\n          value,\n          left,\n          valueUpper,\n          leftUpper\n        });\n      } else {\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: this.state.value,\n          useRawValue: true\n        });\n        this.setState({\n          isRtl,\n          value,\n          left\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles firing of `onChange` and `onRelease` callbacks to parent in\n   * response to state changes.\n   *\n   * @param {*} prevProps prevProps\n   * @param {*} prevState The previous Slider state, used to see if callbacks\n   * should be called.\n   */\n  componentDidUpdate(prevProps, prevState) {\n    // Fire onChange event handler if present, if there's a usable value, and\n    // if the value is different from the last one\n    if (this.hasTwoHandles()) {\n      if (this.filledTrackRef.current) {\n        this.filledTrackRef.current.style.transform = this.state.isRtl ? \"translate(\".concat(100 - this.state.leftUpper, \"%, -50%) scaleX(\").concat((this.state.leftUpper - this.state.left) / 100, \")\") : \"translate(\".concat(this.state.left, \"%, -50%) scaleX(\").concat((this.state.leftUpper - this.state.left) / 100, \")\");\n      }\n    } else {\n      if (this.filledTrackRef.current) {\n        this.filledTrackRef.current.style.transform = this.state.isRtl ? \"translate(100%, -50%) scaleX(-\".concat(this.state.left / 100, \")\") : \"translate(0%, -50%) scaleX(\".concat(this.state.left / 100, \")\");\n      }\n    }\n    if ((prevState.value !== this.state.value || prevState.valueUpper !== this.state.valueUpper) && typeof this.props.onChange === 'function') {\n      this.props.onChange({\n        value: this.state.value,\n        valueUpper: this.state.valueUpper\n      });\n    }\n\n    // Fire onRelease event handler if present and if needed\n    if (this.state.needsOnRelease && typeof this.props.onRelease === 'function') {\n      this.props.onRelease({\n        value: this.state.value,\n        valueUpper: this.state.valueUpper\n      });\n      // Reset the flag\n      this.setState({\n        needsOnRelease: false\n      });\n    }\n\n    // If value from props does not change, do nothing here.\n    // Otherwise, do prop -> state sync without \"value capping\".\n    if (prevProps.value === this.props.value && prevProps.unstable_valueUpper === this.props.unstable_valueUpper && prevProps.max === this.props.max && prevProps.min === this.props.min) {\n      return;\n    }\n    this.setState(this.calcValue({\n      value: this.props.value,\n      useRawValue: true\n    }));\n    if (this.props.unstable_valueUpper !== undefined) {\n      const {\n        value: valueUpper,\n        left: leftUpper\n      } = this.calcValue({\n        value: this.props.unstable_valueUpper,\n        useRawValue: true\n      });\n      this.setState({\n        valueUpper,\n        leftUpper\n      });\n    } else {\n      this.setState({\n        valueUpper: undefined,\n        leftUpper: undefined\n      });\n    }\n  }\n\n  /**\n   * Synonymous to ECMA2017+ `Math.clamp`.\n   *\n   * @param {number} val\n   * @param {number} min\n   * @param {number} max\n   *\n   * @returns `val` if `max>=val>=min`; `min` if `val<min`; `max` if `val>max`.\n   */\n  clamp(val, min, max) {\n    return Math.max(min, Math.min(val, max));\n  }\n\n  /**\n   * Takes a value and ensures it fits to the steps of the range\n   * @param value\n   * @returns value of the nearest step\n   */\n  nearestStepValue(value) {\n    const tempInput = document.createElement('input');\n    tempInput.type = 'range';\n    tempInput.min = \"\".concat(this.props.min);\n    tempInput.max = \"\".concat(this.props.max);\n    tempInput.step = \"\".concat(this.props.step);\n    tempInput.value = \"\".concat(value);\n    return parseFloat(tempInput.value);\n  }\n  getClientXFromEvent(event) {\n    let clientX;\n    if ('clientX' in event) {\n      clientX = event.clientX;\n    } else if ('touches' in event && 0 in event.touches && 'clientX' in event.touches[0]) {\n      clientX = event.touches[0].clientX;\n    }\n    return clientX;\n  }\n  hasTwoHandles() {\n    return this.state.valueUpper !== undefined;\n  }\n\n  // syncs invalid state and prop\n  static getDerivedStateFromProps(props, state) {\n    const {\n      isValid,\n      isValidUpper\n    } = state;\n    let derivedState = {};\n\n    // Will override state in favor of invalid prop\n    if (props.invalid === true) {\n      if (isValid === true) {\n        derivedState = {\n          ...derivedState,\n          isValid: false\n        };\n      }\n      if (isValid === true) {\n        derivedState = {\n          ...derivedState,\n          isValid: false\n        };\n      }\n      if (isValidUpper === true) {\n        derivedState = {\n          ...derivedState,\n          isValidUpper: false\n        };\n      }\n    } else if (props.invalid === false) {\n      if (isValid === false) {\n        derivedState = {\n          ...derivedState,\n          isValid: true\n        };\n      }\n      if (isValid === false) {\n        derivedState = {\n          ...derivedState,\n          isValid: true\n        };\n      }\n      if (isValidUpper === false) {\n        derivedState = {\n          ...derivedState,\n          isValidUpper: true\n        };\n      }\n    }\n    return Object.entries(derivedState).length > 0 ? derivedState : null;\n  }\n  render() {\n    const {\n      ariaLabelInput,\n      unstable_ariaLabelInputUpper: ariaLabelInputUpper,\n      className,\n      hideTextInput = false,\n      id = this.inputId = this.inputId || \"__carbon-slider_\".concat(Math.random().toString(36).substr(2)),\n      min,\n      minLabel = '',\n      max,\n      maxLabel = '',\n      formatLabel = defaultFormatLabel,\n      labelText,\n      step = 1,\n      stepMultiplier: _stepMultiplier,\n      inputType = 'number',\n      invalidText,\n      required,\n      disabled = false,\n      name,\n      unstable_nameUpper: nameUpper,\n      light,\n      readOnly = false,\n      warn,\n      warnText,\n      translateWithId: t = translateWithId,\n      ...other\n    } = this.props;\n    const twoHandles = this.hasTwoHandles();\n    delete other.onRelease;\n    delete other.invalid;\n    delete other.unstable_valueUpper;\n    const {\n      value,\n      valueUpper,\n      isValid,\n      isValidUpper,\n      correctedValue,\n      correctedPosition,\n      isRtl\n    } = this.state;\n    const showWarning = !readOnly && warn || typeof correctedValue !== null && correctedPosition === HandlePosition.LOWER && isValid;\n    const showWarningUpper = !readOnly && warn || typeof correctedValue !== null && correctedPosition === (twoHandles ? HandlePosition.UPPER : HandlePosition.LOWER) && (twoHandles ? isValidUpper : isValid);\n    return /*#__PURE__*/React__default.createElement(PrefixContext.Consumer, null, prefix => {\n      const labelId = \"\".concat(id, \"-label\");\n      const labelClasses = cx(\"\".concat(prefix, \"--label\"), {\n        [\"\".concat(prefix, \"--label--disabled\")]: disabled\n      });\n      const containerClasses = cx(\"\".concat(prefix, \"--slider-container\"), {\n        [\"\".concat(prefix, \"--slider-container--two-handles\")]: twoHandles,\n        [\"\".concat(prefix, \"--slider-container--disabled\")]: disabled,\n        [\"\".concat(prefix, \"--slider-container--readonly\")]: readOnly,\n        [\"\".concat(prefix, \"--slider-container--rtl\")]: isRtl\n      });\n      const sliderClasses = cx(\"\".concat(prefix, \"--slider\"), {\n        [\"\".concat(prefix, \"--slider--disabled\")]: disabled,\n        [\"\".concat(prefix, \"--slider--readonly\")]: readOnly\n      });\n      const fixedInputClasses = [\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--slider-text-input\")];\n      const conditionalInputClasses = {\n        [\"\".concat(prefix, \"--text-input--light\")]: light\n      };\n      const lowerInputClasses = cx([...fixedInputClasses, \"\".concat(prefix, \"--slider-text-input--lower\"), conditionalInputClasses, {\n        [\"\".concat(prefix, \"--text-input--invalid\")]: !readOnly && !isValid,\n        [\"\".concat(prefix, \"--slider-text-input--warn\")]: showWarning\n      }]);\n      const upperInputClasses = cx([...fixedInputClasses, \"\".concat(prefix, \"--slider-text-input--upper\"), conditionalInputClasses, {\n        [\"\".concat(prefix, \"--text-input--invalid\")]: !readOnly && (twoHandles ? !isValidUpper : !isValid),\n        [\"\".concat(prefix, \"--slider-text-input--warn\")]: showWarningUpper\n      }]);\n      const lowerInputWrapperClasses = cx([\"\".concat(prefix, \"--text-input-wrapper\"), \"\".concat(prefix, \"--slider-text-input-wrapper\"), \"\".concat(prefix, \"--slider-text-input-wrapper--lower\"), {\n        [\"\".concat(prefix, \"--text-input-wrapper--readonly\")]: readOnly,\n        [\"\".concat(prefix, \"--slider-text-input-wrapper--hidden\")]: hideTextInput\n      }]);\n      const upperInputWrapperClasses = cx([\"\".concat(prefix, \"--text-input-wrapper\"), \"\".concat(prefix, \"--slider-text-input-wrapper\"), \"\".concat(prefix, \"--slider-text-input-wrapper--upper\"), {\n        [\"\".concat(prefix, \"--text-input-wrapper--readonly\")]: readOnly,\n        [\"\".concat(prefix, \"--slider-text-input-wrapper--hidden\")]: hideTextInput\n      }]);\n      const lowerThumbClasses = cx(\"\".concat(prefix, \"--slider__thumb\"), {\n        [\"\".concat(prefix, \"--slider__thumb--lower\")]: twoHandles\n      });\n      const upperThumbClasses = cx(\"\".concat(prefix, \"--slider__thumb\"), {\n        [\"\".concat(prefix, \"--slider__thumb--upper\")]: twoHandles\n      });\n      const lowerThumbWrapperClasses = cx([\"\".concat(prefix, \"--icon-tooltip\"), \"\".concat(prefix, \"--slider__thumb-wrapper\"), {\n        [\"\".concat(prefix, \"--slider__thumb-wrapper--lower\")]: twoHandles\n      }]);\n      const upperThumbWrapperClasses = cx([\"\".concat(prefix, \"--icon-tooltip\"), \"\".concat(prefix, \"--slider__thumb-wrapper\"), {\n        [\"\".concat(prefix, \"--slider__thumb-wrapper--upper\")]: twoHandles\n      }]);\n      const lowerThumbWrapperProps = {\n        style: {\n          insetInlineStart: \"\".concat(this.state.left, \"%\")\n        }\n      };\n      const upperThumbWrapperProps = {\n        style: {\n          insetInlineStart: \"\".concat(this.state.leftUpper, \"%\")\n        }\n      };\n      return /*#__PURE__*/React__default.createElement(\"div\", {\n        className: cx(\"\".concat(prefix, \"--form-item\"), className)\n      }, /*#__PURE__*/React__default.createElement(Text, {\n        as: \"label\",\n        htmlFor: twoHandles ? undefined : id,\n        className: labelClasses,\n        id: labelId\n      }, labelText), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: containerClasses\n      }, twoHandles ? /*#__PURE__*/React__default.createElement(\"div\", {\n        className: lowerInputWrapperClasses\n      }, /*#__PURE__*/React__default.createElement(\"input\", {\n        type: hideTextInput ? 'hidden' : inputType,\n        id: \"\".concat(id, \"-lower-input-for-slider\"),\n        name: name,\n        className: lowerInputClasses,\n        value: value,\n        \"aria-label\": ariaLabelInput,\n        disabled: disabled,\n        required: required,\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        onKeyUp: this.props.onInputKeyUp,\n        onKeyDown: this.onInputKeyDown,\n        \"data-invalid\": !isValid && !readOnly ? true : null,\n        \"data-handle-position\": HandlePosition.LOWER,\n        \"aria-invalid\": !isValid && !readOnly ? true : undefined,\n        readOnly: readOnly\n      }), !readOnly && !isValid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n        className: \"\".concat(prefix, \"--slider__invalid-icon\")\n      }), showWarning && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n        className: \"\".concat(prefix, \"--slider__invalid-icon \").concat(prefix, \"--slider__invalid-icon--warning\")\n      })) : null, /*#__PURE__*/React__default.createElement(Text, {\n        className: \"\".concat(prefix, \"--slider__range-label\")\n      }, formatLabel(min, minLabel)), /*#__PURE__*/React__default.createElement(\"div\", _extends({\n        className: sliderClasses,\n        ref: node => {\n          this.element = node;\n        },\n        onMouseDown: this.onDragStart,\n        onTouchStart: this.onDragStart,\n        onKeyDown: this.onKeyDown,\n        role: \"presentation\",\n        tabIndex: -1,\n        \"data-invalid\": (twoHandles ? !isValid || !isValidUpper : !isValid) && !readOnly ? true : null\n      }, other), /*#__PURE__*/React__default.createElement(ThumbWrapper, _extends({\n        hasTooltip: hideTextInput,\n        className: lowerThumbWrapperClasses,\n        label: \"\".concat(formatLabel(value, '')),\n        align: \"top\"\n      }, lowerThumbWrapperProps), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: lowerThumbClasses,\n        role: \"slider\",\n        id: twoHandles ? undefined : id,\n        tabIndex: !readOnly ? 0 : -1,\n        \"aria-valuetext\": \"\".concat(formatLabel(value, '')),\n        \"aria-valuemax\": twoHandles ? valueUpper : max,\n        \"aria-valuemin\": min,\n        \"aria-valuenow\": value,\n        \"aria-labelledby\": twoHandles ? undefined : labelId,\n        \"aria-label\": twoHandles ? ariaLabelInput : undefined,\n        ref: this.thumbRef,\n        onFocus: () => this.setState({\n          activeHandle: HandlePosition.LOWER\n        })\n      }, twoHandles && !isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _LowerHandle || (_LowerHandle = /*#__PURE__*/React__default.createElement(LowerHandle, null)), _LowerHandleFocus || (_LowerHandleFocus = /*#__PURE__*/React__default.createElement(LowerHandleFocus, null))) : twoHandles && isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _UpperHandle || (_UpperHandle = /*#__PURE__*/React__default.createElement(UpperHandle, null)), _UpperHandleFocus || (_UpperHandleFocus = /*#__PURE__*/React__default.createElement(UpperHandleFocus, null))) : undefined)), twoHandles ? /*#__PURE__*/React__default.createElement(ThumbWrapper, _extends({\n        hasTooltip: hideTextInput,\n        className: upperThumbWrapperClasses,\n        label: \"\".concat(formatLabel(valueUpper || 0, '')),\n        align: \"top\"\n      }, upperThumbWrapperProps), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: upperThumbClasses,\n        role: \"slider\",\n        tabIndex: !readOnly ? 0 : -1,\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": value,\n        \"aria-valuenow\": valueUpper,\n        \"aria-label\": ariaLabelInputUpper,\n        ref: this.thumbRefUpper,\n        onFocus: () => this.setState({\n          activeHandle: HandlePosition.UPPER\n        })\n      }, twoHandles && !isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _UpperHandle2 || (_UpperHandle2 = /*#__PURE__*/React__default.createElement(UpperHandle, null)), _UpperHandleFocus2 || (_UpperHandleFocus2 = /*#__PURE__*/React__default.createElement(UpperHandleFocus, null))) : twoHandles && isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _LowerHandle2 || (_LowerHandle2 = /*#__PURE__*/React__default.createElement(LowerHandle, null)), _LowerHandleFocus2 || (_LowerHandleFocus2 = /*#__PURE__*/React__default.createElement(LowerHandleFocus, null))) : undefined)) : null, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__track\"),\n        ref: node => {\n          this.track = node;\n        }\n      }), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"\".concat(prefix, \"--slider__filled-track\"),\n        ref: this.filledTrackRef\n      })), /*#__PURE__*/React__default.createElement(Text, {\n        className: \"\".concat(prefix, \"--slider__range-label\")\n      }, formatLabel(max, maxLabel)), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: upperInputWrapperClasses\n      }, /*#__PURE__*/React__default.createElement(\"input\", {\n        type: hideTextInput ? 'hidden' : inputType,\n        id: \"\".concat(id, \"-\").concat(twoHandles ? 'upper-' : '', \"input-for-slider\"),\n        name: twoHandles ? nameUpper : name,\n        className: upperInputClasses,\n        value: twoHandles ? valueUpper : value,\n        \"aria-labelledby\": !ariaLabelInput && !twoHandles ? labelId : undefined,\n        \"aria-label\": twoHandles ? ariaLabelInputUpper : ariaLabelInput ? ariaLabelInput : undefined,\n        disabled: disabled,\n        required: required,\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        onKeyDown: this.onInputKeyDown,\n        onKeyUp: this.props.onInputKeyUp,\n        \"data-invalid\": (twoHandles ? !isValidUpper : !isValid) && !readOnly ? true : null,\n        \"data-handle-position\": twoHandles ? HandlePosition.UPPER : null,\n        \"aria-invalid\": (twoHandles ? !isValidUpper : !isValid) && !readOnly ? true : undefined,\n        readOnly: readOnly\n      }), !readOnly && (twoHandles ? !isValidUpper : !isValid) && /*#__PURE__*/React__default.createElement(WarningFilled, {\n        className: \"\".concat(prefix, \"--slider__invalid-icon\")\n      }), showWarningUpper && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n        className: \"\".concat(prefix, \"--slider__invalid-icon \").concat(prefix, \"--slider__invalid-icon--warning\")\n      }))), !readOnly && (!isValid || !isValidUpper) && /*#__PURE__*/React__default.createElement(Text, {\n        as: \"div\",\n        className: cx(\"\".concat(prefix, \"--slider__validation-msg\"), \"\".concat(prefix, \"--slider__validation-msg--invalid\"), \"\".concat(prefix, \"--form-requirement\"))\n      }, invalidText), !readOnly && warn && isValid && isValidUpper && /*#__PURE__*/React__default.createElement(Text, {\n        as: \"div\",\n        className: cx(\"\".concat(prefix, \"--slider__validation-msg\"), \"\".concat(prefix, \"--form-requirement\"))\n      }, warnText), correctedValue && /*#__PURE__*/React__default.createElement(Text, {\n        as: \"div\",\n        role: \"alert\",\n        className: cx(\"\".concat(prefix, \"--slider__status-msg\"), \"\".concat(prefix, \"--form-requirement\"))\n      }, t(translationIds.autoCorrectAnnouncement, {\n        correctedValue\n      })));\n    });\n  }\n}\n_defineProperty(Slider, \"propTypes\", {\n  /**\n   * The `ariaLabel` for the `<input>`.\n   */\n  ariaLabelInput: PropTypes.string,\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class name for the slider.\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to disable this slider.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The callback to format the label associated with the minimum/maximum value.\n   */\n  formatLabel: PropTypes.func,\n  /**\n   * `true` to hide the number input box.\n   */\n  hideTextInput: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  inputType: PropTypes.string,\n  /**\n   * `Specify whether the Slider is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Slider is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * The label for the slider.\n   */\n  labelText: PropTypes.node,\n  /**\n   * `true` to use the light version.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Slider` is no longer needed and has ' + 'been deprecated in v11 in favor of the new `Layer` component. It will be moved in the next major release.'),\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number.isRequired,\n  /**\n   * The label associated with the maximum value.\n   */\n  maxLabel: PropTypes.string,\n  /**\n   * The minimum value.\n   */\n  min: PropTypes.number.isRequired,\n  /**\n   * The label associated with the minimum value.\n   */\n  minLabel: PropTypes.string,\n  /**\n   * The `name` attribute of the `<input>`.\n   */\n  name: PropTypes.string,\n  /**\n   * Provide an optional function to be called when the input element\n   * loses focus\n   */\n  onBlur: PropTypes.func,\n  /**\n   * The callback to get notified of change in value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide an optional function to be called when a key is pressed in the number input\n   */\n  onInputKeyUp: PropTypes.func,\n  /**\n   * The callback to get notified of value on handle release.\n   */\n  onRelease: PropTypes.func,\n  /**\n   * Whether the slider should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * `true` to specify if the control is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * A value determining how much the value should increase/decrease by moving the thumb by mouse. If a value other than 1 is provided and the input is *not* hidden, the new step requirement should be added to a visible label. Values outside the `step` increment will be considered invalid.\n   */\n  step: PropTypes.number,\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepMultiplier`.\n   */\n  stepMultiplier: PropTypes.number,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationIds` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func,\n  /**\n   * The `ariaLabel` for the upper bound `<input>` when there are two handles.\n   */\n  unstable_ariaLabelInputUpper: PropTypes.string,\n  /**\n   * The `name` attribute of the upper bound `<input>` when there are two handles.\n   */\n  unstable_nameUpper: PropTypes.string,\n  /**\n   * The upper bound when there are two handles.\n   */\n  unstable_valueUpper: PropTypes.number,\n  /**\n   * The value of the slider. When there are two handles, value is the lower\n   * bound.\n   */\n  value: PropTypes.number.isRequired,\n  /**\n   * `Specify whether the Slider is in a warn state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Slider is in a warn state\n   */\n  warnText: PropTypes.node\n});\n_defineProperty(Slider, \"contextType\", FeatureFlagContext);\nSlider.translationIds = Object.values(translationIds);\nexport { Slider as default };","map":{"version":3,"names":["defineProperty","_defineProperty","extends","_extends","React__default","PureComponent","PropTypes","cx","throttle","ArrowDown","ArrowLeft","ArrowUp","ArrowRight","Enter","PrefixContext","deprecate","FeatureFlagContext","WarningFilled","WarningAltFilled","Tooltip","LowerHandle","LowerHandleFocus","UpperHandle","UpperHandleFocus","matches","Text","_LowerHandle","_LowerHandleFocus","_UpperHandle","_UpperHandleFocus","_UpperHandle2","_UpperHandleFocus2","_LowerHandle2","_LowerHandleFocus2","ThumbWrapper","_ref","hasTooltip","className","style","children","rest","createElement","propTypes","node","string","bool","isRequired","object","translationIds","autoCorrectAnnouncement","translateWithId","translationId","translationState","correctedValue","concat","defaultFormatLabel","value","label","EVENT_THROTTLE","DRAG_EVENT_TYPES","Set","DRAG_STOP_EVENT_TYPES","HandlePosition","Slider","constructor","props","_this","valueUpper","unstable_valueUpper","left","leftUpper","needsOnRelease","isValid","isValidUpper","activeHandle","correctedPosition","isRtl","evt","disabled","readOnly","preventDefault","forEach","element","_this$element","ownerDocument","addEventListener","onDragStop","_this$element2","onDrag","clientX","getClientXFromEvent","hasTwoHandles","target","thumbRef","current","LOWER","thumbRefUpper","UPPER","distanceToLower","calcDistanceToHandle","distanceToUpper","focusOptions","preventScroll","focus","setState","_this$element3","removeEventListener","_this$element4","_activeHandle","arguments","length","undefined","state","calcValue","setValueLeftForHandle","nearestStepValue","_onDrag","leading","trailing","step","stepMultiplier","delta","shiftKey","currentValue","calcValueForDelta","_evt$target$dataset$h","dataset","handlePosition","targetValue","Number","parseFloat","isNaN","setValueForHandle","isValidValueForPosition","handle","min","max","processNewInputValue","isValidValue","_this$props$onBlur","_this$props","_evt$target","onBlur","call","input","_input$dataset","validity","adjustedValue","getAdjustedValueForPosition","getAdjustedValue","toString","useRawValue","_ref2","_this$element5","_this$element5$getBou","range","boundingRect","getBoundingClientRect","width","right","_boundingRect$right","_boundingRect$left","leftOffset","_ref3","leftPercent","totalSteps","steppedValue","Math","round","steppedPercent","clamp","_ref4","calcLeftPercent","calcSteppedValuePercent","handleBoundingRect","getHandleBoundingRect","handleX","abs","floor","_ref5","newValue","newLeft","_ref6","_ref7","_ref8","_ref9","_boundingRect","_this$thumbRef","_this$thumbRefUpper","DOMRect","createRef","filledTrackRef","componentDidMount","_document","document","dir","componentDidUpdate","prevProps","prevState","transform","onChange","onRelease","val","tempInput","type","event","touches","getDerivedStateFromProps","derivedState","invalid","Object","entries","render","ariaLabelInput","unstable_ariaLabelInputUpper","ariaLabelInputUpper","hideTextInput","id","inputId","random","substr","minLabel","maxLabel","formatLabel","labelText","_stepMultiplier","inputType","invalidText","required","name","unstable_nameUpper","nameUpper","light","warn","warnText","t","other","twoHandles","showWarning","showWarningUpper","Consumer","prefix","labelId","labelClasses","containerClasses","sliderClasses","fixedInputClasses","conditionalInputClasses","lowerInputClasses","upperInputClasses","lowerInputWrapperClasses","upperInputWrapperClasses","lowerThumbClasses","upperThumbClasses","lowerThumbWrapperClasses","upperThumbWrapperClasses","lowerThumbWrapperProps","insetInlineStart","upperThumbWrapperProps","as","htmlFor","onKeyUp","onInputKeyUp","onKeyDown","onInputKeyDown","ref","onMouseDown","onDragStart","onTouchStart","role","tabIndex","align","onFocus","Fragment","track","func","number","values","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Slider/Slider.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { defineProperty as _defineProperty, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React__default, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport throttle from 'lodash.throttle';\nimport { ArrowDown, ArrowLeft, ArrowUp, ArrowRight, Enter } from '../../internal/keyboard/keys.js';\nimport { PrefixContext } from '../../internal/usePrefix.js';\nimport deprecate from '../../prop-types/deprecate.js';\nimport { FeatureFlagContext } from '../FeatureFlags/index.js';\nimport { WarningFilled, WarningAltFilled } from '@carbon/icons-react';\nimport '../Text/index.js';\nimport '../Tooltip/DefinitionTooltip.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { LowerHandle, LowerHandleFocus, UpperHandle, UpperHandleFocus } from './SliderHandles.js';\nimport { matches } from '../../internal/keyboard/match.js';\nimport { Text } from '../Text/Text.js';\n\nvar _LowerHandle, _LowerHandleFocus, _UpperHandle, _UpperHandleFocus, _UpperHandle2, _UpperHandleFocus2, _LowerHandle2, _LowerHandleFocus2;\nconst ThumbWrapper = _ref => {\n  let {\n    hasTooltip = false,\n    className,\n    style,\n    children,\n    ...rest\n  } = _ref;\n  if (hasTooltip) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/forbid-component-props\n      React__default.createElement(Tooltip, _extends({\n        className: className,\n        style: style\n      }, rest), children)\n    );\n  } else {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/forbid-dom-props\n      React__default.createElement(\"div\", {\n        className: className,\n        style: style\n      }, children)\n    );\n  }\n};\nThumbWrapper.propTypes = {\n  /**\n   * The thumb node itself.\n   */\n  children: PropTypes.node,\n  /**\n   * CSS wrapper class names.\n   */\n  className: PropTypes.string,\n  /**\n   * Should the thumb show a tooltip with the current value?\n   */\n  hasTooltip: PropTypes.bool.isRequired,\n  /**\n   * Percentage offset for the select thumb value.\n   */\n  style: PropTypes.object\n};\nconst translationIds = {\n  autoCorrectAnnouncement: 'carbon.slider.auto-correct-announcement'\n};\n\n/**\n * Message ids that will be passed to translateWithId().\n */\n\nfunction translateWithId(translationId, translationState) {\n  if (translationState?.correctedValue) {\n    const {\n      correctedValue\n    } = translationState;\n    return `The inputted value \"${correctedValue}\" was corrected to the nearest allowed digit.`;\n  }\n  return '';\n}\nconst defaultFormatLabel = (value, label) => {\n  return typeof label === 'function' ? label(value) : `${value}${label}`;\n};\n\n/**\n * Minimum time between processed \"drag\" events.\n */\nconst EVENT_THROTTLE = 16; // ms\n\n/**\n * Event types that trigger \"drags\".\n */\nconst DRAG_EVENT_TYPES = new Set(['mousemove', 'touchmove']);\n\n/**\n * Event types that trigger a \"drag\" to stop.\n */\nconst DRAG_STOP_EVENT_TYPES = new Set(['mouseup', 'touchend', 'touchcancel']);\n\n/**\n * Distinguish two handles by lower and upper positions.\n */\nvar HandlePosition = /*#__PURE__*/function (HandlePosition) {\n  HandlePosition[\"LOWER\"] = \"lower\";\n  HandlePosition[\"UPPER\"] = \"upper\";\n  return HandlePosition;\n}(HandlePosition || {});\nclass Slider extends PureComponent {\n  constructor(props) {\n    var _this;\n    super(props);\n    _this = this;\n    _defineProperty(this, \"state\", {\n      value: this.props.value,\n      valueUpper: this.props.unstable_valueUpper,\n      left: 0,\n      leftUpper: 0,\n      needsOnRelease: false,\n      isValid: true,\n      isValidUpper: true,\n      activeHandle: null,\n      correctedValue: null,\n      correctedPosition: null,\n      isRtl: false\n    });\n    _defineProperty(this, \"thumbRef\", void 0);\n    _defineProperty(this, \"thumbRefUpper\", void 0);\n    _defineProperty(this, \"filledTrackRef\", void 0);\n    _defineProperty(this, \"element\", null);\n    _defineProperty(this, \"inputId\", '');\n    _defineProperty(this, \"track\", void 0);\n    /**\n     * Sets up \"drag\" event handlers and calls `this.onDrag` in case dragging\n     * started on somewhere other than the thumb without a corresponding \"move\"\n     * event.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onDragStart\", evt => {\n      // Do nothing if component is disabled\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // We're going to force focus on one of the handles later on here, b/c we're\n      // firing on a mousedown event, we need to call event.preventDefault() to\n      // keep the focus from leaving the HTMLElement.\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#notes\n      evt.preventDefault();\n\n      // Register drag stop handlers\n      DRAG_STOP_EVENT_TYPES.forEach(element => {\n        this.element?.ownerDocument.addEventListener(element, this.onDragStop);\n      });\n\n      // Register drag handlers\n      DRAG_EVENT_TYPES.forEach(element => {\n        this.element?.ownerDocument.addEventListener(element, this.onDrag);\n      });\n      const clientX = this.getClientXFromEvent(evt);\n      let activeHandle;\n      if (this.hasTwoHandles()) {\n        if (evt.target == this.thumbRef.current) {\n          activeHandle = HandlePosition.LOWER;\n        } else if (evt.target == this.thumbRefUpper.current) {\n          activeHandle = HandlePosition.UPPER;\n        } else {\n          const distanceToLower = this.calcDistanceToHandle(HandlePosition.LOWER, clientX);\n          const distanceToUpper = this.calcDistanceToHandle(HandlePosition.UPPER, clientX);\n          if (distanceToLower <= distanceToUpper) {\n            activeHandle = HandlePosition.LOWER;\n          } else {\n            activeHandle = HandlePosition.UPPER;\n          }\n        }\n      }\n\n      // Force focus to the appropriate handle.\n      const focusOptions = {\n        preventScroll: true\n      };\n      if (this.hasTwoHandles()) {\n        if (this.thumbRef.current && activeHandle === HandlePosition.LOWER) {\n          this.thumbRef.current.focus(focusOptions);\n        } else if (this.thumbRefUpper.current && activeHandle === HandlePosition.UPPER) {\n          this.thumbRefUpper.current.focus(focusOptions);\n        }\n      } else if (this.thumbRef.current) {\n        this.thumbRef.current.focus(focusOptions);\n      }\n      this.setState({\n        activeHandle\n      });\n\n      // Perform first recalculation since we probably didn't click exactly in the\n      // middle of the thumb.\n      this.onDrag(evt, activeHandle);\n    });\n    /**\n     * Unregisters \"drag\" and \"drag stop\" event handlers and calls sets the flag\n     * indicating that the `onRelease` callback should be called.\n     */\n    _defineProperty(this, \"onDragStop\", () => {\n      // Do nothing if component is disabled\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // Remove drag stop handlers\n      DRAG_STOP_EVENT_TYPES.forEach(element => {\n        this.element?.ownerDocument.removeEventListener(element, this.onDragStop);\n      });\n\n      // Remove drag handlers\n      DRAG_EVENT_TYPES.forEach(element => {\n        this.element?.ownerDocument.removeEventListener(element, this.onDrag);\n      });\n\n      // Set needsOnRelease flag so event fires on next update.\n      this.setState({\n        needsOnRelease: true,\n        isValid: true,\n        isValidUpper: true\n      });\n    });\n    /**\n     * Handles a \"drag\" event by recalculating the value/thumb and setting state\n     * accordingly.\n     *\n     * @param {Event} evt The event.\n     * @param activeHandle\n     *   The first drag event call, we may have an explicit activeHandle value,\n     *   which is to be used before state is used.\n     */\n    _defineProperty(this, \"_onDrag\", function (evt) {\n      let activeHandle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      activeHandle = activeHandle ?? _this.state.activeHandle;\n      // Do nothing if component is disabled, or we have no event.\n      if (_this.props.disabled || _this.props.readOnly || !evt) {\n        return;\n      }\n      const clientX = _this.getClientXFromEvent(evt);\n      const {\n        value,\n        left\n      } = _this.calcValue({\n        clientX,\n        value: _this.state.value\n      });\n      // If we're set to two handles, negotiate which drag handle is closest to\n      // the users' interaction.\n      if (_this.hasTwoHandles() && activeHandle) {\n        _this.setValueLeftForHandle(activeHandle, {\n          value: _this.nearestStepValue(value),\n          left\n        });\n      } else {\n        _this.setState({\n          value: _this.nearestStepValue(value),\n          left,\n          isValid: true\n        });\n      }\n      _this.setState({\n        correctedValue: null,\n        correctedPosition: null\n      });\n    });\n    /**\n     * Throttles calls to `this._onDrag` by limiting events to being processed at\n     * most once every `EVENT_THROTTLE` milliseconds.\n     */\n    _defineProperty(this, \"onDrag\", throttle(this._onDrag, EVENT_THROTTLE, {\n      leading: true,\n      trailing: false\n    }));\n    /**\n     * Handles a `keydown` event by recalculating the value/thumb and setting\n     * state accordingly.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onKeyDown\", evt => {\n      // Do nothing if component is disabled, or we don't have a valid event\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n      const {\n        step = 1,\n        stepMultiplier = 4\n      } = this.props;\n      let delta = 0;\n      if (matches(evt, [ArrowDown, ArrowLeft])) {\n        delta = -step;\n      } else if (matches(evt, [ArrowUp, ArrowRight])) {\n        delta = step;\n      } else {\n        // Ignore keys we don't want to handle\n        return;\n      }\n\n      // If shift was held, account for the stepMultiplier\n      if (evt.shiftKey) {\n        delta *= stepMultiplier;\n      }\n      if (this.hasTwoHandles() && this.state.activeHandle) {\n        const currentValue = this.state.activeHandle === HandlePosition.LOWER ? this.state.value : this.state.valueUpper;\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: this.calcValueForDelta(currentValue, delta, this.props.step)\n        });\n        this.setValueLeftForHandle(this.state.activeHandle, {\n          value: this.nearestStepValue(value),\n          left\n        });\n      } else {\n        const {\n          value,\n          left\n        } = this.calcValue({\n          // Ensures custom value from `<input>` won't cause skipping next stepping\n          // point with right arrow key, e.g. Typing 51 in `<input>`, moving focus\n          // onto the thumb and the hitting right arrow key should yield 52 instead\n          // of 54.\n          value: this.calcValueForDelta(this.state.value, delta, this.props.step)\n        });\n        this.setState({\n          value: this.nearestStepValue(value),\n          left,\n          isValid: true\n        });\n      }\n      this.setState({\n        correctedValue: null,\n        correctedPosition: null\n      });\n    });\n    /**\n     * Provides the two-way binding for the input field of the Slider. It also\n     * Handles a change to the input field by recalculating the value/thumb and\n     * setting state accordingly.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onChange\", evt => {\n      // Do nothing if component is disabled\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // Do nothing if we have no valid event, target, or value\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n\n      // Avoid calling calcValue for invalid numbers, but still update the state.\n      const activeHandle = evt.target.dataset.handlePosition ?? HandlePosition.LOWER;\n      const targetValue = Number.parseFloat(evt.target.value);\n      if (this.hasTwoHandles()) {\n        if (isNaN(targetValue)) {\n          this.setValueForHandle(activeHandle, evt.target.value);\n        } else if (this.isValidValueForPosition({\n          handle: activeHandle,\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        })) {\n          this.processNewInputValue(evt.target);\n        } else {\n          this.setValueForHandle(activeHandle, targetValue);\n        }\n      } else {\n        if (isNaN(targetValue)) {\n          this.setState({\n            value: evt.target.value\n          });\n        } else if (this.isValidValue({\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        })) {\n          this.processNewInputValue(evt.target);\n        } else {\n          this.setState({\n            value: targetValue\n          });\n        }\n      }\n    });\n    /**\n     * Checks for validity of input value after clicking out of the input. It also\n     * Handles state change to isValid state.\n     *\n     * @param {Event} evt The event.\n     */\n    _defineProperty(this, \"onBlur\", evt => {\n      // Do nothing if we have no valid event, target, or value\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n      const {\n        value: targetValue\n      } = evt.target;\n      this.processNewInputValue(evt.target);\n      this.props.onBlur?.({\n        value: targetValue,\n        handlePosition: evt.target?.dataset?.handlePosition\n      });\n    });\n    _defineProperty(this, \"onInputKeyDown\", evt => {\n      // Do nothing if component is disabled, or we don't have a valid event.\n      if (this.props.disabled || this.props.readOnly) {\n        return;\n      }\n\n      // Do nothing if we have no valid event, target, or value.\n      if (!evt || !('target' in evt) || typeof evt.target.value !== 'string') {\n        return;\n      }\n      if (matches(evt, [Enter])) {\n        this.processNewInputValue(evt.target);\n      }\n    });\n    _defineProperty(this, \"processNewInputValue\", input => {\n      this.setState({\n        correctedValue: null,\n        correctedPosition: null\n      });\n      const targetValue = Number.parseFloat(input.value);\n      const validity = !isNaN(targetValue);\n\n      // When there are two handles, we'll also have the data-handle-position\n      // attribute to consider the other value before settling on the validity to\n      // set.\n      const handlePosition = input?.dataset?.handlePosition;\n      if (handlePosition === HandlePosition.LOWER) {\n        this.setState({\n          isValid: validity\n        });\n      } else if (handlePosition === HandlePosition.UPPER) {\n        this.setState({\n          isValidUpper: validity\n        });\n      }\n      this.setState({\n        isValid: validity\n      });\n      if (validity) {\n        const adjustedValue = handlePosition ? this.getAdjustedValueForPosition({\n          handle: handlePosition,\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        }) : this.getAdjustedValue({\n          value: targetValue,\n          min: this.props.min,\n          max: this.props.max\n        });\n        if (adjustedValue !== targetValue) {\n          this.setState({\n            correctedValue: targetValue.toString(),\n            correctedPosition: handlePosition\n          });\n        } else {\n          this.setState({\n            correctedValue: null,\n            correctedPosition: null\n          });\n        }\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: adjustedValue,\n          useRawValue: true\n        });\n        if (handlePosition) {\n          this.setValueLeftForHandle(handlePosition, {\n            value,\n            left\n          });\n        } else {\n          this.setState({\n            value,\n            left\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"calcLeftPercent\", _ref2 => {\n      let {\n        clientX,\n        value,\n        range\n      } = _ref2;\n      const boundingRect = this.element?.getBoundingClientRect?.();\n      let width = boundingRect ? boundingRect.right - boundingRect.left : 0;\n\n      // Enforce a minimum width of at least 1 for calculations\n      if (width <= 0) {\n        width = 1;\n      }\n\n      // If a clientX is specified, use it to calculate the leftPercent. If not,\n      // use the provided value to calculate it instead.\n      if (clientX) {\n        const leftOffset = this.state.isRtl ? (boundingRect?.right ?? 0) - clientX : clientX - (boundingRect?.left ?? 0);\n        return leftOffset / width;\n      } else if (value !== null && value !== undefined && range) {\n        // Prevent NaN calculation if the range is 0.\n        return range === 0 ? 0 : (value - this.props.min) / range;\n      }\n      // We should never end up in this scenario, but in case we do, and to\n      // re-assure Typescript, return 0.\n      return 0;\n    });\n    _defineProperty(this, \"calcSteppedValuePercent\", _ref3 => {\n      let {\n        leftPercent,\n        range\n      } = _ref3;\n      const {\n        step = 1\n      } = this.props;\n      const totalSteps = range / step;\n      let steppedValue = Math.round(leftPercent * totalSteps) * step;\n      const steppedPercent = this.clamp(steppedValue / range, 0, 1);\n      steppedValue = this.clamp(steppedValue + this.props.min, this.props.min, this.props.max);\n      return [steppedValue, steppedPercent];\n    });\n    /**\n     * Calculates a new Slider `value` and `left` (thumb offset) given a `clientX`,\n     * `value`, or neither of those.\n     * - If `clientX` is specified, it will be used in\n     *   conjunction with the Slider's bounding rectangle to calculate the new\n     *   values.\n     * - If `clientX` is not specified and `value` is, it will be used to\n     *   calculate new values as though it were the current value of the Slider.\n     * - If neither `clientX` nor `value` are specified, `this.props.value` will\n     *   be used to calculate the new values as though it were the current value\n     *   of the Slider.\n     *\n     * @param {object} params\n     * @param {number} [params.clientX] Optional clientX value expected to be from\n     *   an event fired by one of the Slider's `DRAG_EVENT_TYPES` events.\n     * @param {number} [params.value] Optional value use during calculations if\n     *   clientX is not provided.\n     * @param {boolean} [params.useRawValue=false] `true` to use the given value as-is.\n     */\n    _defineProperty(this, \"calcValue\", _ref4 => {\n      let {\n        clientX,\n        value,\n        useRawValue = false\n      } = _ref4;\n      const range = this.props.max - this.props.min;\n\n      // @todo solve for rtl.\n      const leftPercent = this.calcLeftPercent({\n        clientX,\n        value,\n        range\n      });\n      if (useRawValue) {\n        // Adjusts only for min/max of thumb position\n        return {\n          value,\n          left: Math.min(1, Math.max(0, leftPercent)) * 100\n        };\n      }\n      const [steppedValue, steppedPercent] = this.calcSteppedValuePercent({\n        leftPercent,\n        range\n      });\n      return {\n        value: steppedValue,\n        left: steppedPercent * 100\n      };\n    });\n    _defineProperty(this, \"calcDistanceToHandle\", (handle, clientX) => {\n      const handleBoundingRect = this.getHandleBoundingRect(handle);\n      // x co-ordinate of the midpoint.\n      const handleX = handleBoundingRect.left + handleBoundingRect.width / 2;\n      return Math.abs(handleX - clientX);\n    });\n    /**\n     * Given the current value, delta and step, calculate the new value.\n     *\n     * @param {number} currentValue\n     *   Current value user is moving from.\n     * @param {number} delta\n     *   Movement from the current value. Can be positive or negative.\n     * @param {number} step\n     *   A value determining how much the value should increase/decrease by moving\n     *   the thumb by mouse.\n     */\n    _defineProperty(this, \"calcValueForDelta\", function (currentValue, delta) {\n      let step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return (delta > 0 ? Math.floor(currentValue / step) * step : currentValue) + delta;\n    });\n    /**\n     * Sets state relevant to the given handle position.\n     *\n     * Guards against setting either lower or upper values beyond its counterpart.\n     */\n    _defineProperty(this, \"setValueLeftForHandle\", (handle, _ref5) => {\n      let {\n        value: newValue,\n        left: newLeft\n      } = _ref5;\n      const {\n        value,\n        valueUpper,\n        left,\n        leftUpper\n      } = this.state;\n      if (handle === HandlePosition.LOWER) {\n        // Don't allow higher than the upper handle.\n        this.setState({\n          value: valueUpper && newValue > valueUpper ? valueUpper : newValue,\n          left: valueUpper && newValue > valueUpper ? leftUpper : newLeft,\n          isValid: true\n        });\n      } else {\n        this.setState({\n          valueUpper: value && newValue < value ? value : newValue,\n          leftUpper: value && newValue < value ? left : newLeft,\n          isValidUpper: true\n        });\n      }\n    });\n    _defineProperty(this, \"setValueForHandle\", (handle, value) => {\n      if (handle === HandlePosition.LOWER) {\n        this.setState({\n          value,\n          isValid: true\n        });\n      } else {\n        this.setState({\n          valueUpper: value,\n          isValidUpper: true\n        });\n      }\n    });\n    _defineProperty(this, \"isValidValueForPosition\", _ref6 => {\n      let {\n        handle,\n        value: newValue,\n        min,\n        max\n      } = _ref6;\n      const {\n        value,\n        valueUpper\n      } = this.state;\n      if (!this.isValidValue({\n        value: newValue,\n        min,\n        max\n      })) {\n        return false;\n      }\n      if (handle === HandlePosition.LOWER) {\n        return !valueUpper || newValue <= valueUpper;\n      } else if (handle === HandlePosition.UPPER) {\n        return !value || newValue >= value;\n      }\n      return false;\n    });\n    _defineProperty(this, \"isValidValue\", _ref7 => {\n      let {\n        value,\n        min,\n        max\n      } = _ref7;\n      return !(value < min || value > max);\n    });\n    _defineProperty(this, \"getAdjustedValueForPosition\", _ref8 => {\n      let {\n        handle,\n        value: newValue,\n        min,\n        max\n      } = _ref8;\n      const {\n        value,\n        valueUpper\n      } = this.state;\n      newValue = this.getAdjustedValue({\n        value: newValue,\n        min,\n        max\n      });\n\n      // Next adjust to the opposite handle.\n      if (handle === HandlePosition.LOWER && valueUpper) {\n        newValue = newValue > valueUpper ? valueUpper : newValue;\n      } else if (handle === HandlePosition.UPPER && value) {\n        newValue = newValue < value ? value : newValue;\n      }\n      return newValue;\n    });\n    _defineProperty(this, \"getAdjustedValue\", _ref9 => {\n      let {\n        value,\n        min,\n        max\n      } = _ref9;\n      if (value < min) {\n        value = min;\n      }\n      if (value > max) {\n        value = max;\n      }\n      return value;\n    });\n    /**\n     * Get the bounding rect for the requested handles' DOM element.\n     *\n     * If the bounding rect is not available, a new, empty DOMRect is returned.\n     */\n    _defineProperty(this, \"getHandleBoundingRect\", handle => {\n      let boundingRect;\n      if (handle === HandlePosition.LOWER) {\n        boundingRect = this?.thumbRef?.current?.getBoundingClientRect();\n      } else {\n        boundingRect = this?.thumbRefUpper?.current?.getBoundingClientRect();\n      }\n      return boundingRect ?? new DOMRect();\n    });\n    this.thumbRef = /*#__PURE__*/React__default.createRef();\n    this.thumbRefUpper = /*#__PURE__*/React__default.createRef();\n    this.filledTrackRef = /*#__PURE__*/React__default.createRef();\n  }\n\n  /**\n   * Sets up initial slider position and value in response to component mount.\n   */\n  componentDidMount() {\n    if (this.element) {\n      const isRtl = document?.dir === 'rtl';\n      if (this.hasTwoHandles()) {\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: this.state.value,\n          useRawValue: true\n        });\n        const {\n          value: valueUpper,\n          left: leftUpper\n        } = this.calcValue({\n          value: this.state.valueUpper,\n          useRawValue: true\n        });\n        this.setState({\n          isRtl,\n          value,\n          left,\n          valueUpper,\n          leftUpper\n        });\n      } else {\n        const {\n          value,\n          left\n        } = this.calcValue({\n          value: this.state.value,\n          useRawValue: true\n        });\n        this.setState({\n          isRtl,\n          value,\n          left\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles firing of `onChange` and `onRelease` callbacks to parent in\n   * response to state changes.\n   *\n   * @param {*} prevProps prevProps\n   * @param {*} prevState The previous Slider state, used to see if callbacks\n   * should be called.\n   */\n  componentDidUpdate(prevProps, prevState) {\n    // Fire onChange event handler if present, if there's a usable value, and\n    // if the value is different from the last one\n    if (this.hasTwoHandles()) {\n      if (this.filledTrackRef.current) {\n        this.filledTrackRef.current.style.transform = this.state.isRtl ? `translate(${100 - this.state.leftUpper}%, -50%) scaleX(${(this.state.leftUpper - this.state.left) / 100})` : `translate(${this.state.left}%, -50%) scaleX(${(this.state.leftUpper - this.state.left) / 100})`;\n      }\n    } else {\n      if (this.filledTrackRef.current) {\n        this.filledTrackRef.current.style.transform = this.state.isRtl ? `translate(100%, -50%) scaleX(-${this.state.left / 100})` : `translate(0%, -50%) scaleX(${this.state.left / 100})`;\n      }\n    }\n    if ((prevState.value !== this.state.value || prevState.valueUpper !== this.state.valueUpper) && typeof this.props.onChange === 'function') {\n      this.props.onChange({\n        value: this.state.value,\n        valueUpper: this.state.valueUpper\n      });\n    }\n\n    // Fire onRelease event handler if present and if needed\n    if (this.state.needsOnRelease && typeof this.props.onRelease === 'function') {\n      this.props.onRelease({\n        value: this.state.value,\n        valueUpper: this.state.valueUpper\n      });\n      // Reset the flag\n      this.setState({\n        needsOnRelease: false\n      });\n    }\n\n    // If value from props does not change, do nothing here.\n    // Otherwise, do prop -> state sync without \"value capping\".\n    if (prevProps.value === this.props.value && prevProps.unstable_valueUpper === this.props.unstable_valueUpper && prevProps.max === this.props.max && prevProps.min === this.props.min) {\n      return;\n    }\n    this.setState(this.calcValue({\n      value: this.props.value,\n      useRawValue: true\n    }));\n    if (this.props.unstable_valueUpper !== undefined) {\n      const {\n        value: valueUpper,\n        left: leftUpper\n      } = this.calcValue({\n        value: this.props.unstable_valueUpper,\n        useRawValue: true\n      });\n      this.setState({\n        valueUpper,\n        leftUpper\n      });\n    } else {\n      this.setState({\n        valueUpper: undefined,\n        leftUpper: undefined\n      });\n    }\n  }\n\n  /**\n   * Synonymous to ECMA2017+ `Math.clamp`.\n   *\n   * @param {number} val\n   * @param {number} min\n   * @param {number} max\n   *\n   * @returns `val` if `max>=val>=min`; `min` if `val<min`; `max` if `val>max`.\n   */\n  clamp(val, min, max) {\n    return Math.max(min, Math.min(val, max));\n  }\n\n  /**\n   * Takes a value and ensures it fits to the steps of the range\n   * @param value\n   * @returns value of the nearest step\n   */\n  nearestStepValue(value) {\n    const tempInput = document.createElement('input');\n    tempInput.type = 'range';\n    tempInput.min = `${this.props.min}`;\n    tempInput.max = `${this.props.max}`;\n    tempInput.step = `${this.props.step}`;\n    tempInput.value = `${value}`;\n    return parseFloat(tempInput.value);\n  }\n  getClientXFromEvent(event) {\n    let clientX;\n    if ('clientX' in event) {\n      clientX = event.clientX;\n    } else if ('touches' in event && 0 in event.touches && 'clientX' in event.touches[0]) {\n      clientX = event.touches[0].clientX;\n    }\n    return clientX;\n  }\n  hasTwoHandles() {\n    return this.state.valueUpper !== undefined;\n  }\n\n  // syncs invalid state and prop\n  static getDerivedStateFromProps(props, state) {\n    const {\n      isValid,\n      isValidUpper\n    } = state;\n    let derivedState = {};\n\n    // Will override state in favor of invalid prop\n    if (props.invalid === true) {\n      if (isValid === true) {\n        derivedState = {\n          ...derivedState,\n          isValid: false\n        };\n      }\n      if (isValid === true) {\n        derivedState = {\n          ...derivedState,\n          isValid: false\n        };\n      }\n      if (isValidUpper === true) {\n        derivedState = {\n          ...derivedState,\n          isValidUpper: false\n        };\n      }\n    } else if (props.invalid === false) {\n      if (isValid === false) {\n        derivedState = {\n          ...derivedState,\n          isValid: true\n        };\n      }\n      if (isValid === false) {\n        derivedState = {\n          ...derivedState,\n          isValid: true\n        };\n      }\n      if (isValidUpper === false) {\n        derivedState = {\n          ...derivedState,\n          isValidUpper: true\n        };\n      }\n    }\n    return Object.entries(derivedState).length > 0 ? derivedState : null;\n  }\n  render() {\n    const {\n      ariaLabelInput,\n      unstable_ariaLabelInputUpper: ariaLabelInputUpper,\n      className,\n      hideTextInput = false,\n      id = this.inputId = this.inputId || `__carbon-slider_${Math.random().toString(36).substr(2)}`,\n      min,\n      minLabel = '',\n      max,\n      maxLabel = '',\n      formatLabel = defaultFormatLabel,\n      labelText,\n      step = 1,\n      stepMultiplier: _stepMultiplier,\n      inputType = 'number',\n      invalidText,\n      required,\n      disabled = false,\n      name,\n      unstable_nameUpper: nameUpper,\n      light,\n      readOnly = false,\n      warn,\n      warnText,\n      translateWithId: t = translateWithId,\n      ...other\n    } = this.props;\n    const twoHandles = this.hasTwoHandles();\n    delete other.onRelease;\n    delete other.invalid;\n    delete other.unstable_valueUpper;\n    const {\n      value,\n      valueUpper,\n      isValid,\n      isValidUpper,\n      correctedValue,\n      correctedPosition,\n      isRtl\n    } = this.state;\n    const showWarning = !readOnly && warn || typeof correctedValue !== null && correctedPosition === HandlePosition.LOWER && isValid;\n    const showWarningUpper = !readOnly && warn || typeof correctedValue !== null && correctedPosition === (twoHandles ? HandlePosition.UPPER : HandlePosition.LOWER) && (twoHandles ? isValidUpper : isValid);\n    return /*#__PURE__*/React__default.createElement(PrefixContext.Consumer, null, prefix => {\n      const labelId = `${id}-label`;\n      const labelClasses = cx(`${prefix}--label`, {\n        [`${prefix}--label--disabled`]: disabled\n      });\n      const containerClasses = cx(`${prefix}--slider-container`, {\n        [`${prefix}--slider-container--two-handles`]: twoHandles,\n        [`${prefix}--slider-container--disabled`]: disabled,\n        [`${prefix}--slider-container--readonly`]: readOnly,\n        [`${prefix}--slider-container--rtl`]: isRtl\n      });\n      const sliderClasses = cx(`${prefix}--slider`, {\n        [`${prefix}--slider--disabled`]: disabled,\n        [`${prefix}--slider--readonly`]: readOnly\n      });\n      const fixedInputClasses = [`${prefix}--text-input`, `${prefix}--slider-text-input`];\n      const conditionalInputClasses = {\n        [`${prefix}--text-input--light`]: light\n      };\n      const lowerInputClasses = cx([...fixedInputClasses, `${prefix}--slider-text-input--lower`, conditionalInputClasses, {\n        [`${prefix}--text-input--invalid`]: !readOnly && !isValid,\n        [`${prefix}--slider-text-input--warn`]: showWarning\n      }]);\n      const upperInputClasses = cx([...fixedInputClasses, `${prefix}--slider-text-input--upper`, conditionalInputClasses, {\n        [`${prefix}--text-input--invalid`]: !readOnly && (twoHandles ? !isValidUpper : !isValid),\n        [`${prefix}--slider-text-input--warn`]: showWarningUpper\n      }]);\n      const lowerInputWrapperClasses = cx([`${prefix}--text-input-wrapper`, `${prefix}--slider-text-input-wrapper`, `${prefix}--slider-text-input-wrapper--lower`, {\n        [`${prefix}--text-input-wrapper--readonly`]: readOnly,\n        [`${prefix}--slider-text-input-wrapper--hidden`]: hideTextInput\n      }]);\n      const upperInputWrapperClasses = cx([`${prefix}--text-input-wrapper`, `${prefix}--slider-text-input-wrapper`, `${prefix}--slider-text-input-wrapper--upper`, {\n        [`${prefix}--text-input-wrapper--readonly`]: readOnly,\n        [`${prefix}--slider-text-input-wrapper--hidden`]: hideTextInput\n      }]);\n      const lowerThumbClasses = cx(`${prefix}--slider__thumb`, {\n        [`${prefix}--slider__thumb--lower`]: twoHandles\n      });\n      const upperThumbClasses = cx(`${prefix}--slider__thumb`, {\n        [`${prefix}--slider__thumb--upper`]: twoHandles\n      });\n      const lowerThumbWrapperClasses = cx([`${prefix}--icon-tooltip`, `${prefix}--slider__thumb-wrapper`, {\n        [`${prefix}--slider__thumb-wrapper--lower`]: twoHandles\n      }]);\n      const upperThumbWrapperClasses = cx([`${prefix}--icon-tooltip`, `${prefix}--slider__thumb-wrapper`, {\n        [`${prefix}--slider__thumb-wrapper--upper`]: twoHandles\n      }]);\n      const lowerThumbWrapperProps = {\n        style: {\n          insetInlineStart: `${this.state.left}%`\n        }\n      };\n      const upperThumbWrapperProps = {\n        style: {\n          insetInlineStart: `${this.state.leftUpper}%`\n        }\n      };\n      return /*#__PURE__*/React__default.createElement(\"div\", {\n        className: cx(`${prefix}--form-item`, className)\n      }, /*#__PURE__*/React__default.createElement(Text, {\n        as: \"label\",\n        htmlFor: twoHandles ? undefined : id,\n        className: labelClasses,\n        id: labelId\n      }, labelText), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: containerClasses\n      }, twoHandles ? /*#__PURE__*/React__default.createElement(\"div\", {\n        className: lowerInputWrapperClasses\n      }, /*#__PURE__*/React__default.createElement(\"input\", {\n        type: hideTextInput ? 'hidden' : inputType,\n        id: `${id}-lower-input-for-slider`,\n        name: name,\n        className: lowerInputClasses,\n        value: value,\n        \"aria-label\": ariaLabelInput,\n        disabled: disabled,\n        required: required,\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        onKeyUp: this.props.onInputKeyUp,\n        onKeyDown: this.onInputKeyDown,\n        \"data-invalid\": !isValid && !readOnly ? true : null,\n        \"data-handle-position\": HandlePosition.LOWER,\n        \"aria-invalid\": !isValid && !readOnly ? true : undefined,\n        readOnly: readOnly\n      }), !readOnly && !isValid && /*#__PURE__*/React__default.createElement(WarningFilled, {\n        className: `${prefix}--slider__invalid-icon`\n      }), showWarning && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n        className: `${prefix}--slider__invalid-icon ${prefix}--slider__invalid-icon--warning`\n      })) : null, /*#__PURE__*/React__default.createElement(Text, {\n        className: `${prefix}--slider__range-label`\n      }, formatLabel(min, minLabel)), /*#__PURE__*/React__default.createElement(\"div\", _extends({\n        className: sliderClasses,\n        ref: node => {\n          this.element = node;\n        },\n        onMouseDown: this.onDragStart,\n        onTouchStart: this.onDragStart,\n        onKeyDown: this.onKeyDown,\n        role: \"presentation\",\n        tabIndex: -1,\n        \"data-invalid\": (twoHandles ? !isValid || !isValidUpper : !isValid) && !readOnly ? true : null\n      }, other), /*#__PURE__*/React__default.createElement(ThumbWrapper, _extends({\n        hasTooltip: hideTextInput,\n        className: lowerThumbWrapperClasses,\n        label: `${formatLabel(value, '')}`,\n        align: \"top\"\n      }, lowerThumbWrapperProps), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: lowerThumbClasses,\n        role: \"slider\",\n        id: twoHandles ? undefined : id,\n        tabIndex: !readOnly ? 0 : -1,\n        \"aria-valuetext\": `${formatLabel(value, '')}`,\n        \"aria-valuemax\": twoHandles ? valueUpper : max,\n        \"aria-valuemin\": min,\n        \"aria-valuenow\": value,\n        \"aria-labelledby\": twoHandles ? undefined : labelId,\n        \"aria-label\": twoHandles ? ariaLabelInput : undefined,\n        ref: this.thumbRef,\n        onFocus: () => this.setState({\n          activeHandle: HandlePosition.LOWER\n        })\n      }, twoHandles && !isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _LowerHandle || (_LowerHandle = /*#__PURE__*/React__default.createElement(LowerHandle, null)), _LowerHandleFocus || (_LowerHandleFocus = /*#__PURE__*/React__default.createElement(LowerHandleFocus, null))) : twoHandles && isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _UpperHandle || (_UpperHandle = /*#__PURE__*/React__default.createElement(UpperHandle, null)), _UpperHandleFocus || (_UpperHandleFocus = /*#__PURE__*/React__default.createElement(UpperHandleFocus, null))) : undefined)), twoHandles ? /*#__PURE__*/React__default.createElement(ThumbWrapper, _extends({\n        hasTooltip: hideTextInput,\n        className: upperThumbWrapperClasses,\n        label: `${formatLabel(valueUpper || 0, '')}`,\n        align: \"top\"\n      }, upperThumbWrapperProps), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: upperThumbClasses,\n        role: \"slider\",\n        tabIndex: !readOnly ? 0 : -1,\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": value,\n        \"aria-valuenow\": valueUpper,\n        \"aria-label\": ariaLabelInputUpper,\n        ref: this.thumbRefUpper,\n        onFocus: () => this.setState({\n          activeHandle: HandlePosition.UPPER\n        })\n      }, twoHandles && !isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _UpperHandle2 || (_UpperHandle2 = /*#__PURE__*/React__default.createElement(UpperHandle, null)), _UpperHandleFocus2 || (_UpperHandleFocus2 = /*#__PURE__*/React__default.createElement(UpperHandleFocus, null))) : twoHandles && isRtl ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, _LowerHandle2 || (_LowerHandle2 = /*#__PURE__*/React__default.createElement(LowerHandle, null)), _LowerHandleFocus2 || (_LowerHandleFocus2 = /*#__PURE__*/React__default.createElement(LowerHandleFocus, null))) : undefined)) : null, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: `${prefix}--slider__track`,\n        ref: node => {\n          this.track = node;\n        }\n      }), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: `${prefix}--slider__filled-track`,\n        ref: this.filledTrackRef\n      })), /*#__PURE__*/React__default.createElement(Text, {\n        className: `${prefix}--slider__range-label`\n      }, formatLabel(max, maxLabel)), /*#__PURE__*/React__default.createElement(\"div\", {\n        className: upperInputWrapperClasses\n      }, /*#__PURE__*/React__default.createElement(\"input\", {\n        type: hideTextInput ? 'hidden' : inputType,\n        id: `${id}-${twoHandles ? 'upper-' : ''}input-for-slider`,\n        name: twoHandles ? nameUpper : name,\n        className: upperInputClasses,\n        value: twoHandles ? valueUpper : value,\n        \"aria-labelledby\": !ariaLabelInput && !twoHandles ? labelId : undefined,\n        \"aria-label\": twoHandles ? ariaLabelInputUpper : ariaLabelInput ? ariaLabelInput : undefined,\n        disabled: disabled,\n        required: required,\n        min: min,\n        max: max,\n        step: step,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        onKeyDown: this.onInputKeyDown,\n        onKeyUp: this.props.onInputKeyUp,\n        \"data-invalid\": (twoHandles ? !isValidUpper : !isValid) && !readOnly ? true : null,\n        \"data-handle-position\": twoHandles ? HandlePosition.UPPER : null,\n        \"aria-invalid\": (twoHandles ? !isValidUpper : !isValid) && !readOnly ? true : undefined,\n        readOnly: readOnly\n      }), !readOnly && (twoHandles ? !isValidUpper : !isValid) && /*#__PURE__*/React__default.createElement(WarningFilled, {\n        className: `${prefix}--slider__invalid-icon`\n      }), showWarningUpper && /*#__PURE__*/React__default.createElement(WarningAltFilled, {\n        className: `${prefix}--slider__invalid-icon ${prefix}--slider__invalid-icon--warning`\n      }))), !readOnly && (!isValid || !isValidUpper) && /*#__PURE__*/React__default.createElement(Text, {\n        as: \"div\",\n        className: cx(`${prefix}--slider__validation-msg`, `${prefix}--slider__validation-msg--invalid`, `${prefix}--form-requirement`)\n      }, invalidText), !readOnly && warn && isValid && isValidUpper && /*#__PURE__*/React__default.createElement(Text, {\n        as: \"div\",\n        className: cx(`${prefix}--slider__validation-msg`, `${prefix}--form-requirement`)\n      }, warnText), correctedValue && /*#__PURE__*/React__default.createElement(Text, {\n        as: \"div\",\n        role: \"alert\",\n        className: cx(`${prefix}--slider__status-msg`, `${prefix}--form-requirement`)\n      }, t(translationIds.autoCorrectAnnouncement, {\n        correctedValue\n      })));\n    });\n  }\n}\n_defineProperty(Slider, \"propTypes\", {\n  /**\n   * The `ariaLabel` for the `<input>`.\n   */\n  ariaLabelInput: PropTypes.string,\n  /**\n   * The child nodes.\n   */\n  children: PropTypes.node,\n  /**\n   * The CSS class name for the slider.\n   */\n  className: PropTypes.string,\n  /**\n   * `true` to disable this slider.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The callback to format the label associated with the minimum/maximum value.\n   */\n  formatLabel: PropTypes.func,\n  /**\n   * `true` to hide the number input box.\n   */\n  hideTextInput: PropTypes.bool,\n  /**\n   * The ID of the `<input>`.\n   */\n  id: PropTypes.string,\n  /**\n   * The `type` attribute of the `<input>`.\n   */\n  inputType: PropTypes.string,\n  /**\n   * `Specify whether the Slider is currently invalid\n   */\n  invalid: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Slider is in an invalid state\n   */\n  invalidText: PropTypes.node,\n  /**\n   * The label for the slider.\n   */\n  labelText: PropTypes.node,\n  /**\n   * `true` to use the light version.\n   */\n  light: deprecate(PropTypes.bool, 'The `light` prop for `Slider` is no longer needed and has ' + 'been deprecated in v11 in favor of the new `Layer` component. It will be moved in the next major release.'),\n  /**\n   * The maximum value.\n   */\n  max: PropTypes.number.isRequired,\n  /**\n   * The label associated with the maximum value.\n   */\n  maxLabel: PropTypes.string,\n  /**\n   * The minimum value.\n   */\n  min: PropTypes.number.isRequired,\n  /**\n   * The label associated with the minimum value.\n   */\n  minLabel: PropTypes.string,\n  /**\n   * The `name` attribute of the `<input>`.\n   */\n  name: PropTypes.string,\n  /**\n   * Provide an optional function to be called when the input element\n   * loses focus\n   */\n  onBlur: PropTypes.func,\n  /**\n   * The callback to get notified of change in value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Provide an optional function to be called when a key is pressed in the number input\n   */\n  onInputKeyUp: PropTypes.func,\n  /**\n   * The callback to get notified of value on handle release.\n   */\n  onRelease: PropTypes.func,\n  /**\n   * Whether the slider should be read-only\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * `true` to specify if the control is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * A value determining how much the value should increase/decrease by moving the thumb by mouse. If a value other than 1 is provided and the input is *not* hidden, the new step requirement should be added to a visible label. Values outside the `step` increment will be considered invalid.\n   */\n  step: PropTypes.number,\n  /**\n   * A value determining how much the value should increase/decrease by Shift+arrow keys,\n   * which will be `(max - min) / stepMultiplier`.\n   */\n  stepMultiplier: PropTypes.number,\n  /**\n   * Supply a method to translate internal strings with your i18n tool of\n   * choice. Translation keys are available on the `translationIds` field for\n   * this component.\n   */\n  translateWithId: PropTypes.func,\n  /**\n   * The `ariaLabel` for the upper bound `<input>` when there are two handles.\n   */\n  unstable_ariaLabelInputUpper: PropTypes.string,\n  /**\n   * The `name` attribute of the upper bound `<input>` when there are two handles.\n   */\n  unstable_nameUpper: PropTypes.string,\n  /**\n   * The upper bound when there are two handles.\n   */\n  unstable_valueUpper: PropTypes.number,\n  /**\n   * The value of the slider. When there are two handles, value is the lower\n   * bound.\n   */\n  value: PropTypes.number.isRequired,\n  /**\n   * `Specify whether the Slider is in a warn state\n   */\n  warn: PropTypes.bool,\n  /**\n   * Provide the text that is displayed when the Slider is in a warn state\n   */\n  warnText: PropTypes.node\n});\n_defineProperty(Slider, \"contextType\", FeatureFlagContext);\nSlider.translationIds = Object.values(translationIds);\n\nexport { Slider as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}