{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../internal/usePrefix.js';\n\n/**\n * @param {{ name: string, type: string, className?: string | (prefix: string) => string }} props\n * @returns\n */\nconst wrapComponent = _ref => {\n  let {\n    name,\n    className: getClassName,\n    type\n  } = _ref;\n  /**\n   *\n   * @param {{ className?: string, [x: string]: any}} param0\n   * @returns\n   */\n  function Component(_ref2) {\n    let {\n      className: baseClassName,\n      ...other\n    } = _ref2;\n    const prefix = usePrefix();\n    const componentClass = cx(typeof getClassName === 'function' ? getClassName(prefix) : getClassName, baseClassName);\n    return /*#__PURE__*/React__default.createElement(type, {\n      ...other,\n      // Prevent Weird quirk where `cx` will evaluate to an empty string, '',\n      // and so we have empty `class` attributes in the resulting markup\n      // eslint-disable-next-line no-extra-boolean-cast\n      className: !!componentClass ? componentClass : undefined\n    });\n  }\n  Component.displayName = name;\n  Component.propTypes = {\n    className: PropTypes.string\n  };\n  return Component;\n};\nexport { wrapComponent as default };","map":{"version":3,"names":["cx","PropTypes","React__default","usePrefix","wrapComponent","_ref","name","className","getClassName","type","Component","_ref2","baseClassName","other","prefix","componentClass","createElement","undefined","displayName","propTypes","string","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/tools/wrapComponent.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../internal/usePrefix.js';\n\n/**\n * @param {{ name: string, type: string, className?: string | (prefix: string) => string }} props\n * @returns\n */\nconst wrapComponent = _ref => {\n  let {\n    name,\n    className: getClassName,\n    type\n  } = _ref;\n  /**\n   *\n   * @param {{ className?: string, [x: string]: any}} param0\n   * @returns\n   */\n  function Component(_ref2) {\n    let {\n      className: baseClassName,\n      ...other\n    } = _ref2;\n    const prefix = usePrefix();\n    const componentClass = cx(typeof getClassName === 'function' ? getClassName(prefix) : getClassName, baseClassName);\n    return /*#__PURE__*/React__default.createElement(type, {\n      ...other,\n      // Prevent Weird quirk where `cx` will evaluate to an empty string, '',\n      // and so we have empty `class` attributes in the resulting markup\n      // eslint-disable-next-line no-extra-boolean-cast\n      className: !!componentClass ? componentClass : undefined\n    });\n  }\n  Component.displayName = name;\n  Component.propTypes = {\n    className: PropTypes.string\n  };\n  return Component;\n};\n\nexport { wrapComponent as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,SAASC,SAAS,QAAQ,0BAA0B;;AAEpD;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAGC,IAAI,IAAI;EAC5B,IAAI;IACFC,IAAI;IACJC,SAAS,EAAEC,YAAY;IACvBC;EACF,CAAC,GAAGJ,IAAI;EACR;AACF;AACA;AACA;AACA;EACE,SAASK,SAASA,CAACC,KAAK,EAAE;IACxB,IAAI;MACFJ,SAAS,EAAEK,aAAa;MACxB,GAAGC;IACL,CAAC,GAAGF,KAAK;IACT,MAAMG,MAAM,GAAGX,SAAS,CAAC,CAAC;IAC1B,MAAMY,cAAc,GAAGf,EAAE,CAAC,OAAOQ,YAAY,KAAK,UAAU,GAAGA,YAAY,CAACM,MAAM,CAAC,GAAGN,YAAY,EAAEI,aAAa,CAAC;IAClH,OAAO,aAAaV,cAAc,CAACc,aAAa,CAACP,IAAI,EAAE;MACrD,GAAGI,KAAK;MACR;MACA;MACA;MACAN,SAAS,EAAE,CAAC,CAACQ,cAAc,GAAGA,cAAc,GAAGE;IACjD,CAAC,CAAC;EACJ;EACAP,SAAS,CAACQ,WAAW,GAAGZ,IAAI;EAC5BI,SAAS,CAACS,SAAS,GAAG;IACpBZ,SAAS,EAAEN,SAAS,CAACmB;EACvB,CAAC;EACD,OAAOV,SAAS;AAClB,CAAC;AAED,SAASN,aAAa,IAAIiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}