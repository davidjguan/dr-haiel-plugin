{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { warning } from '../../internal/warning.js';\nimport '../Text/index.js';\nimport { Text } from '../Text/Text.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { ArrowDown, ArrowUp } from '../../internal/keyboard/keys.js';\nconst OverflowMenuItem = /*#__PURE__*/React__default.forwardRef(function OverflowMenuItem(_ref, ref) {\n  let {\n    className,\n    closeMenu,\n    disabled = false,\n    handleOverflowMenuItemFocus,\n    hasDivider = false,\n    href,\n    isDelete = false,\n    index,\n    itemText = 'Provide itemText',\n    onClick = () => {},\n    onKeyDown = () => {},\n    requireTitle,\n    title,\n    wrapperClassName,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  function setTabFocus(evt) {\n    if (match(evt, ArrowDown)) {\n      handleOverflowMenuItemFocus === null || handleOverflowMenuItemFocus === void 0 || handleOverflowMenuItemFocus({\n        currentIndex: index,\n        direction: 1\n      });\n    }\n    if (match(evt, ArrowUp)) {\n      handleOverflowMenuItemFocus === null || handleOverflowMenuItemFocus === void 0 || handleOverflowMenuItemFocus({\n        currentIndex: index,\n        direction: -1\n      });\n    }\n  }\n  function handleClick(evt) {\n    onClick(evt);\n    if (closeMenu) {\n      closeMenu();\n    }\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(closeMenu, '`<OverflowMenuItem>` detected missing `closeMenu` prop. ' + '`closeMenu` is required to let `<OverflowMenu>` close the menu upon actions on `<OverflowMenuItem>`. ' + 'Please make sure `<OverflowMenuItem>` is a direct child of `<OverflowMenu>.') : void 0;\n  }\n  const overflowMenuBtnClasses = cx(\"\".concat(prefix, \"--overflow-menu-options__btn\"), className);\n  const overflowMenuItemClasses = cx(\"\".concat(prefix, \"--overflow-menu-options__option\"), {\n    [\"\".concat(prefix, \"--overflow-menu--divider\")]: hasDivider,\n    [\"\".concat(prefix, \"--overflow-menu-options__option--danger\")]: isDelete,\n    [\"\".concat(prefix, \"--overflow-menu-options__option--disabled\")]: disabled\n  }, wrapperClassName);\n  const TagToUse = href ? 'a' : 'button';\n  const OverflowMenuItemContent = (() => {\n    if (typeof itemText !== 'string') {\n      return itemText;\n    }\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--overflow-menu-options__option-content\")\n    }, itemText);\n  })();\n  return /*#__PURE__*/React__default.createElement(Text, {\n    as: \"li\",\n    className: overflowMenuItemClasses,\n    role: \"none\"\n  }, /*#__PURE__*/React__default.createElement(TagToUse, _extends({\n    className: overflowMenuBtnClasses,\n    disabled: disabled,\n    href: href,\n    onClick: handleClick,\n    onKeyDown: evt => {\n      setTabFocus(evt);\n      onKeyDown(evt);\n    },\n    role: \"menuitem\"\n    // ref as any: the type of `ref` is `ForwardedRef<HTMLButtonElement>` in `Button` component\n    // but `OverflowMenuItem` can be rendered as `a` tag as well, which is `HTMLAnchorElement`\n    // so we have to use `any` here\n    ,\n\n    ref: ref,\n    tabIndex: -1\n    // itemText as any: itemText may be a ReactNode, but `title` only accepts string\n    // to avoid compatibility issue, we use `any` here. Consider to enforce `itemText` to be `string?`\n    // in the next major release\n    ,\n\n    title: requireTitle ? title || itemText : undefined\n  }, rest), OverflowMenuItemContent));\n});\nOverflowMenuItem.propTypes = {\n  /**\n   * The CSS class name to be placed on the button element\n   */\n  className: PropTypes.string,\n  /**\n   * A callback to tell the parent menu component that the menu should be closed.\n   */\n  closeMenu: PropTypes.func,\n  /**\n   * `true` to make this menu item disabled.\n   */\n  disabled: PropTypes.bool,\n  handleOverflowMenuItemFocus: PropTypes.func,\n  /**\n   * `true` to make this menu item a divider.\n   */\n  hasDivider: PropTypes.bool,\n  /**\n   * If given, overflow item will render as a link with the given href\n   */\n  href: PropTypes.string,\n  index: PropTypes.number,\n  /**\n   * `true` to make this menu item a \"danger button\".\n   */\n  isDelete: PropTypes.bool,\n  /**\n   * The text in the menu item.\n   */\n  itemText: PropTypes.node.isRequired,\n  /**\n   * event handlers\n   */\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  /**\n   * `true` if this menu item has long text and requires a browser tooltip\n   */\n  requireTitle: PropTypes.bool,\n  /**\n   * Specify a title for the OverflowMenuItem\n   */\n  title: PropTypes.string,\n  /**\n   * The CSS class name to be placed on the wrapper list item element\n   */\n  wrapperClassName: PropTypes.string\n};\nexport { OverflowMenuItem as default };","map":{"version":3,"names":["extends","_extends","cx","PropTypes","React__default","usePrefix","warning","Text","match","ArrowDown","ArrowUp","OverflowMenuItem","forwardRef","_ref","ref","className","closeMenu","disabled","handleOverflowMenuItemFocus","hasDivider","href","isDelete","index","itemText","onClick","onKeyDown","requireTitle","title","wrapperClassName","rest","prefix","setTabFocus","evt","currentIndex","direction","handleClick","process","env","NODE_ENV","overflowMenuBtnClasses","concat","overflowMenuItemClasses","TagToUse","OverflowMenuItemContent","createElement","as","role","tabIndex","undefined","propTypes","string","func","bool","number","node","isRequired","onBlur","onFocus","onKeyUp","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/OverflowMenuItem/OverflowMenuItem.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { warning } from '../../internal/warning.js';\nimport '../Text/index.js';\nimport { Text } from '../Text/Text.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { ArrowDown, ArrowUp } from '../../internal/keyboard/keys.js';\n\nconst OverflowMenuItem = /*#__PURE__*/React__default.forwardRef(function OverflowMenuItem(_ref, ref) {\n  let {\n    className,\n    closeMenu,\n    disabled = false,\n    handleOverflowMenuItemFocus,\n    hasDivider = false,\n    href,\n    isDelete = false,\n    index,\n    itemText = 'Provide itemText',\n    onClick = () => {},\n    onKeyDown = () => {},\n    requireTitle,\n    title,\n    wrapperClassName,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  function setTabFocus(evt) {\n    if (match(evt, ArrowDown)) {\n      handleOverflowMenuItemFocus?.({\n        currentIndex: index,\n        direction: 1\n      });\n    }\n    if (match(evt, ArrowUp)) {\n      handleOverflowMenuItemFocus?.({\n        currentIndex: index,\n        direction: -1\n      });\n    }\n  }\n  function handleClick(evt) {\n    onClick(evt);\n    if (closeMenu) {\n      closeMenu();\n    }\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(closeMenu, '`<OverflowMenuItem>` detected missing `closeMenu` prop. ' + '`closeMenu` is required to let `<OverflowMenu>` close the menu upon actions on `<OverflowMenuItem>`. ' + 'Please make sure `<OverflowMenuItem>` is a direct child of `<OverflowMenu>.') : void 0;\n  }\n  const overflowMenuBtnClasses = cx(`${prefix}--overflow-menu-options__btn`, className);\n  const overflowMenuItemClasses = cx(`${prefix}--overflow-menu-options__option`, {\n    [`${prefix}--overflow-menu--divider`]: hasDivider,\n    [`${prefix}--overflow-menu-options__option--danger`]: isDelete,\n    [`${prefix}--overflow-menu-options__option--disabled`]: disabled\n  }, wrapperClassName);\n  const TagToUse = href ? 'a' : 'button';\n  const OverflowMenuItemContent = (() => {\n    if (typeof itemText !== 'string') {\n      return itemText;\n    }\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: `${prefix}--overflow-menu-options__option-content`\n    }, itemText);\n  })();\n  return /*#__PURE__*/React__default.createElement(Text, {\n    as: \"li\",\n    className: overflowMenuItemClasses,\n    role: \"none\"\n  }, /*#__PURE__*/React__default.createElement(TagToUse, _extends({\n    className: overflowMenuBtnClasses,\n    disabled: disabled,\n    href: href,\n    onClick: handleClick,\n    onKeyDown: evt => {\n      setTabFocus(evt);\n      onKeyDown(evt);\n    },\n    role: \"menuitem\"\n    // ref as any: the type of `ref` is `ForwardedRef<HTMLButtonElement>` in `Button` component\n    // but `OverflowMenuItem` can be rendered as `a` tag as well, which is `HTMLAnchorElement`\n    // so we have to use `any` here\n    ,\n    ref: ref,\n    tabIndex: -1\n    // itemText as any: itemText may be a ReactNode, but `title` only accepts string\n    // to avoid compatibility issue, we use `any` here. Consider to enforce `itemText` to be `string?`\n    // in the next major release\n    ,\n    title: requireTitle ? title || itemText : undefined\n  }, rest), OverflowMenuItemContent));\n});\nOverflowMenuItem.propTypes = {\n  /**\n   * The CSS class name to be placed on the button element\n   */\n  className: PropTypes.string,\n  /**\n   * A callback to tell the parent menu component that the menu should be closed.\n   */\n  closeMenu: PropTypes.func,\n  /**\n   * `true` to make this menu item disabled.\n   */\n  disabled: PropTypes.bool,\n  handleOverflowMenuItemFocus: PropTypes.func,\n  /**\n   * `true` to make this menu item a divider.\n   */\n  hasDivider: PropTypes.bool,\n  /**\n   * If given, overflow item will render as a link with the given href\n   */\n  href: PropTypes.string,\n  index: PropTypes.number,\n  /**\n   * `true` to make this menu item a \"danger button\".\n   */\n  isDelete: PropTypes.bool,\n  /**\n   * The text in the menu item.\n   */\n  itemText: PropTypes.node.isRequired,\n  /**\n   * event handlers\n   */\n  onBlur: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  /**\n   * `true` if this menu item has long text and requires a browser tooltip\n   */\n  requireTitle: PropTypes.bool,\n  /**\n   * Specify a title for the OverflowMenuItem\n   */\n  title: PropTypes.string,\n  /**\n   * The CSS class name to be placed on the wrapper list item element\n   */\n  wrapperClassName: PropTypes.string\n};\n\nexport { OverflowMenuItem as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}