{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\nconst SearchSkeleton = _ref => {\n  let {\n    small = false,\n    className,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const searchClasses = cx(className, {\n    [\"\".concat(prefix, \"--skeleton\")]: true,\n    [\"\".concat(prefix, \"--search--xl\")]: !small,\n    [\"\".concat(prefix, \"--search--sm\")]: small\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: searchClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--label\")\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--search-input\")\n  }));\n};\nSearchSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the Search should be a small variant\n   */\n  small: PropTypes.bool\n};\nexport { SearchSkeleton, SearchSkeleton as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","cx","usePrefix","SearchSkeleton","_ref","small","className","rest","prefix","searchClasses","concat","createElement","propTypes","string","bool","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Search/Search.Skeleton.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport cx from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst SearchSkeleton = _ref => {\n  let {\n    small = false,\n    className,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const searchClasses = cx(className, {\n    [`${prefix}--skeleton`]: true,\n    [`${prefix}--search--xl`]: !small,\n    [`${prefix}--search--sm`]: small\n  });\n  return /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    className: searchClasses\n  }, rest), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: `${prefix}--label`\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--search-input`\n  }));\n};\nSearchSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the Search should be a small variant\n   */\n  small: PropTypes.bool\n};\n\nexport { SearchSkeleton, SearchSkeleton as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,6CAA6C;AACjF,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,SAAS,QAAQ,6BAA6B;AAEvD,MAAMC,cAAc,GAAGC,IAAI,IAAI;EAC7B,IAAI;IACFC,KAAK,GAAG,KAAK;IACbC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGH,IAAI;EACR,MAAMI,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,aAAa,GAAGR,EAAE,CAACK,SAAS,EAAE;IAClC,IAAAI,MAAA,CAAIF,MAAM,kBAAe,IAAI;IAC7B,IAAAE,MAAA,CAAIF,MAAM,oBAAiB,CAACH,KAAK;IACjC,IAAAK,MAAA,CAAIF,MAAM,oBAAiBH;EAC7B,CAAC,CAAC;EACF,OAAO,aAAaL,cAAc,CAACW,aAAa,CAAC,KAAK,EAAEb,QAAQ,CAAC;IAC/DQ,SAAS,EAAEG;EACb,CAAC,EAAEF,IAAI,CAAC,EAAE,aAAaP,cAAc,CAACW,aAAa,CAAC,MAAM,EAAE;IAC1DL,SAAS,KAAAI,MAAA,CAAKF,MAAM;EACtB,CAAC,CAAC,EAAE,aAAaR,cAAc,CAACW,aAAa,CAAC,KAAK,EAAE;IACnDL,SAAS,KAAAI,MAAA,CAAKF,MAAM;EACtB,CAAC,CAAC,CAAC;AACL,CAAC;AACDL,cAAc,CAACS,SAAS,GAAG;EACzB;AACF;AACA;EACEN,SAAS,EAAEP,SAAS,CAACc,MAAM;EAC3B;AACF;AACA;EACER,KAAK,EAAEN,SAAS,CAACe;AACnB,CAAC;AAED,SAASX,cAAc,EAAEA,cAAc,IAAIY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}