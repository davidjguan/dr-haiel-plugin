{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { Close } from '@carbon/icons-react';\nimport toggleClass from '../../tools/toggleClass.js';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport ButtonSet from '../ButtonSet/ButtonSet.js';\nimport InlineLoading from '../InlineLoading/InlineLoading.js';\nimport { Layer } from '../Layer/index.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nimport wrapFocus, { wrapFocusWithoutSentinels, elementOrParentIsFloatingMenu } from '../../internal/wrapFocus.js';\nimport debounce from 'lodash.debounce';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { IconButton } from '../IconButton/index.js';\nimport { noopFn } from '../../internal/noopFn.js';\nimport '../Text/index.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { Text } from '../Text/Text.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape, Enter, Tab } from '../../internal/keyboard/keys.js';\nconst ModalSizes = ['xs', 'sm', 'md', 'lg'];\nconst Modal = /*#__PURE__*/React__default.forwardRef(function Modal(_ref, ref) {\n  var _slug$type;\n  let {\n    'aria-label': ariaLabelProp,\n    children,\n    className,\n    modalHeading = '',\n    modalLabel = '',\n    modalAriaLabel,\n    passiveModal = false,\n    secondaryButtonText,\n    primaryButtonText,\n    open,\n    onRequestClose = noopFn,\n    onRequestSubmit = noopFn,\n    onSecondarySubmit,\n    primaryButtonDisabled = false,\n    danger,\n    alert,\n    secondaryButtons,\n    selectorPrimaryFocus = '[data-modal-primary-focus]',\n    selectorsFloatingMenus,\n    shouldSubmitOnEnter,\n    size,\n    hasScrollingContent = false,\n    closeButtonLabel = 'Close',\n    preventCloseOnClickOutside = false,\n    isFullWidth,\n    launcherButtonRef,\n    loadingStatus = 'inactive',\n    loadingDescription,\n    loadingIconDescription,\n    onLoadingSuccess = noopFn,\n    slug,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const button = useRef(null);\n  const secondaryButton = useRef();\n  const contentRef = useRef(null);\n  const innerModal = useRef(null);\n  const startTrap = useRef(null);\n  const endTrap = useRef(null);\n  const [isScrollable, setIsScrollable] = useState(false);\n  const modalInstanceId = \"modal-\".concat(useId());\n  const modalLabelId = \"\".concat(prefix, \"--modal-header__label--\").concat(modalInstanceId);\n  const modalHeadingId = \"\".concat(prefix, \"--modal-header__heading--\").concat(modalInstanceId);\n  const modalBodyId = \"\".concat(prefix, \"--modal-body--\").concat(modalInstanceId);\n  const modalCloseButtonClass = \"\".concat(prefix, \"--modal-close\");\n  const primaryButtonClass = cx({\n    [\"\".concat(prefix, \"--btn--loading\")]: loadingStatus !== 'inactive'\n  });\n  const loadingActive = loadingStatus !== 'inactive';\n  const focusTrapWithoutSentinels = useFeatureFlag('enable-experimental-focus-wrap-without-sentinels');\n  function isCloseButton(element) {\n    return !onSecondarySubmit && element === secondaryButton.current || element.classList.contains(modalCloseButtonClass);\n  }\n  function handleKeyDown(evt) {\n    evt.stopPropagation();\n    if (open) {\n      if (match(evt, Escape)) {\n        onRequestClose(evt);\n      }\n      if (match(evt, Enter) && shouldSubmitOnEnter && !isCloseButton(evt.target)) {\n        onRequestSubmit(evt);\n      }\n      if (focusTrapWithoutSentinels && match(evt, Tab) && innerModal.current) {\n        wrapFocusWithoutSentinels({\n          containerNode: innerModal.current,\n          currentActiveNode: evt.target,\n          event: evt\n        });\n      }\n    }\n  }\n  function handleOnClick(evt) {\n    const target = evt.target;\n    evt.stopPropagation();\n    if (!preventCloseOnClickOutside && !elementOrParentIsFloatingMenu(target, selectorsFloatingMenus) && innerModal.current && !innerModal.current.contains(target)) {\n      onRequestClose(evt);\n    }\n  }\n  function handleBlur(_ref2) {\n    let {\n      target: oldActiveNode,\n      relatedTarget: currentActiveNode\n    } = _ref2;\n    if (open && currentActiveNode && oldActiveNode) {\n      const {\n        current: bodyNode\n      } = innerModal;\n      const {\n        current: startTrapNode\n      } = startTrap;\n      const {\n        current: endTrapNode\n      } = endTrap;\n      wrapFocus({\n        bodyNode,\n        startTrapNode,\n        endTrapNode,\n        currentActiveNode,\n        oldActiveNode,\n        selectorsFloatingMenus\n      });\n    }\n  }\n  const onSecondaryButtonClick = onSecondarySubmit ? onSecondarySubmit : onRequestClose;\n  const modalClasses = cx(\"\".concat(prefix, \"--modal\"), {\n    [\"\".concat(prefix, \"--modal-tall\")]: !passiveModal,\n    'is-visible': open,\n    [\"\".concat(prefix, \"--modal--danger\")]: danger,\n    [\"\".concat(prefix, \"--modal--slug\")]: slug\n  }, className);\n  const containerClasses = cx(\"\".concat(prefix, \"--modal-container\"), {\n    [\"\".concat(prefix, \"--modal-container--\").concat(size)]: size,\n    [\"\".concat(prefix, \"--modal-container--full-width\")]: isFullWidth\n  });\n  const contentClasses = cx(\"\".concat(prefix, \"--modal-content\"), {\n    [\"\".concat(prefix, \"--modal-scroll-content\")]: hasScrollingContent || isScrollable\n  });\n  const footerClasses = cx(\"\".concat(prefix, \"--modal-footer\"), {\n    [\"\".concat(prefix, \"--modal-footer--three-button\")]: Array.isArray(secondaryButtons) && secondaryButtons.length === 2\n  });\n  const asStringOrUndefined = node => {\n    return typeof node === 'string' ? node : undefined;\n  };\n  const modalLabelStr = asStringOrUndefined(modalLabel);\n  const modalHeadingStr = asStringOrUndefined(modalHeading);\n  const ariaLabel = modalLabelStr || ariaLabelProp || modalAriaLabel || modalHeadingStr;\n  const getAriaLabelledBy = modalLabel ? modalLabelId : modalHeadingId;\n  const hasScrollingContentProps = hasScrollingContent || isScrollable ? {\n    tabIndex: 0,\n    role: 'region',\n    'aria-label': ariaLabel,\n    'aria-labelledby': getAriaLabelledBy\n  } : {};\n  const alertDialogProps = {};\n  if (alert && passiveModal) {\n    alertDialogProps.role = 'alert';\n  }\n  if (alert && !passiveModal) {\n    alertDialogProps.role = 'alertdialog';\n    alertDialogProps['aria-describedby'] = modalBodyId;\n  }\n  useEffect(() => {\n    return () => {\n      toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), false);\n    };\n  }, [prefix]);\n  useEffect(() => {\n    toggleClass(document.body, \"\".concat(prefix, \"--body--with-modal-open\"), open !== null && open !== void 0 ? open : false);\n  }, [open, prefix]);\n  useEffect(() => {\n    if (!open && launcherButtonRef) {\n      setTimeout(() => {\n        var _launcherButtonRef$cu;\n        launcherButtonRef === null || launcherButtonRef === void 0 || (_launcherButtonRef$cu = launcherButtonRef.current) === null || _launcherButtonRef$cu === void 0 || _launcherButtonRef$cu.focus();\n      });\n    }\n  }, [open, launcherButtonRef]);\n  useEffect(() => {\n    const initialFocus = focusContainerElement => {\n      const containerElement = focusContainerElement || innerModal.current;\n      const primaryFocusElement = containerElement ? containerElement.querySelector(danger ? \".\".concat(prefix, \"--btn--secondary\") : selectorPrimaryFocus) : null;\n      if (primaryFocusElement) {\n        return primaryFocusElement;\n      }\n      return button && button.current;\n    };\n    const focusButton = focusContainerElement => {\n      const target = initialFocus(focusContainerElement);\n      if (target !== null) {\n        target.focus();\n      }\n    };\n    if (open) {\n      focusButton(innerModal.current);\n    }\n  }, [open, selectorPrimaryFocus, danger, prefix]);\n  useIsomorphicEffect(() => {\n    if (contentRef.current) {\n      setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n    }\n    function handler() {\n      if (contentRef.current) {\n        setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n      }\n    }\n    const debouncedHandler = debounce(handler, 200);\n    window.addEventListener('resize', debouncedHandler);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  }, []);\n\n  // Slug is always size `sm`\n  let normalizedSlug;\n  if (slug && ((_slug$type = slug['type']) === null || _slug$type === void 0 ? void 0 : _slug$type.displayName) === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'sm'\n    });\n  }\n  const modalButton = /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--modal-close-button\")\n  }, /*#__PURE__*/React__default.createElement(IconButton, {\n    className: modalCloseButtonClass,\n    label: closeButtonLabel,\n    onClick: onRequestClose,\n    \"aria-label\": closeButtonLabel,\n    align: \"left\",\n    ref: button\n  }, /*#__PURE__*/React__default.createElement(Close, {\n    size: 20,\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    className: \"\".concat(modalCloseButtonClass, \"__icon\")\n  })));\n  const modalBody = /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: innerModal,\n    role: \"dialog\"\n  }, alertDialogProps, {\n    className: containerClasses,\n    \"aria-label\": ariaLabel,\n    \"aria-modal\": \"true\",\n    tabIndex: -1\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--modal-header\")\n  }, passiveModal && modalButton, modalLabel && /*#__PURE__*/React__default.createElement(Text, {\n    as: \"h2\",\n    id: modalLabelId,\n    className: \"\".concat(prefix, \"--modal-header__label\")\n  }, modalLabel), /*#__PURE__*/React__default.createElement(Text, {\n    as: \"h3\",\n    id: modalHeadingId,\n    className: \"\".concat(prefix, \"--modal-header__heading\")\n  }, modalHeading), normalizedSlug, !passiveModal && modalButton), /*#__PURE__*/React__default.createElement(Layer, _extends({\n    ref: contentRef,\n    id: modalBodyId,\n    className: contentClasses\n  }, hasScrollingContentProps), children), !passiveModal && /*#__PURE__*/React__default.createElement(ButtonSet, {\n    className: footerClasses,\n    \"aria-busy\": loadingActive\n  }, Array.isArray(secondaryButtons) && secondaryButtons.length <= 2 ? secondaryButtons.map((_ref3, i) => {\n    let {\n      buttonText,\n      onClick: onButtonClick\n    } = _ref3;\n    return /*#__PURE__*/React__default.createElement(Button, {\n      key: \"\".concat(buttonText, \"-\").concat(i),\n      kind: \"secondary\",\n      onClick: onButtonClick\n    }, buttonText);\n  }) : secondaryButtonText && /*#__PURE__*/React__default.createElement(Button, {\n    disabled: loadingActive,\n    kind: \"secondary\",\n    onClick: onSecondaryButtonClick,\n    ref: secondaryButton\n  }, secondaryButtonText), /*#__PURE__*/React__default.createElement(Button, {\n    className: primaryButtonClass,\n    kind: danger ? 'danger' : 'primary',\n    disabled: loadingActive || primaryButtonDisabled,\n    onClick: onRequestSubmit,\n    ref: button\n  }, loadingStatus === 'inactive' ? primaryButtonText : /*#__PURE__*/React__default.createElement(InlineLoading, {\n    status: loadingStatus,\n    description: loadingDescription,\n    iconDescription: loadingIconDescription,\n    className: \"\".concat(prefix, \"--inline-loading--btn\"),\n    onSuccess: onLoadingSuccess\n  }))));\n  return /*#__PURE__*/React__default.createElement(Layer, _extends({}, rest, {\n    level: 0,\n    onKeyDown: handleKeyDown,\n    onClick: composeEventHandlers([rest === null || rest === void 0 ? void 0 : rest.onClick, handleOnClick]),\n    onBlur: !focusTrapWithoutSentinels ? handleBlur : () => {},\n    className: modalClasses,\n    role: \"presentation\",\n    ref: ref\n  }), !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: startTrap,\n    tabIndex: 0,\n    role: \"link\",\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, \"Focus sentinel\"), modalBody, !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: endTrap,\n    tabIndex: 0,\n    role: \"link\",\n    className: \"\".concat(prefix, \"--visually-hidden\")\n  }, \"Focus sentinel\"));\n});\nModal.propTypes = {\n  /**\n   * Specify whether the Modal is displaying an alert, error or warning\n   * Should go hand in hand with the danger prop.\n   */\n  alert: PropTypes.bool,\n  /**\n   * Required props for the accessibility label of the header\n   */\n  ['aria-label']: requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string),\n  /**\n   * Provide the contents of your Modal\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal root node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an label for the close button of the modal; defaults to close\n   */\n  closeButtonLabel: PropTypes.string,\n  /**\n   * Specify whether the Modal is for dangerous actions\n   */\n  danger: PropTypes.bool,\n  /**\n   * Specify whether the modal contains scrolling content\n   */\n  hasScrollingContent: PropTypes.bool,\n  /**\n   * Specify the DOM element ID of the top-level node.\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether or not the Modal content should have any inner padding.\n   */\n  isFullWidth: PropTypes.bool,\n  /**\n   * Provide a ref to return focus to once the modal is closed.\n   */\n  launcherButtonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify the description for the loading text\n   */\n  loadingDescription: PropTypes.string,\n  /**\n   * Specify the description for the loading text\n   */\n  loadingIconDescription: PropTypes.string,\n  /**\n   * loading status\n   */\n  loadingStatus: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n  /**\n   * Specify a label to be read by screen readers on the modal root node\n   */\n  modalAriaLabel: PropTypes.string,\n  /**\n   * Specify the content of the modal header title.\n   */\n  modalHeading: PropTypes.node,\n  /**\n   * Specify the content of the modal header label.\n   */\n  modalLabel: PropTypes.node,\n  /**\n   * Specify a handler for keypresses.\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional handler to be invoked when loading is\n   * successful\n   */\n  onLoadingSuccess: PropTypes.func,\n  /**\n   * Specify a handler for closing modal.\n   * The handler should care of closing modal, e.g. changing `open` prop.\n   */\n  onRequestClose: PropTypes.func,\n  /**\n   * Specify a handler for \"submitting\" modal.\n   * The handler should care of closing modal, e.g. changing `open` prop, if necessary.\n   */\n  onRequestSubmit: PropTypes.func,\n  /**\n   * Specify a handler for the secondary button.\n   * Useful if separate handler from `onRequestClose` is desirable\n   */\n  onSecondarySubmit: PropTypes.func,\n  /**\n   * Specify whether the Modal is currently open\n   */\n  open: PropTypes.bool,\n  /**\n   * Specify whether the modal should be button-less\n   */\n  passiveModal: PropTypes.bool,\n  /**\n   * Prevent closing on click outside of modal\n   */\n  preventCloseOnClickOutside: PropTypes.bool,\n  /**\n   * Specify whether the Button should be disabled, or not\n   */\n  primaryButtonDisabled: PropTypes.bool,\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.node,\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.node,\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: (props, propName, componentName) => {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(\"\".concat(propName, \" needs to be an array of two button config objects\"));\n      }\n      const shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(secondaryButton => {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n    return null;\n  },\n  /**\n   * Specify a CSS selector that matches the DOM element that should\n   * be focused when the Modal opens\n   */\n  selectorPrimaryFocus: PropTypes.string,\n  /**\n   * Specify CSS selectors that match DOM elements working as floating menus.\n   * Focusing on those elements won't trigger \"focus-wrap\" behavior\n   */\n  selectorsFloatingMenus: PropTypes.arrayOf(PropTypes.string.isRequired),\n  /**\n   * Specify if Enter key should be used as \"submit\" action\n   */\n  shouldSubmitOnEnter: PropTypes.bool,\n  /**\n   * Specify the size variant.\n   */\n  size: PropTypes.oneOf(ModalSizes),\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `Modal` component\n   */\n  slug: PropTypes.node\n};\nexport { ModalSizes, Modal as default };","map":{"version":3,"names":["extends","_extends","PropTypes","React__default","useRef","useState","useEffect","cx","Close","toggleClass","Button","ButtonSet","InlineLoading","Layer","requiredIfGivenPropIsTruthy","wrapFocus","wrapFocusWithoutSentinels","elementOrParentIsFloatingMenu","debounce","useIsomorphicEffect","useId","usePrefix","IconButton","noopFn","useFeatureFlag","composeEventHandlers","Text","match","Escape","Enter","Tab","ModalSizes","Modal","forwardRef","_ref","ref","_slug$type","ariaLabelProp","children","className","modalHeading","modalLabel","modalAriaLabel","passiveModal","secondaryButtonText","primaryButtonText","open","onRequestClose","onRequestSubmit","onSecondarySubmit","primaryButtonDisabled","danger","alert","secondaryButtons","selectorPrimaryFocus","selectorsFloatingMenus","shouldSubmitOnEnter","size","hasScrollingContent","closeButtonLabel","preventCloseOnClickOutside","isFullWidth","launcherButtonRef","loadingStatus","loadingDescription","loadingIconDescription","onLoadingSuccess","slug","rest","prefix","button","secondaryButton","contentRef","innerModal","startTrap","endTrap","isScrollable","setIsScrollable","modalInstanceId","concat","modalLabelId","modalHeadingId","modalBodyId","modalCloseButtonClass","primaryButtonClass","loadingActive","focusTrapWithoutSentinels","isCloseButton","element","current","classList","contains","handleKeyDown","evt","stopPropagation","target","containerNode","currentActiveNode","event","handleOnClick","handleBlur","_ref2","oldActiveNode","relatedTarget","bodyNode","startTrapNode","endTrapNode","onSecondaryButtonClick","modalClasses","containerClasses","contentClasses","footerClasses","Array","isArray","length","asStringOrUndefined","node","undefined","modalLabelStr","modalHeadingStr","ariaLabel","getAriaLabelledBy","hasScrollingContentProps","tabIndex","role","alertDialogProps","document","body","setTimeout","_launcherButtonRef$cu","focus","initialFocus","focusContainerElement","containerElement","primaryFocusElement","querySelector","focusButton","scrollHeight","clientHeight","handler","debouncedHandler","window","addEventListener","cancel","removeEventListener","normalizedSlug","displayName","cloneElement","modalButton","createElement","label","onClick","align","modalBody","as","id","map","_ref3","i","buttonText","onButtonClick","key","kind","disabled","status","description","iconDescription","onSuccess","level","onKeyDown","onBlur","propTypes","bool","string","oneOfType","func","shape","any","oneOf","props","propName","componentName","Error","forEach","checkPropTypes","arrayOf","isRequired","default"],"sources":["/Users/davidguan/Local Sites/e/app/public/wp-content/plugins/drhaiel/ls_uhcc_bot_fe/node_modules/@carbon/react/es/components/Modal/Modal.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport PropTypes from 'prop-types';\nimport React__default, { useRef, useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { Close } from '@carbon/icons-react';\nimport toggleClass from '../../tools/toggleClass.js';\nimport Button from '../Button/Button.js';\nimport '../Button/Button.Skeleton.js';\nimport ButtonSet from '../ButtonSet/ButtonSet.js';\nimport InlineLoading from '../InlineLoading/InlineLoading.js';\nimport { Layer } from '../Layer/index.js';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy.js';\nimport wrapFocus, { wrapFocusWithoutSentinels, elementOrParentIsFloatingMenu } from '../../internal/wrapFocus.js';\nimport debounce from 'lodash.debounce';\nimport useIsomorphicEffect from '../../internal/useIsomorphicEffect.js';\nimport { useId } from '../../internal/useId.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { IconButton } from '../IconButton/index.js';\nimport { noopFn } from '../../internal/noopFn.js';\nimport '../Text/index.js';\nimport { useFeatureFlag } from '../FeatureFlags/index.js';\nimport { composeEventHandlers } from '../../tools/events.js';\nimport { Text } from '../Text/Text.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape, Enter, Tab } from '../../internal/keyboard/keys.js';\n\nconst ModalSizes = ['xs', 'sm', 'md', 'lg'];\nconst Modal = /*#__PURE__*/React__default.forwardRef(function Modal(_ref, ref) {\n  let {\n    'aria-label': ariaLabelProp,\n    children,\n    className,\n    modalHeading = '',\n    modalLabel = '',\n    modalAriaLabel,\n    passiveModal = false,\n    secondaryButtonText,\n    primaryButtonText,\n    open,\n    onRequestClose = noopFn,\n    onRequestSubmit = noopFn,\n    onSecondarySubmit,\n    primaryButtonDisabled = false,\n    danger,\n    alert,\n    secondaryButtons,\n    selectorPrimaryFocus = '[data-modal-primary-focus]',\n    selectorsFloatingMenus,\n    shouldSubmitOnEnter,\n    size,\n    hasScrollingContent = false,\n    closeButtonLabel = 'Close',\n    preventCloseOnClickOutside = false,\n    isFullWidth,\n    launcherButtonRef,\n    loadingStatus = 'inactive',\n    loadingDescription,\n    loadingIconDescription,\n    onLoadingSuccess = noopFn,\n    slug,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const button = useRef(null);\n  const secondaryButton = useRef();\n  const contentRef = useRef(null);\n  const innerModal = useRef(null);\n  const startTrap = useRef(null);\n  const endTrap = useRef(null);\n  const [isScrollable, setIsScrollable] = useState(false);\n  const modalInstanceId = `modal-${useId()}`;\n  const modalLabelId = `${prefix}--modal-header__label--${modalInstanceId}`;\n  const modalHeadingId = `${prefix}--modal-header__heading--${modalInstanceId}`;\n  const modalBodyId = `${prefix}--modal-body--${modalInstanceId}`;\n  const modalCloseButtonClass = `${prefix}--modal-close`;\n  const primaryButtonClass = cx({\n    [`${prefix}--btn--loading`]: loadingStatus !== 'inactive'\n  });\n  const loadingActive = loadingStatus !== 'inactive';\n  const focusTrapWithoutSentinels = useFeatureFlag('enable-experimental-focus-wrap-without-sentinels');\n  function isCloseButton(element) {\n    return !onSecondarySubmit && element === secondaryButton.current || element.classList.contains(modalCloseButtonClass);\n  }\n  function handleKeyDown(evt) {\n    evt.stopPropagation();\n    if (open) {\n      if (match(evt, Escape)) {\n        onRequestClose(evt);\n      }\n      if (match(evt, Enter) && shouldSubmitOnEnter && !isCloseButton(evt.target)) {\n        onRequestSubmit(evt);\n      }\n      if (focusTrapWithoutSentinels && match(evt, Tab) && innerModal.current) {\n        wrapFocusWithoutSentinels({\n          containerNode: innerModal.current,\n          currentActiveNode: evt.target,\n          event: evt\n        });\n      }\n    }\n  }\n  function handleOnClick(evt) {\n    const target = evt.target;\n    evt.stopPropagation();\n    if (!preventCloseOnClickOutside && !elementOrParentIsFloatingMenu(target, selectorsFloatingMenus) && innerModal.current && !innerModal.current.contains(target)) {\n      onRequestClose(evt);\n    }\n  }\n  function handleBlur(_ref2) {\n    let {\n      target: oldActiveNode,\n      relatedTarget: currentActiveNode\n    } = _ref2;\n    if (open && currentActiveNode && oldActiveNode) {\n      const {\n        current: bodyNode\n      } = innerModal;\n      const {\n        current: startTrapNode\n      } = startTrap;\n      const {\n        current: endTrapNode\n      } = endTrap;\n      wrapFocus({\n        bodyNode,\n        startTrapNode,\n        endTrapNode,\n        currentActiveNode,\n        oldActiveNode,\n        selectorsFloatingMenus\n      });\n    }\n  }\n  const onSecondaryButtonClick = onSecondarySubmit ? onSecondarySubmit : onRequestClose;\n  const modalClasses = cx(`${prefix}--modal`, {\n    [`${prefix}--modal-tall`]: !passiveModal,\n    'is-visible': open,\n    [`${prefix}--modal--danger`]: danger,\n    [`${prefix}--modal--slug`]: slug\n  }, className);\n  const containerClasses = cx(`${prefix}--modal-container`, {\n    [`${prefix}--modal-container--${size}`]: size,\n    [`${prefix}--modal-container--full-width`]: isFullWidth\n  });\n  const contentClasses = cx(`${prefix}--modal-content`, {\n    [`${prefix}--modal-scroll-content`]: hasScrollingContent || isScrollable\n  });\n  const footerClasses = cx(`${prefix}--modal-footer`, {\n    [`${prefix}--modal-footer--three-button`]: Array.isArray(secondaryButtons) && secondaryButtons.length === 2\n  });\n  const asStringOrUndefined = node => {\n    return typeof node === 'string' ? node : undefined;\n  };\n  const modalLabelStr = asStringOrUndefined(modalLabel);\n  const modalHeadingStr = asStringOrUndefined(modalHeading);\n  const ariaLabel = modalLabelStr || ariaLabelProp || modalAriaLabel || modalHeadingStr;\n  const getAriaLabelledBy = modalLabel ? modalLabelId : modalHeadingId;\n  const hasScrollingContentProps = hasScrollingContent || isScrollable ? {\n    tabIndex: 0,\n    role: 'region',\n    'aria-label': ariaLabel,\n    'aria-labelledby': getAriaLabelledBy\n  } : {};\n  const alertDialogProps = {};\n  if (alert && passiveModal) {\n    alertDialogProps.role = 'alert';\n  }\n  if (alert && !passiveModal) {\n    alertDialogProps.role = 'alertdialog';\n    alertDialogProps['aria-describedby'] = modalBodyId;\n  }\n  useEffect(() => {\n    return () => {\n      toggleClass(document.body, `${prefix}--body--with-modal-open`, false);\n    };\n  }, [prefix]);\n  useEffect(() => {\n    toggleClass(document.body, `${prefix}--body--with-modal-open`, open ?? false);\n  }, [open, prefix]);\n  useEffect(() => {\n    if (!open && launcherButtonRef) {\n      setTimeout(() => {\n        launcherButtonRef?.current?.focus();\n      });\n    }\n  }, [open, launcherButtonRef]);\n  useEffect(() => {\n    const initialFocus = focusContainerElement => {\n      const containerElement = focusContainerElement || innerModal.current;\n      const primaryFocusElement = containerElement ? containerElement.querySelector(danger ? `.${prefix}--btn--secondary` : selectorPrimaryFocus) : null;\n      if (primaryFocusElement) {\n        return primaryFocusElement;\n      }\n      return button && button.current;\n    };\n    const focusButton = focusContainerElement => {\n      const target = initialFocus(focusContainerElement);\n      if (target !== null) {\n        target.focus();\n      }\n    };\n    if (open) {\n      focusButton(innerModal.current);\n    }\n  }, [open, selectorPrimaryFocus, danger, prefix]);\n  useIsomorphicEffect(() => {\n    if (contentRef.current) {\n      setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n    }\n    function handler() {\n      if (contentRef.current) {\n        setIsScrollable(contentRef.current.scrollHeight > contentRef.current.clientHeight);\n      }\n    }\n    const debouncedHandler = debounce(handler, 200);\n    window.addEventListener('resize', debouncedHandler);\n    return () => {\n      debouncedHandler.cancel();\n      window.removeEventListener('resize', debouncedHandler);\n    };\n  }, []);\n\n  // Slug is always size `sm`\n  let normalizedSlug;\n  if (slug && slug['type']?.displayName === 'Slug') {\n    normalizedSlug = /*#__PURE__*/React__default.cloneElement(slug, {\n      size: 'sm'\n    });\n  }\n  const modalButton = /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--modal-close-button`\n  }, /*#__PURE__*/React__default.createElement(IconButton, {\n    className: modalCloseButtonClass,\n    label: closeButtonLabel,\n    onClick: onRequestClose,\n    \"aria-label\": closeButtonLabel,\n    align: \"left\",\n    ref: button\n  }, /*#__PURE__*/React__default.createElement(Close, {\n    size: 20,\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    className: `${modalCloseButtonClass}__icon`\n  })));\n  const modalBody = /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: innerModal,\n    role: \"dialog\"\n  }, alertDialogProps, {\n    className: containerClasses,\n    \"aria-label\": ariaLabel,\n    \"aria-modal\": \"true\",\n    tabIndex: -1\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--modal-header`\n  }, passiveModal && modalButton, modalLabel && /*#__PURE__*/React__default.createElement(Text, {\n    as: \"h2\",\n    id: modalLabelId,\n    className: `${prefix}--modal-header__label`\n  }, modalLabel), /*#__PURE__*/React__default.createElement(Text, {\n    as: \"h3\",\n    id: modalHeadingId,\n    className: `${prefix}--modal-header__heading`\n  }, modalHeading), normalizedSlug, !passiveModal && modalButton), /*#__PURE__*/React__default.createElement(Layer, _extends({\n    ref: contentRef,\n    id: modalBodyId,\n    className: contentClasses\n  }, hasScrollingContentProps), children), !passiveModal && /*#__PURE__*/React__default.createElement(ButtonSet, {\n    className: footerClasses,\n    \"aria-busy\": loadingActive\n  }, Array.isArray(secondaryButtons) && secondaryButtons.length <= 2 ? secondaryButtons.map((_ref3, i) => {\n    let {\n      buttonText,\n      onClick: onButtonClick\n    } = _ref3;\n    return /*#__PURE__*/React__default.createElement(Button, {\n      key: `${buttonText}-${i}`,\n      kind: \"secondary\",\n      onClick: onButtonClick\n    }, buttonText);\n  }) : secondaryButtonText && /*#__PURE__*/React__default.createElement(Button, {\n    disabled: loadingActive,\n    kind: \"secondary\",\n    onClick: onSecondaryButtonClick,\n    ref: secondaryButton\n  }, secondaryButtonText), /*#__PURE__*/React__default.createElement(Button, {\n    className: primaryButtonClass,\n    kind: danger ? 'danger' : 'primary',\n    disabled: loadingActive || primaryButtonDisabled,\n    onClick: onRequestSubmit,\n    ref: button\n  }, loadingStatus === 'inactive' ? primaryButtonText : /*#__PURE__*/React__default.createElement(InlineLoading, {\n    status: loadingStatus,\n    description: loadingDescription,\n    iconDescription: loadingIconDescription,\n    className: `${prefix}--inline-loading--btn`,\n    onSuccess: onLoadingSuccess\n  }))));\n  return /*#__PURE__*/React__default.createElement(Layer, _extends({}, rest, {\n    level: 0,\n    onKeyDown: handleKeyDown,\n    onClick: composeEventHandlers([rest?.onClick, handleOnClick]),\n    onBlur: !focusTrapWithoutSentinels ? handleBlur : () => {},\n    className: modalClasses,\n    role: \"presentation\",\n    ref: ref\n  }), !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: startTrap,\n    tabIndex: 0,\n    role: \"link\",\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\"), modalBody, !focusTrapWithoutSentinels && /*#__PURE__*/React__default.createElement(\"span\", {\n    ref: endTrap,\n    tabIndex: 0,\n    role: \"link\",\n    className: `${prefix}--visually-hidden`\n  }, \"Focus sentinel\"));\n});\nModal.propTypes = {\n  /**\n   * Specify whether the Modal is displaying an alert, error or warning\n   * Should go hand in hand with the danger prop.\n   */\n  alert: PropTypes.bool,\n  /**\n   * Required props for the accessibility label of the header\n   */\n  ['aria-label']: requiredIfGivenPropIsTruthy('hasScrollingContent', PropTypes.string),\n  /**\n   * Provide the contents of your Modal\n   */\n  children: PropTypes.node,\n  /**\n   * Specify an optional className to be applied to the modal root node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify an label for the close button of the modal; defaults to close\n   */\n  closeButtonLabel: PropTypes.string,\n  /**\n   * Specify whether the Modal is for dangerous actions\n   */\n  danger: PropTypes.bool,\n  /**\n   * Specify whether the modal contains scrolling content\n   */\n  hasScrollingContent: PropTypes.bool,\n  /**\n   * Specify the DOM element ID of the top-level node.\n   */\n  id: PropTypes.string,\n  /**\n   * Specify whether or not the Modal content should have any inner padding.\n   */\n  isFullWidth: PropTypes.bool,\n  /**\n   * Provide a ref to return focus to once the modal is closed.\n   */\n  launcherButtonRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]),\n  /**\n   * Specify the description for the loading text\n   */\n  loadingDescription: PropTypes.string,\n  /**\n   * Specify the description for the loading text\n   */\n  loadingIconDescription: PropTypes.string,\n  /**\n   * loading status\n   */\n  loadingStatus: PropTypes.oneOf(['inactive', 'active', 'finished', 'error']),\n  /**\n   * Specify a label to be read by screen readers on the modal root node\n   */\n  modalAriaLabel: PropTypes.string,\n  /**\n   * Specify the content of the modal header title.\n   */\n  modalHeading: PropTypes.node,\n  /**\n   * Specify the content of the modal header label.\n   */\n  modalLabel: PropTypes.node,\n  /**\n   * Specify a handler for keypresses.\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Provide an optional handler to be invoked when loading is\n   * successful\n   */\n  onLoadingSuccess: PropTypes.func,\n  /**\n   * Specify a handler for closing modal.\n   * The handler should care of closing modal, e.g. changing `open` prop.\n   */\n  onRequestClose: PropTypes.func,\n  /**\n   * Specify a handler for \"submitting\" modal.\n   * The handler should care of closing modal, e.g. changing `open` prop, if necessary.\n   */\n  onRequestSubmit: PropTypes.func,\n  /**\n   * Specify a handler for the secondary button.\n   * Useful if separate handler from `onRequestClose` is desirable\n   */\n  onSecondarySubmit: PropTypes.func,\n  /**\n   * Specify whether the Modal is currently open\n   */\n  open: PropTypes.bool,\n  /**\n   * Specify whether the modal should be button-less\n   */\n  passiveModal: PropTypes.bool,\n  /**\n   * Prevent closing on click outside of modal\n   */\n  preventCloseOnClickOutside: PropTypes.bool,\n  /**\n   * Specify whether the Button should be disabled, or not\n   */\n  primaryButtonDisabled: PropTypes.bool,\n  /**\n   * Specify the text for the primary button\n   */\n  primaryButtonText: PropTypes.node,\n  /**\n   * Specify the text for the secondary button\n   */\n  secondaryButtonText: PropTypes.node,\n  /**\n   * Specify an array of config objects for secondary buttons\n   * (`Array<{\n   *   buttonText: string,\n   *   onClick: function,\n   * }>`).\n   */\n  secondaryButtons: (props, propName, componentName) => {\n    if (props.secondaryButtons) {\n      if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {\n        return new Error(`${propName} needs to be an array of two button config objects`);\n      }\n      const shape = {\n        buttonText: PropTypes.node,\n        onClick: PropTypes.func\n      };\n      props[propName].forEach(secondaryButton => {\n        PropTypes.checkPropTypes(shape, secondaryButton, propName, componentName);\n      });\n    }\n    return null;\n  },\n  /**\n   * Specify a CSS selector that matches the DOM element that should\n   * be focused when the Modal opens\n   */\n  selectorPrimaryFocus: PropTypes.string,\n  /**\n   * Specify CSS selectors that match DOM elements working as floating menus.\n   * Focusing on those elements won't trigger \"focus-wrap\" behavior\n   */\n  selectorsFloatingMenus: PropTypes.arrayOf(PropTypes.string.isRequired),\n  /**\n   * Specify if Enter key should be used as \"submit\" action\n   */\n  shouldSubmitOnEnter: PropTypes.bool,\n  /**\n   * Specify the size variant.\n   */\n  size: PropTypes.oneOf(ModalSizes),\n  /**\n   * **Experimental**: Provide a `Slug` component to be rendered inside the `Modal` component\n   */\n  slug: PropTypes.node\n};\n\nexport { ModalSizes, Modal as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}